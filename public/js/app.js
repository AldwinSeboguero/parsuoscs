(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/js/app"],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/charts/ApexBarChart.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/charts/ApexBarChart.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _vue_composition_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vue/composition-api */ "./node_modules/@vue/composition-api/dist/vue-composition-api.mjs");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = (Object(_vue_composition_api__WEBPACK_IMPORTED_MODULE_0__["defineComponent"])({
  props: {
    datas: Array,
    pendingR: Array
  },
  data: function data() {
    var _value, _chartOptions;

    console.log(this.pendingR);
    return {
      series: this.datas,
      chartOptions: (_chartOptions = {
        stroke: {
          // show: false,
          curve: 'smooth',
          lineCap: 'butt',
          width: 8
        },
        states: {
          hover: {
            filter: {
              type: 'none'
            }
          }
        },
        colors: ['#2E7D32', 'rgba(255,180,0,1)'],
        legend: {
          fontSize: '14px',
          fontFamily: 'Helvetica, Arial',
          fontWeight: 400,
          itemMargin: {// vertical: 10
          },
          formatter: function formatter(seriesName, opts) {
            return '<div class="legend-info">' + '<span>1' + opts.w.globals.series[opts.seriesIndex] + '</span>' + '<span>' + seriesName + '</span>' + '</div>';
          }
        },
        tooltip: {
          enabled: true,
          style: {
            fontSize: '20px',
            fontFamily: undefined
          },
          y: {
            formatter: function formatter(value) {
              return Number(value).toLocaleString();
            }
          }
        },
        dataLabels: {
          enabled: false
        },
        labels: ['Approved', 'Pending']
      }, _defineProperty(_chartOptions, "legend", {
        show: false
      }), _defineProperty(_chartOptions, "plotOptions", {
        pie: {
          donut: {
            labels: {
              show: true,
              name: {
                show: true,
                fontSize: '32px',
                fontFamily: 'Roboto,sans-serif',
                color: '#dfsda',
                offsetY: 24
              },
              total: {
                show: true,
                fontFamily: 'Roboto,sans-serif',
                label: 'Total',
                color: '#424242',
                fontSize: '18px',
                fontWeight: 50,
                offsetY: 16,
                formatter: function formatter(w) {
                  return Number(w.globals.seriesTotals.reduce(function (a, b) {
                    return a + b;
                  }, 0)).toLocaleString();
                }
              },
              value: (_value = {
                show: true,
                fontSize: '32px',
                fontWeight: 600,
                fontFamily: 'Helvetica, Arial, sans-serif',
                color: "#424242"
              }, _defineProperty(_value, "fontFamily", 'Roboto,sans-serif'), _defineProperty(_value, "offsetY", -20), _defineProperty(_value, "formatter", function formatter(val) {
                return Number(val).toLocaleString();
              }), _value)
            }
          }
        }
      }), _chartOptions)
    };
  },
  setup: function setup() {}
}));

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ActiveClearanceComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _shared_table_OSCSActiveClearanceEnrollmentTable_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../shared/table/OSCSActiveClearanceEnrollmentTable.vue */ "./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue");
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
  components: {
    OSCSACctiveClearaneTable: _shared_table_OSCSActiveClearanceEnrollmentTable_vue__WEBPACK_IMPORTED_MODULE_0__["default"]
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.es.min.js");
/* harmony import */ var jspdf_autotable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
/* harmony import */ var jspdf_autotable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jspdf_autotable__WEBPACK_IMPORTED_MODULE_1__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      stad: null,
      valid: true,
      dialog: false,
      submittedClearance: '',
      staffRegistrar_id: 0,
      deficiencydialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      deficiency_designee: "",
      headers: [{
        text: "Office",
        value: "office"
      }, {
        text: "Designee",
        value: "designee"
      }, {
        text: "Status",
        value: "status"
      }, {
        text: "Action",
        value: "actions"
      }],
      deficiencyheaders: [{
        text: "Deficiency",
        value: "title"
      }, {
        text: "Note",
        value: "note"
      }, {
        text: "Status",
        value: "completed"
      }],
      clearanceStatus: "0",
      clearances: [],
      clearance: {},
      student: {},
      deficiencies: [],
      deficiencySignatory: "",
      activeClearancePurpose: "",
      editedIndex: -1,
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: ""
      },
      submitRequestItem: {
        office: "",
        designee: "",
        status: "",
        data_approved: "",
        deficiencyCount: "",
        clearanceRequestCount: "",
        staff_id: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: ""
      },
      heading: "Sample PDF Generator",
      moreText: ["This is another few sentences of text to look at it.", "Just testing the paragraphs to see how they format.", "jsPDF likes arrays for sentences.", "Do paragraphs wrap properly?", "Yes, they do!", "What does it look like?", "Not bad at all."],
      items: [{
        title: "Item 1",
        body: "I am item 1 body text"
      }, {
        title: "Item 2",
        body: "I am item 2 body text"
      }, {
        title: "Item 3",
        body: "I am item 3 body text"
      }, {
        title: "Item 4",
        body: "I am item 4 body text"
      }]
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    submitClearance: function submitClearance() {
      var _this = this;

      axios.post("/api/v1/submitClearance", {
        clearance_id: this.clearance.id,
        staff_id: this.staffRegistrar_id
      }).then(function (res) {
        _this.submittedClearance = res.data.submittedClearance;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    generatePDF: function generatePDF() {
      var _this2 = this;

      axios.get('/api/v1/pdf-create', {
        responseType: 'blob',
        params: {
          'clearance': this.clearance.id
        }
      }).then(function (response) {
        var fileURL = window.URL.createObjectURL(new Blob([response.data], {
          type: 'application/pdf'
        }));
        var fileLink = document.createElement('a');
        fileLink.href = fileURL;
        fileLink.setAttribute('download', _this2.student.name + _this2.clearance.id + '.pdf');
        document.body.appendChild(fileLink);
        fileLink.click();
      }); // const columns = [
      //   { title: "Office", dataKey: "office" },
      // { title: "Designee", dataKey: "designee" },
      // { title: "Date Approved", dataKey: "data_approved" },
      // ];
      // const doc = new jspdf({
      //   orientation: "portrait",
      //   unit: "in",
      //   format: "letter"
      // });
      // // text is placed using x, y coordinates
      // doc.setFontSize(16).text(this.heading, 0.5, 1.0);
      // // create a line under heading 
      // doc.setLineWidth(0.01).line(0.5, 1.1, 8.0, 1.1);
      // // Using autoTable plugin
      // doc.autoTable({
      //    headStyles: { fillColor: [0, 0, 0] }, 
      //   columns,
      //   body: this.clearances,
      //   margin: { left: 0.5, top: 1.25 }
      // });
      // // Using array of sentences
      // // doc
      // //   .setFont("helvetica")
      // //   .setFontSize(12)
      // //   .text(this.moreText, 0.5, 3.5, { align: "left", maxWidth: "7.5" });
      // // Creating footer and saving file
      // doc
      //   .setTextColor(0, 0, 255)
      //   .text(
      //     "This is a simple footer located .5 inches from page bottom",
      //     0.5,
      //     doc.internal.pageSize.height - 0.5
      //   )
      //   .save(`${this.activeClearancePurpose}.pdf`);
    },
    viewDeficiency: function viewDeficiency(item) {
      this.deficiencydialog = true;
      this.deficiency_designee = item.designee;
      this.deficiencies = Object.assign({}, item.deficiency);
      console.log(item);
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.get("/api/v1/activeClearance").then(function (res) {
        console.log(res.data.approvedDateclearanceRequestSTCOUNCIL);
        _this3.stad = res.data.stad;
        _this3.student = res.data.student;
        _this3.activeClearancePurpose = res.data.activeClearancePurpose;
        _this3.clearance = res.data.clearance;
        _this3.submittedClearance = res.data.submittedClearance;
        _this3.staffRegistrar_id = res.data.staffIdREGISTRARSTAFF;
        console.log(_this3.clearance.cashier);
        _this3.clearances = [{
          office: "Adviser",
          designee: res.data.signatoryNameclearanceRequestDEAN ? res.data.signatoryNameclearanceRequestDEAN.name : null,
          status: res.data.clearance.college_deaan,
          data_approved: res.data.approvedDateclearanceRequestDEAN,
          deficiencyCount: res.data.countDeficiencyDEAN,
          deficiency: res.data.deficiencyDEAN,
          clearanceRequestCount: res.data.countClearanceRequestDEAN ? 1 : 0,
          staff_id: res.data.staffIdDEAN
        }, {
          office: "Principal",
          designee: res.data.signatoryNameclearanceRequestREGISTRARSTAFF ? res.data.signatoryNameclearanceRequestREGISTRARSTAFF.name : null,
          status: res.data.clearance.college_deaan == 0 ? 2 : res.data.clearance.registrar,
          data_approved: res.data.approvedDateclearanceRequestREGISTRARSTAFF ? res.data.approvedDateclearanceRequestREGISTRARSTAFF : res.data.approvedDateclearanceRequestREGISTRAR,
          deficiencyCount: res.data.countDeficiencyREGISTRARSTAFF,
          deficiency: res.data.deficiencyREGISTRARSTAFF,
          clearanceRequestCount: res.data.countClearanceRequestREGISTRARSTAFF ? 1 : 0,
          staff_id: res.data.staffIdREGISTRARSTAFF
        }];
      })["catch"](function (err) {
        console.error(err);
      });
    },
    sendRequest: function sendRequest(item) {
      var _this4 = this;

      this.submitRequestItem = Object.assign({}, item);
      console.log(this.submitRequestItem);
      axios.post("/api/v1/sendRequest", this.submitRequestItem).then(function (res) {
        console.log(res.data.approvedDateclearanceRequestSTCOUNCIL);
        _this4.stad = res.data.stad;
        _this4.submittedClearance = res.data.submittedClearance;
        _this4.staffRegistrar_id = res.data.staffIdREGISTRARSTAFF; // this.activeClearancePurpose = res.data.activeClearancePurpose;

        _this4.clearance = res.data.clearance;
        _this4.clearances = [{
          office: "Adviser",
          designee: res.data.signatoryNameclearanceRequestDEAN ? res.data.signatoryNameclearanceRequestDEAN.name : null,
          status: res.data.clearance.program_director == 0 ? 2 : res.data.clearance.college_deaan,
          data_approved: res.data.approvedDateclearanceRequestDEAN,
          deficiencyCount: res.data.countDeficiencyDEAN,
          deficiency: res.data.deficiencyDEAN,
          clearanceRequestCount: res.data.countClearanceRequestDEAN ? 1 : 0,
          staff_id: res.data.staffIdDEAN
        }, {
          office: "Principal",
          designee: res.data.signatoryNameclearanceRequestREGISTRARSTAFF ? res.data.signatoryNameclearanceRequestREGISTRARSTAFF.name : null,
          status: res.data.clearance.college_deaan == 0 ? 2 : res.data.clearance.registrar,
          data_approved: res.data.approvedDateclearanceRequestREGISTRARSTAFF ? res.data.approvedDateclearanceRequestREGISTRARSTAFF : res.data.approvedDateclearanceRequestREGISTRAR,
          deficiencyCount: res.data.countDeficiencyREGISTRARSTAFF,
          deficiency: res.data.deficiencyREGISTRARSTAFF,
          clearanceRequestCount: res.data.countClearanceRequestREGISTRARSTAFF ? 1 : 0,
          staff_id: res.data.staffIdREGISTRARSTAFF
        }];
      })["catch"](function (err) {
        console.error(err);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearances.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this5 = this;

      var index = this.clearances.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/clearancerequests/" + item.id).then(function (res) {
          _this5.text = "Record Deleted Successfully!";
          _this5.snackbar = true;

          _this5.clearancerequests.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this5.text = "Error Deleting Record";
          _this5.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this6 = this;

      this.dialog = false;
      setTimeout(function () {
        _this6.editedItem = Object.assign({}, _this6.defaultItem);
        _this6.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this7 = this;

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/clearancerequests/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this7.text = "Record Updated Successfully!";
          _this7.snackbar = true;
          Object.assign(_this7.clearances.data[index], res.data.clearancerequests);
        })["catch"](function (err) {
          console.log(err.response);
          _this7.text = "Error Updating Record";
          _this7.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.es.min.js");
/* harmony import */ var jspdf_autotable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
/* harmony import */ var jspdf_autotable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jspdf_autotable__WEBPACK_IMPORTED_MODULE_1__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      stad: null,
      dialog: false,
      purposeVal: null,
      submittedClearance: '',
      staffRegistrar_id: 0,
      deficiencydialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      deficiency_designee: "",
      headers: [{
        text: "Office",
        value: "office"
      }, {
        text: "Designee",
        value: "designee"
      }, {
        text: "Status",
        value: "status"
      }, {
        text: "Action",
        value: "actions"
      }],
      deficiencyheaders: [{
        text: "Deficiency",
        value: "title"
      }, {
        text: "Note",
        value: "note"
      }, {
        text: "Status",
        value: "completed"
      }],
      clearanceStatus: "0",
      clearances: [],
      clearance: {},
      student: {},
      deficiencies: [],
      deficiencySignatory: "",
      activeClearancePurpose: "",
      editedIndex: -1,
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: ""
      },
      submitRequestItem: {
        office: "",
        designee: "",
        status: "",
        data_approved: "",
        deficiencyCount: "",
        clearanceRequestCount: "",
        staff_id: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: ""
      },
      heading: "Sample PDF Generator",
      moreText: ["This is another few sentences of text to look at it.", "Just testing the paragraphs to see how they format.", "jsPDF likes arrays for sentences.", "Do paragraphs wrap properly?", "Yes, they do!", "What does it look like?", "Not bad at all."],
      items: [{
        title: "Item 1",
        body: "I am item 1 body text"
      }, {
        title: "Item 2",
        body: "I am item 2 body text"
      }, {
        title: "Item 3",
        body: "I am item 3 body text"
      }, {
        title: "Item 4",
        body: "I am item 4 body text"
      }]
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    submitClearance: function submitClearance() {
      var _this = this;

      axios.post("/api/v1/submitClearance", {
        clearance_id: this.clearance.id,
        staff_id: this.staffRegistrar_id
      }).then(function (res) {
        _this.submittedClearance = res.data.submittedClearance;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    generatePDF: function generatePDF() {
      var _this2 = this;

      axios.get('/api/v1/sgs/pdf-create', {
        responseType: 'blob',
        params: {
          'clearance': this.clearance.id
        }
      }).then(function (response) {
        var fileURL = window.URL.createObjectURL(new Blob([response.data], {
          type: 'application/pdf'
        }));
        var fileLink = document.createElement('a');
        fileLink.href = fileURL;
        fileLink.setAttribute('download', _this2.student.name + _this2.clearance.id + '.pdf');
        document.body.appendChild(fileLink);
        fileLink.click();
      }); // const columns = [
      //   { title: "Office", dataKey: "office" },
      // { title: "Designee", dataKey: "designee" },
      // { title: "Date Approved", dataKey: "data_approved" },
      // ];
      // const doc = new jspdf({
      //   orientation: "portrait",
      //   unit: "in",
      //   format: "letter"
      // });
      // // text is placed using x, y coordinates
      // doc.setFontSize(16).text(this.heading, 0.5, 1.0);
      // // create a line under heading 
      // doc.setLineWidth(0.01).line(0.5, 1.1, 8.0, 1.1);
      // // Using autoTable plugin
      // doc.autoTable({
      //    headStyles: { fillColor: [0, 0, 0] }, 
      //   columns,
      //   body: this.clearances,
      //   margin: { left: 0.5, top: 1.25 }
      // });
      // // Using array of sentences
      // // doc
      // //   .setFont("helvetica")
      // //   .setFontSize(12)
      // //   .text(this.moreText, 0.5, 3.5, { align: "left", maxWidth: "7.5" });
      // // Creating footer and saving file
      // doc
      //   .setTextColor(0, 0, 255)
      //   .text(
      //     "This is a simple footer located .5 inches from page bottom",
      //     0.5,
      //     doc.internal.pageSize.height - 0.5
      //   )
      //   .save(`${this.activeClearancePurpose}.pdf`);
    },
    viewDeficiency: function viewDeficiency(item) {
      this.deficiencydialog = true;
      this.deficiency_designee = item.designee;
      this.deficiencies = Object.assign({}, item.deficiency);
      console.log(item);
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.get("/api/v1/activeClearance").then(function (res) {
        _this3.purposeVal = 1;
        console.log(res.data.approvedDateclearanceRequestSTCOUNCIL);
        _this3.stad = res.data.stad;
        _this3.student = res.data.student;
        _this3.activeClearancePurpose = res.data.activeClearancePurpose;
        _this3.clearance = res.data.clearance;
        _this3.submittedClearance = res.data.submittedClearance;
        _this3.staffRegistrar_id = res.data.staffIdREGISTRARSTAFF;
        console.log(_this3.clearance.cashier);
        _this3.clearances = [{
          office: "Registrar Staff",
          designee: res.data.signatoryNameclearanceRequestREGISTRARSTAFF ? res.data.signatoryNameclearanceRequestREGISTRARSTAFF.name : null,
          status: res.data.clearance.registrar,
          data_approved: res.data.approvedDateclearanceRequestREGISTRARSTAFF ? res.data.approvedDateclearanceRequestREGISTRARSTAFF : res.data.approvedDateclearanceRequestREGISTRAR,
          deficiencyCount: res.data.countDeficiencyREGISTRARSTAFF,
          deficiency: res.data.deficiencyREGISTRARSTAFF,
          clearanceRequestCount: res.data.countClearanceRequestREGISTRARSTAFF ? 1 : 0,
          staff_id: res.data.staffIdREGISTRARSTAFF
        }, {
          office: "Cashier",
          designee: res.data.signatoryNameclearanceRequestCASHIER ? res.data.signatoryNameclearanceRequestCASHIER.name : null,
          status: res.data.clearance.registrar == 0 ? 2 : res.data.clearance.cashier,
          data_approved: res.data.approvedDateclearanceRequestCASHIER,
          deficiencyCount: res.data.countDeficiencyCASHIER,
          deficiency: res.data.deficiencyCASHIER,
          clearanceRequestCount: res.data.countClearanceRequestCASHIER,
          staff_id: res.data.staffIdCASHIER
        }, {
          office: "Library",
          designee: res.data.signatoryNameclearanceRequestLIBRARY ? res.data.signatoryNameclearanceRequestLIBRARY.name : null,
          status: res.data.clearance.library,
          data_approved: res.data.approvedDateclearanceRequestLIBRARY,
          deficiencyCount: res.data.countDeficiencyLIBRARY,
          deficiency: res.data.deficiencyLIBRARY,
          clearanceRequestCount: res.data.countClearanceRequestLIBRARY,
          staff_id: res.data.staffIdLIBRARY
        }, {
          office: "OSAS",
          designee: res.data.signatoryNameclearanceRequestOSAS ? res.data.signatoryNameclearanceRequestOSAS.name : null,
          status: res.data.clearance.osas,
          data_approved: res.data.approvedDateclearanceRequestOSAS,
          deficiencyCount: res.data.countDeficiencyOSAS,
          deficiency: res.data.deficiencyOSAS,
          clearanceRequestCount: res.data.countClearanceRequestOSAS,
          staff_id: res.data.staffIdOSAS
        }, {
          office: "Program Director",
          designee: res.data.signatoryNameclearanceRequestPROGRAMDIRECTOR ? res.data.signatoryNameclearanceRequestPROGRAMDIRECTOR.name : null,
          status: res.data.clearance.program_director,
          data_approved: res.data.approvedDateclearanceRequestPROGRAMDIRECTOR,
          deficiencyCount: res.data.countDeficiencyPD,
          deficiency: res.data.deficiencyPD,
          clearanceRequestCount: res.data.countClearanceRequestPD ? 1 : 0,
          staff_id: res.data.staffIdPD
        }, {
          office: "Dean",
          designee: res.data.signatoryNameclearanceRequestDEAN ? res.data.signatoryNameclearanceRequestDEAN.name : null,
          status: res.data.clearance.program_director == 0 ? 2 : res.data.clearance.college_deaan,
          data_approved: res.data.approvedDateclearanceRequestDEAN,
          deficiencyCount: res.data.countDeficiencyDEAN,
          deficiency: res.data.deficiencyDEAN,
          clearanceRequestCount: res.data.countClearanceRequestDEAN ? 1 : 0,
          staff_id: res.data.staffIdDEAN
        }];
      })["catch"](function (err) {
        console.error(err);

        if (err.response.data.purpose == '0') {
          _this3.purposeVal = 0;
        }
      });
    },
    sendRequest: function sendRequest(item) {
      var _this4 = this;

      this.submitRequestItem = Object.assign({}, item);
      console.log(this.submitRequestItem);
      axios.post("/api/v1/sendRequest", this.submitRequestItem).then(function (res) {
        console.log(res.data.approvedDateclearanceRequestSTCOUNCIL);
        _this4.stad = res.data.stad;
        _this4.submittedClearance = res.data.submittedClearance;
        _this4.staffRegistrar_id = res.data.staffIdREGISTRARSTAFF; // this.activeClearancePurpose = res.data.activeClearancePurpose;

        _this4.clearance = res.data.clearance;
        _this4.clearances = [{
          office: "Registrar Staff",
          designee: res.data.signatoryNameclearanceRequestREGISTRARSTAFF ? res.data.signatoryNameclearanceRequestREGISTRARSTAFF.name : null,
          status: res.data.clearance.registrar,
          data_approved: res.data.approvedDateclearanceRequestREGISTRARSTAFF ? res.data.approvedDateclearanceRequestREGISTRARSTAFF : res.data.approvedDateclearanceRequestREGISTRAR,
          deficiencyCount: res.data.countDeficiencyREGISTRARSTAFF,
          deficiency: res.data.deficiencyREGISTRARSTAFF,
          clearanceRequestCount: res.data.countClearanceRequestREGISTRARSTAFF ? 1 : 0,
          staff_id: res.data.staffIdREGISTRARSTAFF
        }, {
          office: "Cashier",
          designee: res.data.signatoryNameclearanceRequestCASHIER ? res.data.signatoryNameclearanceRequestCASHIER.name : null,
          status: res.data.clearance.registrar == 0 ? 2 : res.data.clearance.cashier,
          data_approved: res.data.approvedDateclearanceRequestCASHIER,
          deficiencyCount: res.data.countDeficiencyCASHIER,
          deficiency: res.data.deficiencyCASHIER,
          clearanceRequestCount: res.data.countClearanceRequestCASHIER,
          staff_id: res.data.staffIdCASHIER
        }, {
          office: "Library",
          designee: res.data.signatoryNameclearanceRequestLIBRARY ? res.data.signatoryNameclearanceRequestLIBRARY.name : null,
          status: res.data.clearance.library,
          data_approved: res.data.approvedDateclearanceRequestLIBRARY,
          deficiencyCount: res.data.countDeficiencyLIBRARY,
          deficiency: res.data.deficiencyLIBRARY,
          clearanceRequestCount: res.data.countClearanceRequestLIBRARY,
          staff_id: res.data.staffIdLIBRARY
        }, {
          office: "OSAS",
          designee: res.data.signatoryNameclearanceRequestOSAS ? res.data.signatoryNameclearanceRequestOSAS.name : null,
          status: res.data.clearance.osas,
          data_approved: res.data.approvedDateclearanceRequestOSAS,
          deficiencyCount: res.data.countDeficiencyOSAS,
          deficiency: res.data.deficiencyOSAS,
          clearanceRequestCount: res.data.countClearanceRequestOSAS,
          staff_id: res.data.staffIdOSAS
        }, {
          office: "Program Director",
          designee: res.data.signatoryNameclearanceRequestPROGRAMDIRECTOR ? res.data.signatoryNameclearanceRequestPROGRAMDIRECTOR.name : null,
          status: res.data.clearance.program_director,
          data_approved: res.data.approvedDateclearanceRequestPROGRAMDIRECTOR,
          deficiencyCount: res.data.countDeficiencyPD,
          deficiency: res.data.deficiencyPD,
          clearanceRequestCount: res.data.countClearanceRequestPD ? 1 : 0,
          staff_id: res.data.staffIdPD
        }, {
          office: "Dean",
          designee: res.data.signatoryNameclearanceRequestDEAN ? res.data.signatoryNameclearanceRequestDEAN.name : null,
          status: res.data.clearance.program_director == 0 ? 2 : res.data.clearance.college_deaan,
          data_approved: res.data.approvedDateclearanceRequestDEAN,
          deficiencyCount: res.data.countDeficiencyDEAN,
          deficiency: res.data.deficiencyDEAN,
          clearanceRequestCount: res.data.countClearanceRequestDEAN ? 1 : 0,
          staff_id: res.data.staffIdDEAN
        }];
      })["catch"](function (err) {
        console.error(err);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearances.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this5 = this;

      var index = this.clearances.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/clearancerequests/" + item.id).then(function (res) {
          _this5.text = "Record Deleted Successfully!";
          _this5.snackbar = true;

          _this5.clearancerequests.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this5.text = "Error Deleting Record";
          _this5.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this6 = this;

      this.dialog = false;
      setTimeout(function () {
        _this6.editedItem = Object.assign({}, _this6.defaultItem);
        _this6.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this7 = this;

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/clearancerequests/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this7.text = "Record Updated Successfully!";
          _this7.snackbar = true;
          Object.assign(_this7.clearances.data[index], res.data.clearancerequests);
        })["catch"](function (err) {
          console.log(err.response);
          _this7.text = "Error Updating Record";
          _this7.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/AppComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/AppComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  mounted: function mounted() {
    console.log('Component mounted.');
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearanceListComponent.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ClearanceListComponent.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "No",
        align: "left",
        value: "id"
      }, {
        text: "Clearance Id",
        value: "clearance_id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalclearances: 0,
      numberOfPages: 0,
      options: {},
      clearances: [],
      editedIndex: -1,
      editedItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        semester: ""
      },
      defaultItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        semester: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearances?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.clearances = response.data.clearances;
        _this.totalclearances = response.data.clearances.total;
        _this.numberOfPages = response.data.clearances.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/clearances/".concat(d)).then(function (res) {
          _this2.loading = false;
          _this2.clearances = res.data.clearances;
          _this2.totalclearances = res.data.clearances.total;
          _this2.numberOfPages = res.data.clearances.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/clearances?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.clearances = res.data.clearances;
          _this2.totalclearances = res.data.clearances.total;
          _this2.numberOfPages = res.data.clearances.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearances.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this4 = this;

      var index = this.clearances.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearances/" + item.id).then(function (res) {
          _this4.text = "Record Deleted Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;

          _this4.clearances.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Deleting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this5 = this;

      this.dialog = false;
      setTimeout(function () {
        _this5.editedItem = Object.assign({}, _this5.defaultItem);
        _this5.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this6 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearances/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this6.text = "Record Updated Successfully!";
          _this6.snackbarColor = "primary darken-1";
          _this6.snackbar = true;
          Object.assign(_this6.clearances.data[index], res.data.clearance);
        })["catch"](function (err) {
          console.log(err.response);
          _this6.text = "Error Updating Record";
          _this6.snackbarColor = "error darken-1";
          _this6.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearances", this.editedItem).then(function (res) {
          _this6.text = "Record Added Successfully!";
          _this6.snackbarColor = "primary darken-1";
          _this6.snackbar = true; // this.students.data.push(res.data.student); 

          _this6.clearances = res.data.clearances;
        })["catch"](function (err) {
          console.dir(err);
          _this6.text = "Error Inserting Record";
          _this6.snackbarColor = "error darken-1";
          _this6.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearanceRequestsComponent.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ClearanceRequestsComponent.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_0__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      deferDialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      searchItem: '',
      snackbarColor: "",
      headers: [{
        text: "#",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Signatory",
        value: "staff"
      }, {
        text: "Date Requested",
        value: "request_at"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalclearancerequests: 0,
      numberOfPages: 0,
      options: {},
      clearancerequests: [],
      semesters: [],
      colleges: [],
      programs: [],
      semester: '',
      college: '',
      program: '',
      editedIndex: -1,
      itemIndex: 0,
      deficiency: {
        title: '',
        note: ''
      },
      studentName: '',
      clearanceRequest: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      }
    };
  },
  computed: {},
  watch: {
    searchItem: lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function (val) {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearancerequests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage,
          'search': val,
          'semester': this.semester,
          'college': this.college,
          'program': this.program
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.clearancerequests = response.data.clearance_requests;
        _this.totalclearancerequests = response.data.clearance_requests.total;
        _this.numberOfPages = response.data.clearance_requests.last_page;
        _this.loading = false;
      });
    }, 300),
    semester: lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function (val) {
      var _this2 = this;

      // this.college = '';
      // this.program = '';
      this.loading = true;
      var _this$options2 = this.options,
          page = _this$options2.page,
          itemsPerPage = _this$options2.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearancerequests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage,
          'semester': val,
          'search': this.searchItem,
          'college': this.college,
          'program': this.program
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        // this.colleges = response.data.colleges; 
        _this2.clearancerequests = response.data.clearance_requests;
        _this2.totalclearancerequests = response.data.clearance_requests.total;
        _this2.numberOfPages = response.data.clearance_requests.last_page;
        _this2.loading = false;
      });
    }, 300),
    college: lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function (val) {
      var _this3 = this;

      this.loading = true;
      this.program = '';
      var _this$options3 = this.options,
          page = _this$options3.page,
          itemsPerPage = _this$options3.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearancerequests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage,
          'semester': this.semester,
          'program': this.program,
          'search': this.searchItem,
          'college': val
        }
      }).then(function (response) {
        //ThhIten injecting the result to datatable parameters.
        _this3.programs = response.data.programs;
        _this3.clearancerequests = response.data.clearance_requests;
        _this3.totalclearancerequests = response.data.clearance_requests.total;
        _this3.numberOfPages = response.data.clearance_requests.last_page;
        _this3.loading = false;
      });
    }, 300),
    program: lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function (val) {
      var _this4 = this;

      this.loading = true;
      var _this$options4 = this.options,
          page = _this$options4.page,
          itemsPerPage = _this$options4.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearancerequests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage,
          'semester': this.semester,
          'search': this.searchItem,
          'program': val,
          'college': this.college
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        // this.programs = response.data.programs; 
        _this4.clearancerequests = response.data.clearance_requests;
        _this4.totalclearancerequests = response.data.clearance_requests.total;
        _this4.numberOfPages = response.data.clearance_requests.last_page;
        _this4.loading = false;
      });
    }, 300),
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.readDataFromAPI();
  },
  methods: {
    clean: function clean($val) {
      if ($val) {
        $val = $val.replace(/ +(?= )/g, "");
        $val = $val.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, " "); // Replaces all spaces with hyphens.

        $val = $val.replace(/ +(?= )/g, "");
        return $val;
      } // Removes special chars.

    },
    readDataFromAPI: function readDataFromAPI() {
      var _this5 = this;

      this.loading = true;
      var _this$options5 = this.options,
          page = _this$options5.page,
          itemsPerPage = _this$options5.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearancerequests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this5.loading = false;
        _this5.semesters = response.data.semesters;
        _this5.colleges = response.data.colleges;
        _this5.programs = response.data.programs;
        _this5.clearancerequests = response.data.clearance_requests;
        _this5.totalclearancerequests = response.data.clearance_requests.total;
        _this5.numberOfPages = response.data.clearance_requests.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this6 = this;

      var _this$options6 = this.options,
          page = _this$options6.page,
          itemsPerPage = _this$options6.itemsPerPage;
      var pageNumber = page;

      if (d.length > 2) {
        axios.get("/api/v1/clearancerequests?page=" + pageNumber, {
          params: {
            'per_page': itemsPerPage,
            'semester': this.semester,
            'search': this.searchItem,
            'program': this.program,
            'college': this.college
          }
        }).then(function (res) {
          _this6.loading = false;
          _this6.semesters = res.data.semesters;
          _this6.colleges = res.data.colleges;
          _this6.programs = res.data.programs;
          _this6.clearancerequests = res.data.clearance_requests;
          _this6.totalclearancerequests = res.data.clearance_requests.total;
          _this6.numberOfPages = res.data.clearance_requests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/clearancerequests?page=" + pageNumber, {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this6.loading = false;
          _this6.semesters = res.data.semesters;
          _this6.colleges = res.data.colleges;
          _this6.programs = res.data.programs;
          _this6.clearancerequests = res.data.clearance_requests;
          _this6.totalclearancerequests = res.data.clearance_requests.total;
          _this6.numberOfPages = res.data.clearance_requests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this7 = this;

      axios.interceptors.request.use(function (config) {
        _this7.loading = true;
        return config;
      }, function (error) {
        _this7.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this7.loading = false;
        return response;
      }, function (error) {
        _this7.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.clearanceRequest = Object.assign({}, item);
      this.studentName = this.clearanceRequest.name;
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this8 = this;

      var index = this.clearancerequests.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearancerequests/" + item.id).then(function (res) {
          _this8.text = "Record Deleted Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;

          _this8.clearancerequests.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Deleting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }
    },
    approve: function approve() {
      var _this9 = this;

      // console.log(this.clearanceRequest.id);
      axios.post("/api/v1/clearancerequests/approve", {
        'clearanceRequest': this.clearanceRequest,
        'semester': this.semester,
        'college': this.college,
        'program': this.program
      }).then(function (res) {
        _this9.text = "Successfully Approved!";
        _this9.snackbarColor = "primary darken-1";
        _this9.snackbar = true;
        _this9.clearancerequests = res.data.clearance_requests;
        _this9.totalclearancerequests = res.data.clearance_requests.total;
        _this9.numberOfPages = res.data.clearance_requests.last_page;
        _this9.dialog = false;
      })["catch"](function (err) {
        console.log(err.response);
        _this9.text = "Error Approving Request";
        _this9.snackbarColor = "error darken-1";
        _this9.snackbar = true;
      });
      this.close();
    },
    defer: function defer(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.itemIndex = this.clearancerequests.data.indexOf(item);
      this.clearanceRequest = Object.assign({}, item);
      this.deferDialog = true;
    },
    deferItem: function deferItem() {
      var _this10 = this;

      var index = this.editedIndex;
      axios.get("/api/v1/clearancerequests/disapprove", {
        params: {
          'requestId': this.clearanceRequest.id,
          'title': this.deficiency.title,
          'note': this.deficiency.note,
          'semester': this.semester,
          'college': this.college,
          'program': this.program
        }
      }).then(function (res) {
        _this10.text = "Record Updated Successfully!";
        _this10.snackbarColor = "primary darken-1";
        _this10.snackbar = true;
        _this10.loading = false;
        _this10.clearancerequests = res.data.clearance_requests;
        _this10.totalclearancerequests = res.data.clearance_requests.total;
        _this10.numberOfPages = res.data.clearance_requests.last_page;
      })["catch"](function (err) {
        console.log(err.response);
        _this10.text = "Error Updating Record";
        _this10.snackbarColor = "error darken-1";
        _this10.snackbar = true;
      });
      this.deferDialog = false;
    },
    close: function close() {
      this.dialog = false;
      this.editedItem = Object.assign({}, this.defaultItem);
      this.editedIndex = -1;
    },
    save: function save() {
      var _this11 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearancerequests/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this11.text = "Record Updated Successfully!";
          _this11.snackbarColor = "primary darken-1";
          _this11.snackbar = true;
          Object.assign(_this11.clearancerequests.data[index], res.data.clearancerequest);
        })["catch"](function (err) {
          console.log(err.response);
          _this11.text = "Error Updating Record";
          _this11.snackbarColor = "error darken-1";
          _this11.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearancerequests", this.editedItem).then(function (res) {
          _this11.text = "Record Added Successfully!";
          _this11.snackbarColor = "primary darken-1";
          _this11.snackbar = true; // this.students.data.push(res.data.student); 

          _this11.clearancerequests = res.data.clearancerequests;
        })["catch"](function (err) {
          console.dir(err);
          _this11.text = "Error Inserting Record";
          _this11.snackbarColor = "error darken-1";
          _this11.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearedClearancesComponent.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ClearedClearancesComponent.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      searchItem: "",
      headers: [{
        text: "#",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Signatory",
        value: "staff"
      }, {
        text: "Date Approved",
        value: "approved_at"
      }],
      page: 0,
      totalclearancerequests: 0,
      numberOfPages: 0,
      options: {},
      clearancerequests: [],
      editedIndex: -1,
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearedclearancerequests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.clearancerequests = response.data.clearancerequests;
        _this.totalclearancerequests = response.data.clearancerequests.total;
        _this.numberOfPages = response.data.clearancerequests.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/clearedclearancerequests/".concat(d, "?page=") + pageNumber, {
          params: {
            'per_page': itemsPerPage,
            'id': d,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/clearedclearancerequests?page=".concat(_pageNumber), {
          params: {
            'per_page': _itemsPerPage,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this4 = this;

      var index = this.clearancerequests.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearedclearancerequests/" + item.id).then(function (res) {
          _this4.text = "Record Deleted Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;

          _this4.clearancerequests.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Deleting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this5 = this;

      this.dialog = false;
      setTimeout(function () {
        _this5.editedItem = Object.assign({}, _this5.defaultItem);
        _this5.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this6 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearedclearancerequests/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this6.text = "Record Updated Successfully!";
          _this6.snackbarColor = "primary darken-1";
          _this6.snackbar = true;
          Object.assign(_this6.clearancerequests.data[index], res.data.clearancerequest);
        })["catch"](function (err) {
          console.log(err.response);
          _this6.text = "Error Updating Record";
          _this6.snackbarColor = "error darken-1";
          _this6.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearedclearancerequests", this.editedItem).then(function (res) {
          _this6.text = "Record Added Successfully!";
          _this6.snackbarColor = "primary darken-1";
          _this6.snackbar = true; // this.students.data.push(res.data.student); 

          _this6.clearancerequests = res.data.clearancerequests;
        })["catch"](function (err) {
          console.dir(err);
          _this6.text = "Error Inserting Record";
          _this6.snackbarColor = "error darken-1";
          _this6.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/DeficiencyListComponent.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/DeficiencyListComponent.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      deletedialog: false,
      editdialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      studentName: "",
      deficiencyName: "",
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "#",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "student_name"
      }, {
        text: "Completed",
        value: "completed"
      }, {
        text: "Deficiency",
        value: "deficiency"
      }, {
        text: "Staff",
        value: "staff"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totaldeficiencies: 0,
      numberOfPages: 0,
      options: {},
      deficiencies: [],
      editedIndex: -1,
      editedItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        semester: "",
        deficiency: "",
        note: ''
      },
      defaultItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        semester: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/deficiencies?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.deficiencies = response.data.deficiencies;
        _this.totaldeficiencies = response.data.deficiencies.total;
        _this.numberOfPages = response.data.deficiencies.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/deficiencies/".concat(d)).then(function (res) {
          _this2.loading = false;
          _this2.deficiencies = res.data.deficiencies;
          _this2.totaldeficiencies = res.data.deficiencies.total;
          _this2.numberOfPages = res.data.deficiencies.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/deficiencies?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.deficiencies = res.data.deficiencies;
          _this2.totaldeficiencies = res.data.deficiencies.total;
          _this2.numberOfPages = res.data.deficiencies.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.deficiencies.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.editdialog = true;
    },
    approveItem: function approveItem(item) {
      this.editedIndex = this.deficiencies.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.studentName = this.editedItem.student_name;
      this.deficiencyName = this.editedItem.deficiency;
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      this.editedIndex = this.deficiencies.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.studentName = this.editedItem.student_name;
      this.deficiencyName = this.editedItem.deficiency;
      this.deletedialog = true;
    },
    deleteDeficiency: function deleteDeficiency() {
      var _this4 = this;

      var index = this.editedIndex;
      axios["delete"]("/api/v1/deficiencies/" + this.edited.id).then(function (res) {
        _this4.text = "Record Deleted Successfully!";
        _this4.snackbarColor = "primary darken-1";
        _this4.snackbar = true;

        _this4.deficiencies.data.splice(index, 1);
      })["catch"](function (err) {
        console.log(err.response);
        _this4.text = "Error Deleting Record";
        _this4.snackbarColor = "error darken-1";
        _this4.snackbar = true;
      });
      this.deletedialog = false;
    },
    approve: function approve() {
      var _this5 = this;

      var index = this.editedIndex;
      axios.post("/api/v1/deficiencies/approve", this.editedItem).then(function (res) {
        _this5.text = "Record Updated Successfully!";
        _this5.snackbarColor = "primary darken-1";
        _this5.snackbar = true;
        _this5.loading = false;
        _this5.deficiencies = res.data.deficiencies;
        _this5.totaldeficiencies = res.data.deficiencies.total;
        _this5.numberOfPages = res.data.deficiencies.last_page;
      })["catch"](function (err) {
        _this5.text = "Error Updating Record";
        _this5.snackbarColor = "error darken-1";
        _this5.snackbar = true;
      });
      this.dialog = false;
    },
    close: function close() {
      var _this6 = this;

      this.dialog = false;
      setTimeout(function () {
        _this6.editedItem = Object.assign({}, _this6.defaultItem);
        _this6.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this7 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.post("/api/v1/deficeincy/edit", this.editedItem).then(function (res) {
          _this7.text = "Record Updated Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true; // Object.assign(this.deficiencies.data[index], res.data.deficiency); 

          _this7.loading = false;
          _this7.deficiencies = res.data.deficiencies;
          _this7.totaldeficiencies = res.data.deficiencies.total;
          _this7.numberOfPages = res.data.deficiencies.last_page;
          _this7.editdialog = false;
        })["catch"](function (err) {
          console.log(err.response);
          _this7.text = "Error Updating Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
          _this7.editdialog = false;
        });
        this.editdialog = false;
      } else {
        axios.post("/api/v1/deficiencies", this.editedItem).then(function (res) {
          _this7.text = "Record Added Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true; // this.students.data.push(res.data.student); 

          _this7.deficiencies = res.data.deficiencies;
        })["catch"](function (err) {
          console.dir(err);
          _this7.text = "Error Inserting Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "No",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "student_name"
      }, {
        text: "Completed",
        value: "completed"
      }, {
        text: "Deficiency",
        value: "deficiency"
      }, {
        text: "Note",
        value: "note"
      }, {
        text: "Staff",
        value: "staff"
      }],
      page: 0,
      totaldeficiencies: 0,
      numberOfPages: 0,
      options: {},
      deficiencies: [],
      editedIndex: -1,
      editedItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        semester: ""
      },
      defaultItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        semester: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/registrarDeficiencyList?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.deficiencies = response.data.deficiencies;
        _this.totaldeficiencies = response.data.deficiencies.total;
        _this.numberOfPages = response.data.deficiencies.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/registrarDeficiencyList/".concat(d)).then(function (res) {
          _this2.loading = false;
          _this2.deficiencies = res.data.deficiencies;
          _this2.totaldeficiencies = res.data.deficiencies.total;
          _this2.numberOfPages = res.data.deficiencies.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/registrarDeficiencyList?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.deficiencies = res.data.deficiencies;
          _this2.totaldeficiencies = res.data.deficiencies.total;
          _this2.numberOfPages = res.data.deficiencies.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.deficiencies.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this4 = this;

      var index = this.deficiencies.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/registrarDeficiencyList/" + item.id).then(function (res) {
          _this4.text = "Record Deleted Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;

          _this4.deficiencies.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Deleting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this5 = this;

      this.dialog = false;
      setTimeout(function () {
        _this5.editedItem = Object.assign({}, _this5.defaultItem);
        _this5.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this6 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/registrarDeficiencyList/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this6.text = "Record Updated Successfully!";
          _this6.snackbarColor = "primary darken-1";
          _this6.snackbar = true;
          Object.assign(_this6.deficiencies.data[index], res.data.deficiency);
        })["catch"](function (err) {
          console.log(err.response);
          _this6.text = "Error Updating Record";
          _this6.snackbarColor = "error darken-1";
          _this6.snackbar = true;
        });
      } else {
        axios.post("/api/v1/registrarDeficiencyList", this.editedItem).then(function (res) {
          _this6.text = "Record Added Successfully!";
          _this6.snackbarColor = "primary darken-1";
          _this6.snackbar = true; // this.students.data.push(res.data.student); 

          _this6.deficiencies = res.data.deficiencies;
        })["catch"](function (err) {
          console.dir(err);
          _this6.text = "Error Inserting Record";
          _this6.snackbarColor = "error darken-1";
          _this6.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SIASAccountComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/SIASAccountComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    var _ref;

    return _ref = {
      error: {},
      import_file: '',
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: ""
    }, _defineProperty(_ref, "error", ""), _defineProperty(_ref, "snackbarColor", ""), _defineProperty(_ref, "searchItem", ''), _defineProperty(_ref, "headers", [{
      text: "No",
      align: "left",
      value: "id"
    }, {
      text: "Name",
      value: "name"
    }, {
      text: "User ID",
      value: "user_id"
    }, {
      text: "Password",
      value: "password"
    }]), _defineProperty(_ref, "page", 0), _defineProperty(_ref, "totalStudents", 0), _defineProperty(_ref, "numberOfPages", 0), _defineProperty(_ref, "options", {}), _defineProperty(_ref, "siasaccounts", {}), _defineProperty(_ref, "campuses", {}), _defineProperty(_ref, "sections", {}), _defineProperty(_ref, "programs", {}), _defineProperty(_ref, "years", [1, 2, 3, 4, 5]), _defineProperty(_ref, "rules", {
      required: function required(v) {
        return !!v || "This Field is Required";
      },
      min: function min(v) {
        return v.length >= 5 || "Minimum 5 Characters Required";
      },
      validEmail: function validEmail(v) {
        return /.+@.+\..+/.test(v) || "Email must be valid";
      }
    }), _defineProperty(_ref, "editedIndex", -1), _defineProperty(_ref, "editedItem", {
      id: "",
      siasaccount_number: "",
      name: "",
      campus: "",
      section: "",
      program: "",
      campus_id: "",
      section_id: "",
      program_id: "",
      code: "",
      year: "",
      created_at: ""
    }), _defineProperty(_ref, "defaultItem", {
      id: "",
      siasaccount_number: "",
      name: "",
      campus: "",
      section: "",
      program: "",
      campus_id: "",
      section_id: "",
      program_id: "",
      code: "",
      year: "",
      created_at: ""
    }), _ref;
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New Item" : "Edit Item";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    onFileChange: function onFileChange(e) {
      this.import_file = e.target.files[0];
    },
    proceedAction: function proceedAction() {
      var _this = this;

      var formData = new FormData();
      formData.append('import_file', this.import_file);
      axios.post('api/v1/siasaccounts/import', formData, {
        headers: {
          'content-type': 'multipart/form-data'
        }
      }).then(function (response) {
        if (response.status === 200) {// codes here after the file is upload successfully
        }
      })["catch"](function (error) {
        // code here when an upload is not valid
        _this.uploading = false;
        _this.error = error.response.data;
        console.log('check error: ', _this.error);
      });
    },
    readDataFromAPI: function readDataFromAPI() {
      var _this2 = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/siasaccounts?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this2.loading = false;
        _this2.siasaccounts = response.data.siasaccounts;
        _this2.campuses = response.data.campuses;
        _this2.programs = response.data.programs;
        _this2.sections = response.data.sections;
        _this2.totalStudents = response.data.siasaccounts.total;
        _this2.numberOfPages = response.data.siasaccounts.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this3 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/siasaccounts/".concat(d, "?page=") + pageNumber, {
          params: {
            'per_page': itemsPerPage
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.siasaccounts = res.data.siasaccounts;
          console.log(_this3.siasaccounts);
          _this3.campuses = res.data.campuses;
          _this3.programs = res.data.programs;
          _this3.sections = res.data.sections;
          _this3.totalStudents = res.data.siasaccounts.total;
          _this3.numberOfPages = res.data.siasaccounts.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/siasaccounts?page=" + _pageNumber, {
          params: {
            'per_page': _itemsPerPage
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.campuses = res.data.campuses;
          _this3.programs = res.data.programs;
          _this3.sections = res.data.sections;
          _this3.siasaccounts = res.data.siasaccounts;
          _this3.totalStudents = res.data.siasaccounts.total;
          _this3.numberOfPages = res.data.siasaccounts.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this4 = this;

      axios.interceptors.request.use(function (config) {
        _this4.loading = true;
        return config;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this4.loading = false;
        return response;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.siasaccounts.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      console.log(this.editedItem);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this5 = this;

      var index = this.siasaccounts.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/siasaccounts/" + item.id).then(function (res) {
          _this5.text = "Record Deleted Successfully!";
          _this5.snackbarColor = "primary darken-1";
          _this5.snackbar = true;

          _this5.siasaccounts.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this5.text = "Error Deleting Record";
          _this5.snackbarColor = "error darken-1";
          _this5.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this6 = this;

      this.dialog = false;
      setTimeout(function () {
        _this6.editedItem = Object.assign({}, _this6.defaultItem);
        _this6.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this7 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/siasaccounts/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this7.text = "Record Updated Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true;
          Object.assign(_this7.siasaccounts.data[index], res.data.siasaccount);
          console.log(_this7.editedItem);
        })["catch"](function (err) {
          console.log(err.response);
          _this7.text = "Error Updating Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
        });
      } else {
        axios.post("/api/v1/siasaccounts", this.editedItem).then(function (res) {
          _this7.text = "Record Added Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true; // this.siasaccounts.data.push(res.data.siasaccount); 

          _this7.siasaccounts = res.data.siasaccounts;
        })["catch"](function (err) {
          console.dir(err);
          _this7.text = "Error Inserting Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SettingsComponent.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/SettingsComponent.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      tabs: null,
      valid: true,
      dialog: false,
      loading: true,
      snackbar: false,
      password_disabled: false,
      email_disabled: false,
      passwordCheckbox: false,
      snackbarColor: "",
      selected: [],
      text: "",
      success: "",
      error: "",
      headers: [{
        text: "No",
        align: "left",
        value: "id"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Email",
        value: "email"
      }, {
        text: "Role",
        value: "role"
      }, {
        text: "Date Created",
        value: "created_at"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalUsers: 0,
      numberOfPages: 0,
      options: {},
      users: {},
      roles: [],
      purposes: [],
      semesters: [],
      graduations: [],
      setup: {
        graduation_id: "",
        credential: "",
        purpose_id: "",
        semester_id: "",
        g_id: ""
      },
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      editedIndex: -1,
      editedItem: {
        id: "",
        name: "",
        email: "",
        role: "",
        password: "",
        rpassword: "",
        created_at: ""
      },
      defaultItem: {
        id: "",
        name: "",
        email: "",
        password: "",
        rpassword: "",
        role: "",
        created_at: ""
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New User" : "Edit User";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-account-plus" : "mdi-account-edit";
    },
    passwordmatch: function passwordmatch() {
      return this.editedItem.password != this.editedItem.rpassword ? "Password Does Not Match" : true;
    },
    checkEmail: function checkEmail() {
      var _this = this;

      if (/.+@.+\..+/.test(this.editedItem.email)) {
        axios.post("/api/v1/email/verify", {
          email: this.editedItem.email
        }).then(function (res) {
          _this.success = res.data.message;
          _this.error = "";
        })["catch"](function (err) {
          _this.success = "";
          _this.error = "Email Already Exist";
        });
      }
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    initialize: function initialize() {
      var _this2 = this;

      axios.interceptors.request.use(function (config) {
        _this2.loading = true;
        return config;
      }, function (error) {
        _this2.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this2.loading = false;
        return response;
      }, function (error) {
        _this2.loading = false;
        return Promise.reject(error);
      });
      axios.get("/api/v1/purposesetup").then(function (res) {
        _this2.setup.credential = res.data.credential;
        _this2.purposes = res.data.purposes;
        _this2.graduations = res.data.graduations;
        _this2.semesters = res.data.semesters;

        if (res.data.purpose_id) {
          _this2.setup.purpose_id = res.data.purpose_id.id;
        }

        if (res.data.semester_id) {
          _this2.setup.semester_id = res.data.semester_id.id;
        }

        if (res.data.graduation_id) {
          _this2.setup.graduation_id = res.data.graduation_id.id;
        }
      })["catch"](function (err) {
        console.log(err);
      });
    },
    save: function save() {
      var _this3 = this;

      axios.post("/api/v1/purposesetup", this.setup).then(function (res) {
        _this3.text = "Purpose Saved Successfully!";
        _this3.snackbarColor = "primary darken-1";
        _this3.snackbar = true;
      })["catch"](function (err) {
        console.dir(err);
        _this3.text = "Error Saving Purpose!";
        _this3.snackbarColor = "error darken-1";
        _this3.snackbar = true;
      });
    },
    updateEmail: function updateEmail() {
      var _this4 = this;

      this.loading = true;
      axios.post("/api/v1/emailChangeCreate", {
        email: this.editedItem.email
      }).then(function (result) {
        _this4.email = null;
        _this4.email_disabled = false;
        _this4.response = result.data;
        _this4.snackbar = true;
        _this4.text = result.data.message;
        _this4.snackbarColor = "success darken-1";
        _this4.loading = false;
        _this4.email_disabled = false;
        _this4.valid = false;
      }, function (error) {
        _this4.loading = false;
        console.error(error);
        _this4.success = "";
        _this4.snackbar = true;
        _this4.text = error.response.data.message;
      });
    },
    updatePassword: function updatePassword() {
      var _this5 = this;

      axios.post("/api/v1/changePassword", {
        password: this.editedItem.password
      }).then(function (res) {
        _this5.editedItem.password = "";
        _this5.editedItem.rpassword = "";
        _this5.password_disabled = false;
        _this5.text = "Password Updated Successfully!";
        _this5.snackbarColor = "primary darken-1";
        _this5.snackbar = true;
      })["catch"](function (err) {
        console.dir(err);
        _this5.text = "Error Updating Password!";
        _this5.snackbarColor = "error darken-1";
        _this5.snackbar = true;
      });
    }
  },
  props: {
    source: String
  },
  name: "App"
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/StudentListComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/StudentListComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    var _ref;

    return _ref = {
      uploadDialog: "",
      loadingDialog: false,
      ffile: null,
      error: {},
      import_file: "",
      valid: true,
      dialog: false,
      loading: false,
      isLoading: false,
      snackbar: false,
      cDialog: false,
      selected: [],
      text: "",
      success: ""
    }, _defineProperty(_ref, "error", ""), _defineProperty(_ref, "snackbarColor", ""), _defineProperty(_ref, "searchItem", ""), _defineProperty(_ref, "headers", [{
      text: "Student Number",
      value: "student_number"
    }, {
      text: "Name",
      value: "name"
    }, {
      text: "Program",
      value: "program",
      sortable: false
    }, {
      text: "Action",
      align: "right",
      value: "actions"
    }]), _defineProperty(_ref, "page", 0), _defineProperty(_ref, "totalStudents", 0), _defineProperty(_ref, "numberOfPages", 0), _defineProperty(_ref, "options", {}), _defineProperty(_ref, "students", {}), _defineProperty(_ref, "campuses", {}), _defineProperty(_ref, "sections", {}), _defineProperty(_ref, "programs", ""), _defineProperty(_ref, "export_programs", ""), _defineProperty(_ref, "export_campuses", ""), _defineProperty(_ref, "filenames", ""), _defineProperty(_ref, "years", [1, 2, 3, 4, 5]), _defineProperty(_ref, "rules", []), _defineProperty(_ref, "fileRules", [function (file) {
      var pattern = /\.csv$/;
      return !file || pattern.test(file) || "File type should be csv.";
    }]), _defineProperty(_ref, "editedIndex", -1), _defineProperty(_ref, "editedItem", {
      id: "",
      student_number: "",
      name: "",
      campus: "",
      section: "",
      program: "",
      campus_id: "",
      section_id: "",
      program_id: "",
      user_id: "",
      code: "",
      year: "",
      created_at: "",
      stat: ""
    }), _defineProperty(_ref, "defaultItem", {
      id: "",
      student_number: "",
      name: "",
      campus: "",
      section: "",
      program: "",
      campus_id: "",
      section_id: "",
      program_id: "",
      export_campus_id: "",
      export_program_id: "",
      user_id: "",
      code: "",
      year: "",
      created_at: "",
      stat: ""
    }), _defineProperty(_ref, "tempItem", {
      id: "",
      student_number: "",
      name: "",
      campus: "",
      section: "",
      program: "",
      campus_id: "",
      section_id: "",
      program_id: "",
      user_id: "",
      export_campus_id: "",
      export_program_id: "",
      code: "",
      year: "",
      created_at: "",
      stat: ""
    }), _ref;
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New Item" : "Edit Item";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    }
  },
  watch: {
    "editedItem.student_number": function editedItemStudent_number(val) {
      this.rules = [];
    },
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    copyToClipBoard: function copyToClipBoard(textToCopy) {
      console.log(textToCopy);
      this.text = "(" + textToCopy + ") Copied to clipboard!";
      this.snackbarColor = "success darken-1";
      document.execCommand("copy");
      this.snackbar = true;
    },
    onFileChange: function onFileChange(e) {
      console.log(e.target.files[0]);
      this.import_file = this.$refs.import_file;
    },
    proceedAction: function proceedAction() {
      var _this = this;

      this.loading = true;
      var formData = new FormData();
      formData.append("import_file", this.ffile);
      axios.post("api/v1/students/import", formData, {
        headers: {
          "content-type": "multipart/form-data"
        }
      }).then(function (res) {
        if (res.status === 200) {
          // codes here after the file is upload successfully
          _this.uploadDialog = false;
          _this.loading = false;
          _this.campuses = res.data.campuses;
          _this.programs = res.data.programs;
          _this.sections = res.data.sections;
          _this.students = res.data.students;
          _this.totalStudents = res.data.students.total;
          _this.numberOfPages = res.data.students.last_page;
        }
      })["catch"](function (error) {
        // code here when an upload is not valid
        _this.uploading = false;
        _this.loading = false;
        _this.error = error.response.data;
        console.log("check error: ", _this.error);
      });
    },
    readDataFromAPI: function readDataFromAPI() {
      var _this2 = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/students?page=" + pageNumber, {
        params: {
          per_page: itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this2.loading = false;
        _this2.students = response.data.students;
        _this2.campuses = response.data.campuses;
        _this2.programs = response.data.programs;
        _this2.sections = response.data.sections;
        _this2.export_programs = response.data.programs;
        _this2.export_campuses = response.data.campuses;
        _this2.totalStudents = response.data.students.total;
        _this2.numberOfPages = response.data.students.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this3 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/students/".concat(d, "?page=") + pageNumber, {
          params: {
            per_page: itemsPerPage
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.students = res.data.students;
          console.log(_this3.students);
          _this3.campuses = res.data.campuses;
          _this3.programs = res.data.programs;
          _this3.sections = res.data.sections;
          _this3.totalStudents = res.data.students.total;
          _this3.numberOfPages = res.data.students.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/students?page=" + _pageNumber, {
          params: {
            per_page: _itemsPerPage
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.campuses = res.data.campuses;
          _this3.programs = res.data.programs;
          _this3.sections = res.data.sections;
          _this3.students = res.data.students;
          _this3.export_programs = res.data.programs;
          _this3.export_campuses = res.data.campuses;
          _this3.totalStudents = res.data.students.total;
          _this3.numberOfPages = res.data.students.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this4 = this;

      axios.interceptors.request.use(function (config) {
        _this4.loading = true;
        return config;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this4.loading = false;
        return response;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.students.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.tempItem = this.editedItem;
      this.dialog = true;
    },
    campusListener: function campusListener() {
      var _this5 = this;

      axios.post("/api/v1/campusListener", {
        campus_id: this.editedItem.campus_id
      }).then(function (res) {
        _this5.programs = res.data.programs;
        _this5.sections = "";
      })["catch"](function (err) {
        console.error(err);
      });
    },
    exportcampusListener: function exportcampusListener($item) {
      var _this6 = this;

      console.log($item);
      axios.post("/api/v1/campusListener", {
        campus_id: this.editedItem.export_campus_id
      }).then(function (res) {
        _this6.export_programs = res.data.programs;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListener: function programListener() {
      var _this7 = this;

      axios.post("/api/v1/programListener", {
        program_id: this.editedItem.program_id
      }).then(function (res) {
        _this7.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    campusListenerNew: function campusListenerNew() {
      var _this8 = this;

      axios.post("/api/v1/campusListener", {
        campus_id: this.editedItem.campus
      }).then(function (res) {
        _this8.programs = res.data.programs;
        _this8.sections = "";
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListenerNew: function programListenerNew() {
      var _this9 = this;

      axios.post("/api/v1/programListener", {
        program_id: this.editedItem.program
      }).then(function (res) {
        _this9.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    deleteItem: function deleteItem(item) {
      var _this10 = this;

      var index = this.students.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/students/" + item.id).then(function (res) {
          _this10.text = "Record Deleted Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true;

          _this10.students.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this10.text = "Error Deleting Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      }

      this.close();
    },
    close: function close() {
      var _this11 = this;

      this.dialog = false;
      setTimeout(function () {
        _this11.editedItem = Object.assign({}, _this11.defaultItem);
        _this11.editedIndex = -1;
      }, 300);
    },
    exportActivationCode: function exportActivationCode() {
      var _this12 = this;

      axios.post("/api/v1/getFileName", this.editedItem).then(function (response) {
        _this12.filenames = response.data.filename;
      })["catch"](function (err) {
        console.error(err);
      });
      axios.get("/api/v1/students/activationcode/export", {
        responseType: 'blob',
        params: this.editedItem
      }).then(function (response) {
        var url = window.URL.createObjectURL(new Blob([response.data], {
          type: "text/xlsx"
        })); // Create dynamic <a> element

        var link = document.createElement("a");
        link.href = url;
        link.setAttribute("download", _this12.filenames + '.xlsx');
        document.body.appendChild(link); // Dynamicall click the a link element
        // This will download the csv file

        link.click();
        _this12.exportDialog = false;
        _this12.filenames = '', _this12.close();
      })["catch"](function (err) {
        console.error(err);
      });
    },
    resetP: function resetP($item) {
      axios.post("/api/v1/resetP", $item).then(function (response) {// console.log(response.data)
        // this.cDialog = false;
      })["catch"](function (err) {
        console.error(err);
      }); //  this.loadingDialog = false;
      //   this.cDialog = false;
    },
    save: function save() {
      var _this13 = this;

      this.rules = {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      };
      this.$refs.entryForm.validate();
      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        console.log("Temp Data " + this.tempItem);
        axios.put("/api/v1/students/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this13.text = "Record Updated Successfully!";
          _this13.snackbarColor = "primary darken-1";
          _this13.snackbar = true;
          Object.assign(_this13.students.data[index], res.data.student);
          console.log(_this13.editedItem);

          _this13.close();
        })["catch"](function (err) {
          console.log(err.response);
          _this13.text = "Error Updating Record";
          _this13.snackbarColor = "error darken-1";
          _this13.snackbar = true;
        });
      } else {
        console.log(this.editedItem);
        axios.post("/api/v1/students", this.editedItem).then(function (res) {
          _this13.text = "Record Added Successfully!";
          _this13.snackbarColor = "primary darken-1";
          _this13.snackbar = true; // this.students.data.push(res.data.student);

          _this13.students = res.data.students;

          _this13.close();
        })["catch"](function (err) {
          console.dir(err);
          _this13.text = "Error Inserting Record";
          _this13.snackbarColor = "error darken-1";
          _this13.snackbar = true;
        });
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SubmittedClearancesComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/SubmittedClearancesComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      searchItem: '',
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "#",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Date Submitted",
        value: "datesubmitted"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalsubmittedclearances: 0,
      numberOfPages: 0,
      options: {},
      submittedclearances: [],
      semesters: {
        id: "",
        semester: ""
      },
      semester_id: 0,
      editedIndex: -1,
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    generatePDF: function generatePDF(item) {
      axios.get('/api/v1/active-clearance/signatory/pdf', {
        responseType: 'blob',
        params: {
          'clearance_id': item.clearance_id
        }
      }).then(function (response) {
        item.name = item.name.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "_"); // Replaces all spaces with hyphens.

        item.name = item.name.replace(/ +(?= )/g, "");
        var fileURL = window.URL.createObjectURL(new Blob([response.data], {
          type: 'application/pdf'
        }));
        var fileLink = document.createElement('a');
        fileLink.href = fileURL;
        fileLink.setAttribute('download', item.name + '-' + item.clearance_id + '.pdf');
        document.body.appendChild(fileLink);
        fileLink.click(); // this.downloadLoading = false;
      }); //  this.editedIndex = this.submittedclearances.data.indexOf(item);
      //   this.editedItem = Object.assign({}, item); 
      // if(item.college == "School of Graduate Studies and Research")
      // {
      //    axios.get('/api/v1/pdf-createSGS',{responseType: 'blob'
      //  ,params: { 'clearance': this.editedItem.clearance_id }
      //  }).then((response) => {
      //  var fileURL = window.URL.createObjectURL(new Blob([response.data], {type: 'application/pdf'}));
      //  var fileLink = document.createElement('a');
      //  fileLink.href = fileURL;
      //  fileLink.setAttribute('download', this.editedItem.name+this.editedItem.clearance_id+'.pdf');
      //  document.body.appendChild(fileLink);
      //  fileLink.click();
      //  });
      // }
      // else{
      //    axios.get('/api/v1/pdf-create',{responseType: 'blob'
      //  ,params: { 'clearance': this.editedItem.clearance_id }
      //  }).then((response) => {
      //  var fileURL = window.URL.createObjectURL(new Blob([response.data], {type: 'application/pdf'}));
      //  var fileLink = document.createElement('a');
      //  fileLink.href = fileURL;
      //  fileLink.setAttribute('download', this.editedItem.name+this.editedItem.clearance_id+'.pdf');
      //  document.body.appendChild(fileLink);
      //  fileLink.click();
      // });}
    },
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/submittedclearances?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.submittedclearances = response.data.submittedclearances;
        _this.totalsubmittedclearances = response.data.submittedclearances.total;
        _this.numberOfPages = response.data.submittedclearances.last_page;
      });
    },
    semesterChange: function semesterChange(d) {
      var _this2 = this;

      if (d.length > 2) {
        axios.get("/api/v1/submittedclearances/".concat(d, "?page=") + 1, {
          params: {
            'per_page': 10,
            'id': d,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.page = res.data.submittedclearances.current_page;
          _this2.submittedclearances = res.data.submittedclearances;
          _this2.totalsubmittedclearances = res.data.submittedclearances.total;
          _this2.numberOfPages = res.data.submittedclearances.total_pages;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/submittedclearances?page=0", {
          params: {
            'per_page': 10,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.page = res.data.submittedclearances.current_page;
          _this2.submittedclearances = res.data.submittedclearances;
          _this2.totalsubmittedclearances = res.data.submittedclearances.total;
          _this2.numberOfPages = res.data.submittedclearances.total_pages;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    searchIt: function searchIt(d) {
      var _this3 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/submittedclearances/".concat(d, "?page=") + pageNumber, {
          params: {
            'per_page': itemsPerPage,
            'id': d,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.page = res.data.submittedclearances.current_page;
          _this3.submittedclearances = res.data.submittedclearances;
          _this3.totalsubmittedclearances = res.data.submittedclearances.total;
          _this3.numberOfPages = res.data.submittedclearances.total_pages;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/submittedclearances?page=" + _pageNumber, {
          params: {
            'per_page': _itemsPerPage,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.page = res.data.submittedclearances.current_page;
          _this3.submittedclearances = res.data.submittedclearances;
          _this3.totalsubmittedclearances = res.data.submittedclearances.total;
          _this3.numberOfPages = res.data.submittedclearances.total_pages;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this4 = this;

      axios.interceptors.request.use(function (config) {
        _this4.loading = true;
        return config;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this4.loading = false;
        return response;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
      axios.get('/api/v1/semesters', {}).then(function (res) {
        _this4.semesters = res.data.semesters;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.submittedclearances.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this5 = this;

      var index = this.submittedclearances.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/submittedclearances/" + item.id).then(function (res) {
          _this5.text = "Record Deleted Successfully!";
          _this5.snackbarColor = "primary darken-1";
          _this5.snackbar = true;

          _this5.submittedclearances.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this5.text = "Error Deleting Record";
          _this5.snackbarColor = "error darken-1";
          _this5.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this6 = this;

      this.dialog = false;
      setTimeout(function () {
        _this6.editedItem = Object.assign({}, _this6.defaultItem);
        _this6.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this7 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/submittedclearances/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this7.text = "Record Updated Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true;
          Object.assign(_this7.submittedclearances.data[index], res.data.submittedclearance);
        })["catch"](function (err) {
          console.log(err.response);
          _this7.text = "Error Updating Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
        });
      } else {
        axios.post("/api/v1/submittedclearances", this.editedItem).then(function (res) {
          _this7.text = "Record Added Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true; // this.students.data.push(res.data.student); 

          _this7.submittedclearances = res.data.submittedclearances;
        })["catch"](function (err) {
          console.dir(err);
          _this7.text = "Error Inserting Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/CampusesComponent.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/CampusesComponent.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      dialog: false,
      loading: false,
      headers: [{
        text: 'Campus Name',
        value: 'name'
      }, {
        text: 'Action',
        align: 'right',
        value: 'actions'
      }],
      campuses: [],
      editedIndex: -1,
      campus: '',
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      editedItem: {
        id: '',
        name: '',
        short_name: '',
        campus: ''
      },
      defaultItem: {
        id: '',
        name: '',
        short_name: '',
        campus: ''
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? 'New Item' : 'Edit Item';
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    initialize: function initialize() {
      var _this = this;

      axios.interceptors.request.use(function (config) {
        _this.loading = true;
        return config;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this.loading = false;
        return response;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.get('/api/v1/campuses', {}).then(function (res) {
        _this.campuses = res.data.campuses;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.campuses.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this2 = this;

      var index = this.campuses.indexOf(item);
      console.log(index);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/campuses/" + item.id).then(function (res) {
          _this2.text = "Record Deleted Successfully!";
          _this2.snackbarColor = "primary darken-1";
          _this2.snackbar = true;
          console.log(_this2.campuses.splice(index, 1));
        })["catch"](function (err) {
          console.log("err.response");
          _this2.text = "Error Deleting Record!";
          _this2.snackbarColor = "error darken-1";
          _this2.snackbar = true;
        });
      }

      this.close();
    },
    close: function close() {
      var _this3 = this;

      this.dialog = false;
      this.$nextTick(function () {
        _this3.editedItem = Object.assign({}, _this3.defaultItem);
        _this3.editedIndex = -1;
      });
    },
    save: function save() {
      var _this4 = this;

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        console.log("Temp Data " + this.tempItem);
        axios.put("/api/v1/campuses/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this4.text = "Record Updated Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;
          Object.assign(_this4.campuses[index], res.data.campus);
          console.log(_this4.editedItem);

          _this4.close();
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Updating Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      } else {
        console.log(this.editedItem);
        axios.post("/api/v1/campuses", this.editedItem).then(function (res) {
          _this4.text = "Record Added Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true; // this.students.data.push(res.data.student); 

          _this4.campuses = res.data.campuses.data;

          _this4.close();
        })["catch"](function (err) {
          console.dir(err);
          _this4.text = "Error Inserting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/CollegesComponent.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/CollegesComponent.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      dialog: false,
      loading: false,
      headers: [{
        text: 'College Name',
        value: 'name'
      }, {
        text: 'Action',
        align: 'right',
        value: 'actions'
      }],
      campuses: '',
      colleges: [],
      editedIndex: -1,
      college: '',
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      editedItem: {
        id: '',
        name: '',
        short_name: '',
        campus_id: ''
      },
      defaultItem: {
        id: '',
        name: '',
        short_name: '',
        campus_id: ''
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? 'New Item' : 'Edit Item';
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    initialize: function initialize() {
      var _this = this;

      axios.interceptors.request.use(function (config) {
        _this.loading = true;
        return config;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this.loading = false;
        return response;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.get('/api/v1/colleges', {}).then(function (res) {
        _this.colleges = res.data.colleges;
        _this.campuses = res.data.campuses;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.colleges.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this2 = this;

      var index = this.colleges.indexOf(item);
      console.log(index);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/colleges/" + item.id).then(function (res) {
          _this2.text = "Record Deleted Successfully!";
          _this2.snackbarColor = "primary darken-1";
          _this2.snackbar = true;
          console.log(_this2.colleges.splice(index, 1));
        })["catch"](function (err) {
          console.log("err.response");
          _this2.text = "Error Deleting Record!";
          _this2.snackbarColor = "error darken-1";
          _this2.snackbar = true;
        });
      }

      this.close();
    },
    close: function close() {
      var _this3 = this;

      this.dialog = false;
      this.$nextTick(function () {
        _this3.editedItem = Object.assign({}, _this3.defaultItem);
        _this3.editedIndex = -1;
      });
    },
    save: function save() {
      var _this4 = this;

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        console.log("Temp Data " + this.tempItem);
        axios.put("/api/v1/colleges/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this4.text = "Record Updated Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;
          Object.assign(_this4.colleges[index], res.data.college);
          console.log(_this4.editedItem);

          _this4.close();
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Updating Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      } else {
        console.log(this.editedItem);
        axios.post("/api/v1/colleges", this.editedItem).then(function (res) {
          _this4.text = "Record Added Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true; // this.students.data.push(res.data.student); 

          _this4.colleges = res.data.colleges.data;

          _this4.close();
        })["catch"](function (err) {
          console.dir(err);
          _this4.text = "Error Inserting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/DashboardComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/DashboardComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _charts_ApexBarChart_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../charts/ApexBarChart.vue */ "./resources/js/charts/ApexBarChart.vue");
var _components$props$dat;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var gradients = [["#222"], ["#42b3f4"], ["red", "orange", "yellow"], ["purple", "violet"], ["#42b3f4", "#42b3f4", "#42b3f4"], ["#42b3f4", "#42b3f4", "#42b3f4"]];

var exhale = function exhale(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
};


/* harmony default export */ __webpack_exports__["default"] = (_components$props$dat = {
  components: {
    Apex: _charts_ApexBarChart_vue__WEBPACK_IMPORTED_MODULE_1__["default"]
  },
  props: {
    approved: 0,
    pending: 0
  },
  data: function data() {
    return {
      apexBar1: {
        options: {
          chart: {
            id: 'chartFirst',
            toolbar: {
              show: false
            }
          },
          plotOptions: {
            bar: {
              columnWidth: "30%",
              distributed: true,
              endingShape: "rounded",
              startingShape: "rounded"
            }
          },
          grid: {
            xaxis: {
              lines: {
                show: false
              }
            },
            yaxis: {
              lines: {
                show: false
              }
            }
          },
          dataLabels: {
            enabled: false,
            dropShadow: {
              enable: false
            }
          },
          legend: {
            show: false
          },
          xaxis: {
            axisBorder: {
              show: false
            },
            axisTicks: {
              show: false
            },
            labels: {
              show: false
            }
          },
          yaxis: {
            labels: {
              show: false
            }
          }
        },
        series: [{
          data: [70, 63, 84, 79, 70, 65, 80]
        }]
      },
      completed: 0,
      totalStudent: 0,
      approvedRequest: 0,
      pendingRequest: 0,
      totalClearanceRequest: 0,
      totalActivatedAccount: 0,
      semester: '',
      width: 2,
      radius: 10,
      padding: 8,
      lineCap: "round",
      gradient: gradients[5],
      value: [0, 2, 5, 9, 5, 10, 3, 5, 0, 0, 1, 8, 2, 9, 0],
      gradientDirection: "top",
      gradients: gradients,
      fill: false,
      type: "trend",
      autoLineWidth: false,
      checking: false,
      heartbeats: [],
      stats: [],
      dialog: false,
      loading: false,
      headers: [{
        text: "No",
        align: "left",
        sortable: false,
        value: "no"
      }, {
        text: "Office",
        value: "office"
      }, {
        text: "Total Approved",
        value: "approved"
      }, {
        text: "Pending Request",
        value: "pending"
      }],
      offices: [{
        no: 1,
        office: "Cashier(Goa Campus)",
        approved: 3308,
        pending: 16
      }, {
        no: 2,
        office: "Library(Goa Campus)",
        approved: 3292,
        pending: 0
      }, {
        no: 3,
        office: "OSAS(Goa Campus)",
        approved: 3291,
        pending: 0
      }, {
        no: 4,
        office: "Registrar(Goa Campus)",
        approved: 3048,
        pending: 112
      }, {
        no: 5,
        office: "Registrar(Goa Campus)",
        approved: 3048,
        pending: 112
      }],
      editedIndex: -1,
      editedItem: {
        name: "",
        campus: "",
        fat: 0,
        carbs: 0,
        protein: 0
      },
      defaultItem: {
        name: "",
        campus: "",
        fat: 0,
        carbs: 0,
        protein: 0
      }
    };
  },
  created: function created() {
    this.takePulse(false);
  },
  methods: {
    heartbeat: function heartbeat() {
      return Math.ceil(Math.random() * (120 - 80) + 80);
    },
    takePulse: function takePulse() {
      var _arguments = arguments,
          _this = this;

      return _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var inhale;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                inhale = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : true;
                _this.checking = true;
                _context.t0 = inhale;

                if (!_context.t0) {
                  _context.next = 6;
                  break;
                }

                _context.next = 6;
                return exhale(1000);

              case 6:
                _this.heartbeats = Array.from({
                  length: 20
                }, _this.heartbeat);
                _this.checking = false;

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))();
    }
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New Item" : "Edit Item";
    },
    avg: function avg() {
      // const sum = this.heartbeats.reduce((acc, cur) => acc + cur, 0)
      // const length = this.heartbeats.length
      // if (!sum && !length) return 0
      // return Math.ceil(sum / length)
      return 5421;
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  }
}, _defineProperty(_components$props$dat, "created", function created() {
  var _this2 = this;

  return _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return _this2.initialize();

          case 2:
            _this2.pendingRequest = 100;

          case 3:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }))();
}), _defineProperty(_components$props$dat, "methods", {
  initialize: function initialize() {
    var _this3 = this;

    this.colleges = [], axios.interceptors.request.use(function (config) {
      _this3.loading = true;
      return config;
    }, function (error) {
      _this3.loading = false;
      return Promise.reject(error);
    });
    axios.interceptors.response.use(function (response) {
      _this3.loading = false;
      return response;
    }, function (error) {
      _this3.loading = false;
      return Promise.reject(error);
    });
    axios.get("/api/v1/colleges", {}).then(function (res) {// this.colleges = res.data.colleges
    })["catch"](function (err) {
      console.error(err);
    });
    axios.get("/api/v1/admindashboard", {}).then(function (res) {
      console.dir(res.completed);
      _this3.completed = res.data.completed;
      _this3.totalStudent = res.data.totalStudent;
      _this3.approvedRequest = res.data.approvedRequest;
      _this3.pendingRequest = res.data.pendingRequest;
      _this3.totalClearanceRequest = res.data.totalClearanceRequest;
      _this3.semester = res.data.semester;
      _this3.totalActivatedAccount = res.data.totalActivatedAccount;
      _this3.totalStudent = res.data.totalStudent;
      _this3.stats = [{
        name: "Total Students",
        total: _this3.totalStudent
      }, {
        name: "Active Account(s)",
        total: res.data.totalActivatedAccount
      }, {
        name: "Pending Request(s)",
        total: res.data.pendingRequest
      }, {
        name: "Approved Request(s)",
        total: res.data.approvedRequest
      }, {
        name: "Total Clearance Request(s)",
        total: res.data.totalClearanceRequest
      }];
    })["catch"](function (err) {
      console.error(err);
    });
  }
}), _components$props$dat);

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/DashboardComponentt.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/DashboardComponentt.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var _this = undefined;

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      dailySalesChart: {
        data: {
          labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],
          series: [[12, 17, 7, 17, 23, 18, 38]]
        },
        options: {
          lineSmooth: _this.$chartist.Interpolation.cardinal({
            tension: 0
          }),
          low: 0,
          high: 50,
          // creative tim: we recommend you to set the high sa the biggest value + something for a better look
          chartPadding: {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0
          }
        }
      },
      dataCompletedTasksChart: {
        data: {
          labels: ['12am', '3pm', '6pm', '9pm', '12pm', '3am', '6am', '9am'],
          series: [[230, 750, 450, 300, 280, 240, 200, 190]]
        },
        options: {
          lineSmooth: _this.$chartist.Interpolation.cardinal({
            tension: 0
          }),
          low: 0,
          high: 1000,
          // creative tim: we recommend you to set the high sa the biggest value + something for a better look
          chartPadding: {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0
          }
        }
      },
      emailsSubscriptionChart: {
        data: {
          labels: ['Ja', 'Fe', 'Ma', 'Ap', 'Mai', 'Ju', 'Jul', 'Au', 'Se', 'Oc', 'No', 'De'],
          series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]
        },
        options: {
          axisX: {
            showGrid: false
          },
          low: 0,
          high: 1000,
          chartPadding: {
            top: 0,
            right: 5,
            bottom: 0,
            left: 0
          }
        },
        responsiveOptions: [['screen and (max-width: 640px)', {
          seriesBarDistance: 5,
          axisX: {
            labelInterpolationFnc: function labelInterpolationFnc(value) {
              return value[0];
            }
          }
        }]]
      },
      headers: [{
        sortable: false,
        text: 'ID',
        value: 'id'
      }, {
        sortable: false,
        text: 'Name',
        value: 'name'
      }, {
        sortable: false,
        text: 'Salary',
        value: 'salary',
        align: 'right'
      }, {
        sortable: false,
        text: 'Country',
        value: 'country',
        align: 'right'
      }, {
        sortable: false,
        text: 'City',
        value: 'city',
        align: 'right'
      }],
      items: [{
        id: 1,
        name: 'Dakota Rice',
        country: 'Niger',
        city: 'Oud-Tunrhout',
        salary: '$35,738'
      }, {
        id: 2,
        name: 'Minerva Hooper',
        country: 'Curaçao',
        city: 'Sinaai-Waas',
        salary: '$23,738'
      }, {
        id: 3,
        name: 'Sage Rodriguez',
        country: 'Netherlands',
        city: 'Overland Park',
        salary: '$56,142'
      }, {
        id: 4,
        name: 'Philip Chanley',
        country: 'Korea, South',
        city: 'Gloucester',
        salary: '$38,735'
      }, {
        id: 5,
        name: 'Doris Greene',
        country: 'Malawi',
        city: 'Feldkirchen in Kārnten',
        salary: '$63,542'
      }],
      tabs: 0,
      tasks: {
        0: [{
          text: 'Sign contract for "What are conference organizers afraid of?"',
          value: true
        }, {
          text: 'Lines From Great Russian Literature? Or E-mails From My Boss?',
          value: false
        }, {
          text: 'Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit',
          value: false
        }, {
          text: 'Create 4 Invisible User Experiences you Never Knew About',
          value: true
        }],
        1: [{
          text: 'Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit',
          value: true
        }, {
          text: 'Sign contract for "What are conference organizers afraid of?"',
          value: false
        }],
        2: [{
          text: 'Lines From Great Russian Literature? Or E-mails From My Boss?',
          value: false
        }, {
          text: 'Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit',
          value: true
        }, {
          text: 'Sign contract for "What are conference organizers afraid of?"',
          value: true
        }]
      },
      list: {
        0: false,
        1: false,
        2: false
      }
    };
  },
  methods: {
    complete: function complete(index) {
      this.list[index] = !this.list[index];
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/GraduationsComponent.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/GraduationsComponent.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      dialog: false,
      loading: false,
      headers: [{
        text: 'Name',
        value: 'graduation'
      }, {
        text: 'Action',
        align: 'right',
        value: 'actions'
      }],
      graduations: [],
      editedIndex: -1,
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      editedItem: {
        id: '',
        graduation: ''
      },
      defaultItem: {
        id: '',
        graduation: ''
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? 'New Item' : 'Edit Item';
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    initialize: function initialize() {
      var _this = this;

      axios.interceptors.request.use(function (config) {
        _this.loading = true;
        return config;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this.loading = false;
        return response;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.get('/api/v1/graduations', {}).then(function (res) {
        _this.graduations = res.data.graduations;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.graduations.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this2 = this;

      var index = this.graduations.indexOf(item);
      console.log(index);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/graduations/" + item.id).then(function (res) {
          _this2.text = "Record Deleted Successfully!";
          _this2.snackbarColor = "primary darken-1";
          _this2.snackbar = true;
          console.log(_this2.graduations.splice(index, 1));
        })["catch"](function (err) {
          // console.log("err.response");
          _this2.text = "Error Deleting Record!";
          _this2.snackbarColor = "error darken-1";
          _this2.snackbar = true;
        });
      }

      this.close();
    },
    close: function close() {
      var _this3 = this;

      this.dialog = false;
      this.$nextTick(function () {
        _this3.editedItem = Object.assign({}, _this3.defaultItem);
        _this3.editedIndex = -1;
      });
    },
    save: function save() {
      var _this4 = this;

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        console.log("Temp Data " + this.tempItem);
        axios.put("/api/v1/graduations/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this4.text = "Record Updated Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;
          Object.assign(_this4.graduations[index], res.data.graduation);
          console.log(_this4.editedItem);

          _this4.close();
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Updating Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      } else {
        console.log(this.editedItem);
        axios.post("/api/v1/graduations", this.editedItem).then(function (res) {
          _this4.text = "Record Added Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true; // this.students.data.push(res.data.student); 

          console.log("Graduation");
          console.log(res.data.graduations.data);
          _this4.graduations = res.data.graduations.data;

          _this4.close();
        })["catch"](function (err) {
          console.dir(err);
          _this4.text = "Error Inserting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/ProgramsComponent.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/ProgramsComponent.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      dialog: false,
      loading: false,
      headers: [{
        text: 'Program Name',
        align: 'left',
        value: 'name'
      }, {
        text: 'College',
        value: 'college.short_name'
      }, {
        text: 'Campus',
        value: 'campus.short_name'
      }, {
        text: 'Action',
        align: 'right',
        value: 'actions'
      }],
      campuses: '',
      colleges: '',
      programs: [],
      editedIndex: -1,
      program: '',
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      editedItem: {
        id: '',
        name: '',
        short_name: '',
        college_id: '',
        campus_id: ''
      },
      defaultItem: {
        id: '',
        name: '',
        short_name: '',
        college_id: '',
        campus_id: ''
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? 'New Item' : 'Edit Item';
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    initialize: function initialize() {
      var _this = this;

      axios.interceptors.request.use(function (config) {
        _this.loading = true;
        return config;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this.loading = false;
        return response;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.get('/api/v1/programs', {}).then(function (res) {
        _this.programs = res.data.programs;
        _this.campuses = res.data.campuses;
        _this.colleges = res.data.colleges;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.programs.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this2 = this;

      var index = this.programs.indexOf(item);
      console.log(index);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/programs/" + item.id).then(function (res) {
          _this2.text = "Record Deleted Successfully!";
          _this2.snackbarColor = "primary darken-1";
          _this2.snackbar = true;

          _this2.close();

          console.log(_this2.programs.splice(index, 1));
        })["catch"](function (err) {
          console.log("err.response");
          _this2.text = "Error Deleting Record!";
          _this2.snackbarColor = "error darken-1";
          _this2.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this3 = this;

      this.dialog = false;
      this.$nextTick(function () {
        _this3.editedItem = Object.assign({}, _this3.defaultItem);
        _this3.editedIndex = -1;
      });
    },
    save: function save() {
      var _this4 = this;

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        console.log("Temp Data " + this.tempItem);
        axios.put("/api/v1/programs/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this4.text = "Record Updated Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;
          Object.assign(_this4.programs[index], res.data.program);
          console.log(_this4.editedItem);

          _this4.close();
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Updating Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      } else {
        console.log(this.editedItem);
        axios.post("/api/v1/programs", this.editedItem).then(function (res) {
          _this4.text = "Record Added Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true; // this.students.data.push(res.data.student); 

          _this4.programs = res.data.programs.data;

          _this4.close();
        })["catch"](function (err) {
          console.dir(err);
          _this4.text = "Error Inserting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/PurposesComponent.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/PurposesComponent.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      dialog: false,
      loading: false,
      headers: [{
        text: 'Code',
        align: 'left',
        sortable: false,
        value: 'code'
      }, {
        text: 'Purpose',
        value: 'purpose'
      }, {
        text: 'Action',
        align: 'right',
        value: 'actions'
      }],
      purposes: [],
      editedIndex: -1,
      editedItem: {
        purpose: '',
        code: ''
      },
      defaultItem: {
        purpose: '',
        code: ''
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? 'New Item' : 'Edit Item';
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    initialize: function initialize() {
      var _this = this;

      axios.interceptors.request.use(function (config) {
        _this.loading = true;
        return config;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this.loading = false;
        return response;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.get('/api/v1/purposes', {}).then(function (res) {
        _this.purposes = res.data.purposes;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.purposes.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this2 = this;

      var index = this.purposes.indexOf(item);
      console.log(index);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/purposes/" + item.id).then(function (res) {
          _this2.text = "Record Deleted Successfully!";
          _this2.snackbarColor = "primary darken-1";
          _this2.snackbar = true;
          console.log(_this2.purposes.splice(index, 1));
        })["catch"](function (err) {
          // console.log("err.response");
          _this2.text = "Error Deleting Record!";
          _this2.snackbarColor = "error darken-1";
          _this2.snackbar = true;
        });
      }

      this.close();
    },
    close: function close() {
      var _this3 = this;

      this.dialog = false;
      this.$nextTick(function () {
        _this3.editedItem = Object.assign({}, _this3.defaultItem);
        _this3.editedIndex = -1;
      });
    },
    save: function save() {
      var _this4 = this;

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        console.log("Temp Data " + this.tempItem);
        axios.put("/api/v1/purposes/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this4.text = "Record Updated Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;
          Object.assign(_this4.purposes[index], res.data.purpose);
          console.log(_this4.editedItem);

          _this4.close();
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Updating Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      } else {
        console.log(this.editedItem);
        axios.post("/api/v1/purposes", this.editedItem).then(function (res) {
          _this4.text = "Record Added Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true; // this.students.data.push(res.data.student); 

          console.log("Semester");
          console.log(res.data.purposes.data);
          _this4.purposes = res.data.purposes.data;

          _this4.close();
        })["catch"](function (err) {
          console.dir(err);
          _this4.text = "Error Inserting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SectionsComponent.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/SectionsComponent.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      dialog: false,
      loading: false,
      headers: [{
        text: 'No',
        align: 'left',
        sortable: false,
        value: 'id'
      }, {
        text: 'Program Name',
        value: 'program.name'
      }, {
        text: 'Section',
        value: 'name'
      }, {
        text: 'Action',
        value: 'actions'
      }],
      sections: [],
      editedIndex: -1,
      editedItem: {
        name: '',
        campus: '',
        fat: 0,
        carbs: 0,
        protein: 0
      },
      defaultItem: {
        name: '',
        campus: '',
        fat: 0,
        carbs: 0,
        protein: 0
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? 'New Item' : 'Edit Item';
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    initialize: function initialize() {
      var _this = this;

      this.sections = [], axios.interceptors.request.use(function (config) {
        _this.loading = true;
        return config;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this.loading = false;
        return response;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.get('/api/v1/sections', {}).then(function (res) {
        _this.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.sections.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var index = this.sections.indexOf(item);
      confirm('Are you sure you want to delete this item?') && this.sections.splice(index, 1);
    },
    close: function close() {
      var _this2 = this;

      this.dialog = false;
      this.$nextTick(function () {
        _this2.editedItem = Object.assign({}, _this2.defaultItem);
        _this2.editedIndex = -1;
      });
    },
    save: function save() {
      if (this.editedIndex > -1) {
        Object.assign(this.sections[this.editedIndex], this.editedItem);
      } else {
        this.sections.push(this.editedItem);
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SemestersComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/SemestersComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      dialog: false,
      loading: false,
      headers: [{
        text: 'Code',
        value: 'code'
      }, {
        text: 'Semester',
        value: 'semester'
      }, {
        text: 'From',
        value: 'from'
      }, {
        text: 'To',
        value: 'to'
      }, {
        text: 'Action',
        align: 'right',
        value: 'actions'
      }],
      semesters: [],
      editedIndex: -1,
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      editedItem: {
        id: '',
        code: '',
        semester: '',
        from: '',
        to: ''
      },
      defaultItem: {
        id: '',
        code: '',
        semester: '',
        from: '',
        to: ''
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? 'New Item' : 'Edit Item';
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    initialize: function initialize() {
      var _this = this;

      axios.interceptors.request.use(function (config) {
        _this.loading = true;
        return config;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this.loading = false;
        return response;
      }, function (error) {
        _this.loading = false;
        return Promise.reject(error);
      });
      axios.get('/api/v1/semesters', {}).then(function (res) {
        _this.semesters = res.data.semesters;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.semesters.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this2 = this;

      var index = this.semesters.indexOf(item);
      console.log(index);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/semesters/" + item.id).then(function (res) {
          _this2.text = "Record Deleted Successfully!";
          _this2.snackbarColor = "primary darken-1";
          _this2.snackbar = true;
          console.log(_this2.semesters.splice(index, 1));
        })["catch"](function (err) {
          // console.log("err.response");
          _this2.text = "Error Deleting Record!";
          _this2.snackbarColor = "error darken-1";
          _this2.snackbar = true;
        });
      }

      this.close();
    },
    close: function close() {
      var _this3 = this;

      this.dialog = false;
      this.$nextTick(function () {
        _this3.editedItem = Object.assign({}, _this3.defaultItem);
        _this3.editedIndex = -1;
      });
    },
    save: function save() {
      var _this4 = this;

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        console.log("Temp Data " + this.tempItem);
        axios.put("/api/v1/semesters/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this4.text = "Record Updated Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;
          Object.assign(_this4.semesters[index], res.data.semester);
          console.log(_this4.editedItem);

          _this4.close();
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Updating Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      } else {
        console.log(this.editedItem);
        axios.post("/api/v1/semesters", this.editedItem).then(function (res) {
          _this4.text = "Record Added Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true; // this.students.data.push(res.data.student); 

          console.log("Semester");
          console.log(res.data.semesters.data);
          _this4.semesters = res.data.semesters.data;

          _this4.close();
        })["catch"](function (err) {
          console.dir(err);
          _this4.text = "Error Inserting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      headers: [{
        text: "Name",
        value: "name"
      }, {
        text: "Email",
        value: "email"
      }, {
        text: "Role",
        value: "role"
      }, {
        text: "Last Update",
        value: "updated_at"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalUsers: 0,
      numberOfPages: 0,
      options: {},
      users: {},
      roles: [],
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      editedIndex: -1,
      editedItem: {
        id: "",
        name: "",
        email: "",
        role: "",
        password: "",
        rpassword: "",
        created_at: ""
      },
      defaultItem: {
        id: "",
        name: "",
        email: "",
        password: "",
        rpassword: "",
        role: "",
        created_at: ""
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New User" : "Edit User";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-account-plus" : "mdi-account-edit";
    },
    passwordmatch: function passwordmatch() {
      return this.editedItem.password != this.editedItem.rpassword ? "Password Does Not Match" : true;
    },
    checkEmail: function checkEmail() {
      var _this = this;

      if (/.+@.+\..+/.test(this.editedItem.email)) {
        axios.post("/api/v1/email/verify", {
          email: this.editedItem.email
        }).then(function (res) {
          _this.success = res.data.message;
          _this.error = "";
        })["catch"](function (err) {
          _this.success = "";
          _this.error = "Email Already Exist";
        });
      }
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this2 = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/users?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this2.loading = false; //  this.page = response.data.students;

        _this2.users = response.data.users;
        _this2.roles = response.data.roles;
        _this2.totalUsers = response.data.users.total;
        _this2.numberOfPages = response.data.users.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this3 = this;

      if (d.length > 3) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/users/".concat(d)).then(function (res) {
          _this3.loading = false;
          _this3.roles = res.data.roles; // this.page = response.data.students;

          _this3.users = res.data.users;
          _this3.totalUsers = res.data.users.total;
          _this3.numberOfPages = res.data.users.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/users?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.roles = res.data.roles; // this.page = response.data.students;

          _this3.users = res.data.users;
          _this3.totalUsers = res.data.users.total;
          _this3.numberOfPages = res.data.users.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    updateRole: function updateRole(item) {
      var _this4 = this;

      var index = this.users.data.indexOf(item);
      axios.post('/api/v1/user/role', {
        'role': item.role,
        'user': item.id
      }).then(function (res) {
        _this4.text = res.data.user.name + "'s Role Updated to " + res.data.user.role;
        _this4.snackbar = true;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    // paginate(e) { 
    //   axios
    //     .get(`/api/v1/users?page=${e.page}`, {
    //       params: { 'per_page': e.itemsPerPage},
    //     })
    //     .then(res => {
    //       this.users = res.data.users;
    //       this.roles = res.data.roles;
    //     })
    //     .catch(err => {
    //       if (err.response.status == 401) {
    //         localStorage.removeItem("token");
    //         this.$router.push("/login");
    //       }
    //     });
    // },
    initialize: function initialize() {
      var _this5 = this;

      axios.interceptors.request.use(function (config) {
        _this5.loading = true;
        return config;
      }, function (error) {
        _this5.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this5.loading = false;
        return response;
      }, function (error) {
        _this5.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.users.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.editedItem.password = "parsu2021";
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this6 = this;

      var index = this.users.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/users/" + item.id).then(function (res) {
          _this6.text = "Record Deleted Successfully!";
          _this6.snackbar = true;

          _this6.users.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this6.text = "Error Deleting Record";
          _this6.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this7 = this;

      this.dialog = false;
      setTimeout(function () {
        _this7.editedItem = Object.assign({}, _this7.defaultItem);
        _this7.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this8 = this;

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/users/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this8.text = "Record Updated Successfully!";
          _this8.snackbar = true;
          Object.assign(_this8.users.data[index], res.data.user);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Updating Record";
          _this8.snackbar = true;
        });
      } else {
        axios.post("/api/v1/users", this.editedItem).then(function (res) {
          _this8.text = "Record Added Successfully!";
          _this8.snackbar = true;

          _this8.users.data.push(res.data.user);

          console.log(res);
        })["catch"](function (err) {
          console.dir(err);
          _this8.text = "Error Inserting Record";
          _this8.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/UsersComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/UsersComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      headers: [{
        text: "No",
        align: "left",
        value: "id"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Email",
        value: "email"
      }, {
        text: "Role",
        value: "role"
      }, {
        text: "Date Created",
        value: "created_at"
      }, {
        text: "Updated Created",
        value: "updated_at"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalUsers: 0,
      numberOfPages: 0,
      options: {},
      users: {},
      roles: [],
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      editedIndex: -1,
      editedItem: {
        id: "",
        name: "",
        email: "",
        role: "",
        password: "",
        rpassword: "",
        created_at: ""
      },
      defaultItem: {
        id: "",
        name: "",
        email: "",
        password: "",
        rpassword: "",
        role: "",
        created_at: ""
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New User" : "Edit User";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-account-plus" : "mdi-account-edit";
    },
    passwordmatch: function passwordmatch() {
      return this.editedItem.password != this.editedItem.rpassword ? "Password Does Not Match" : true;
    },
    checkEmail: function checkEmail() {
      var _this = this;

      if (/.+@.+\..+/.test(this.editedItem.email)) {
        axios.post("/api/v1/email/verify", {
          email: this.editedItem.email
        }).then(function (res) {
          _this.success = res.data.message;
          _this.error = "";
        })["catch"](function (err) {
          _this.success = "";
          _this.error = "Email Already Exist";
        });
      }
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this2 = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/users?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this2.loading = false; //  this.page = response.data.students;

        _this2.users = response.data.users;
        _this2.roles = response.data.roles;
        _this2.totalUsers = response.data.users.total;
        _this2.numberOfPages = response.data.users.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this3 = this;

      if (d.length > 3) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/users/".concat(d)).then(function (res) {
          _this3.loading = false;
          _this3.roles = res.data.roles; // this.page = response.data.students;

          _this3.users = res.data.users;
          _this3.totalUsers = res.data.users.total;
          _this3.numberOfPages = res.data.users.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/users?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.roles = res.data.roles; // this.page = response.data.students;

          _this3.users = res.data.users;
          _this3.totalUsers = res.data.users.total;
          _this3.numberOfPages = res.data.users.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    updateRole: function updateRole(item) {
      var _this4 = this;

      var index = this.users.data.indexOf(item);
      axios.post('/api/v1/user/role', {
        'role': item.role,
        'user': item.id
      }).then(function (res) {
        _this4.text = res.data.user.name + "'s Role Updated to " + res.data.user.role;
        _this4.snackbar = true;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    // paginate(e) { 
    //   axios
    //     .get(`/api/v1/users?page=${e.page}`, {
    //       params: { 'per_page': e.itemsPerPage},
    //     })
    //     .then(res => {
    //       this.users = res.data.users;
    //       this.roles = res.data.roles;
    //     })
    //     .catch(err => {
    //       if (err.response.status == 401) {
    //         localStorage.removeItem("token");
    //         this.$router.push("/login");
    //       }
    //     });
    // },
    initialize: function initialize() {
      var _this5 = this;

      axios.interceptors.request.use(function (config) {
        _this5.loading = true;
        return config;
      }, function (error) {
        _this5.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this5.loading = false;
        return response;
      }, function (error) {
        _this5.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.users.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.editedItem.password = "parsu2021";
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this6 = this;

      var index = this.users.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/users/" + item.id).then(function (res) {
          _this6.text = "Record Deleted Successfully!";
          _this6.snackbar = true;

          _this6.users.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this6.text = "Error Deleting Record";
          _this6.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this7 = this;

      this.dialog = false;
      setTimeout(function () {
        _this7.editedItem = Object.assign({}, _this7.defaultItem);
        _this7.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this8 = this;

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/users/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this8.text = "Record Updated Successfully!";
          _this8.snackbar = true;
          Object.assign(_this8.users.data[index], res.data.user);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Updating Record";
          _this8.snackbar = true;
        });
      } else {
        axios.post("/api/v1/users", this.editedItem).then(function (res) {
          _this8.text = "Record Added Successfully!";
          _this8.snackbar = true;

          _this8.users.data.push(res.data.user);

          console.log(res);
        })["catch"](function (err) {
          console.dir(err);
          _this8.text = "Error Inserting Record";
          _this8.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      items: [],
      model: null,
      search: null,
      copyDialog: false,
      tab: null,
      valid: true,
      dialog: false,
      loading: false,
      isLoading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      searchItem: '',
      headers: [{
        text: "Name",
        value: "name"
      }, {
        text: "Campus",
        value: "campus"
      }, {
        text: "Semester",
        value: "semester"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalCashiers: 0,
      numberOfPages: 0,
      options: {},
      cashiers: {},
      staffs: {},
      campuses: {},
      designations: {},
      semesters: {},
      user_staff: {},
      years: [1, 2, 3, 4, 5],
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      editedIndex: -1,
      editedItem: {
        id: "",
        campus_id: "",
        user_id: '',
        semester_id: '',
        designee_id: ''
      },
      defaultItem: {
        id: "",
        campus_id: "",
        user_id: '',
        semester_id: '',
        designee_id: ''
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New " : "Edit ";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/cashiers?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.cashiers = response.data.cashiers;
        _this.user_staff = response.data.user_staff;
        _this.designations = response.data.designations;
        _this.campuses = response.data.campuses;
        _this.semesters = response.data.semesters;
        _this.totalCashiers = response.data.cashiers.total;
        _this.numberOfPages = response.data.cashiers.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/cashiers/".concat(d, "?page=") + pageNumber, {
          params: {
            'per_page': itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.cashiers = res.data.cashiers;
          console.log(_this2.cashiers);
          _this2.totalCashiers = res.data.cashiers.total;
          _this2.numberOfPages = res.data.cashiers.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/cashiers?page=" + _pageNumber, {
          params: {
            'per_page': _itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.cashiers = res.data.cashiers;
          _this2.user_staff = res.data.user_staff;
          _this2.designations = res.data.designations;
          _this2.campuses = res.data.campuses;
          _this2.semesters = res.data.semesters;
          _this2.totalCashiers = res.data.cashiers.total;
          _this2.numberOfPages = res.data.cashiers.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.cashiers.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      console.log(this.editedItem);
      this.dialog = true;
    },
    campusListener: function campusListener() {
      var _this4 = this;

      axios.post("/api/v1/campusListener", {
        'campus_id': this.editedItem.campus_id
      }).then(function (res) {
        _this4.programs = res.data.programs;
        _this4.sections = '';
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListener: function programListener() {
      var _this5 = this;

      axios.post("/api/v1/programListener", {
        'program_id': this.editedItem.program_id
      }).then(function (res) {
        _this5.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    campusListenerNew: function campusListenerNew() {
      var _this6 = this;

      axios.post("/api/v1/campusListener", {
        'campus_id': this.editedItem.campus
      }).then(function (res) {
        _this6.programs = res.data.programs;
        _this6.sections = '';
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListenerNew: function programListenerNew() {
      var _this7 = this;

      axios.post("/api/v1/programListener", {
        'program_id': this.editedItem.program
      }).then(function (res) {
        _this7.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    deleteItem: function deleteItem(item) {
      var _this8 = this;

      var index = this.cashiers.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/cashiers/" + item.id).then(function (res) {
          _this8.text = "Record Deleted Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;

          _this8.cashiers.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Deleting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this9 = this;

      this.dialog = false;
      setTimeout(function () {
        _this9.editedItem = Object.assign({}, _this9.defaultItem);
        _this9.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this10 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/cashiers/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this10.text = "Record Updated Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true;
          Object.assign(_this10.cashiers.data[index], res.data.cashier);
          console.log(_this10.editedItem);
        })["catch"](function (err) {
          console.log(err.response);
          _this10.text = "Error Updating Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      } else {
        axios.post("/api/v1/cashiers", this.editedItem).then(function (res) {
          _this10.text = "Record Added Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true; // this.cashiers.data.push(res.data.cashier); 

          _this10.cashiers = res.data.cashiers;
        })["catch"](function (err) {
          console.dir(err);
          _this10.text = "Error Inserting Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      addEdit: "Add",
      selected: [],
      isLoading: false,
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      searchItem: "",
      headers: [{
        text: "Name",
        value: "name"
      }, {
        text: "College/Campus",
        value: "college"
      }, {
        text: "Semester",
        value: "semester"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalDeans: 0,
      numberOfPages: 0,
      options: {},
      deans: {},
      campuses: {},
      semesters: {},
      colleges: {},
      user_dean: {},
      user_staff: {},
      years: [1, 2, 3, 4, 5],
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      editedIndex: -1,
      editedItem: {
        id: "",
        college_id: '',
        semester_id: '',
        user_id: ''
      },
      defaultItem: {
        id: "",
        college_id: '',
        semester_id: '',
        user_id: ''
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New" : "Edit";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/deans?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.user_dean = response.data.user_dean;
        _this.deans = response.data.deans;
        _this.colleges = response.data.colleges;
        _this.semesters = response.data.semesters;
        _this.user_staff = response.data.user_staff;
        console.log(_this.user_staff);
        _this.totalDeans = response.data.deans.total;
        _this.numberOfPages = response.data.deans.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/deans/".concat(d, "?page=") + pageNumber, {
          params: {
            'per_page': itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.deans = res.data.deans;
          _this2.user_dean = res.data.user_dean;
          console.log(_this2.deans);
          _this2.totalDeans = res.data.deans.total;
          _this2.numberOfPages = res.data.deans.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/deans?page=" + _pageNumber, {
          params: {
            'per_page': _itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.deans = res.data.deans;
          _this2.colleges = res.data.colleges;
          _this2.semesters = res.data.semesters;
          _this2.user_staff = res.data.user_staff;
          console.log(res.data.user_staff);
          _this2.user_dean = res.data.user_dean;
          _this2.totalDeans = res.data.deans.total;
          _this2.numberOfPages = res.data.deans.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.deans.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      console.log(this.editedItem);
      this.dialog = true;
    },
    campusListener: function campusListener() {
      var _this4 = this;

      axios.post("/api/v1/campusListener", {
        'campus_id': this.editedItem.campus_id
      }).then(function (res) {
        _this4.programs = res.data.programs;
        _this4.sections = '';
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListener: function programListener() {
      var _this5 = this;

      axios.post("/api/v1/programListener", {
        'program_id': this.editedItem.program_id
      }).then(function (res) {
        _this5.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    campusListenerNew: function campusListenerNew() {
      var _this6 = this;

      axios.post("/api/v1/campusListener", {
        'campus_id': this.editedItem.campus
      }).then(function (res) {
        _this6.programs = res.data.programs;
        _this6.sections = '';
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListenerNew: function programListenerNew() {
      var _this7 = this;

      axios.post("/api/v1/programListener", {
        'program_id': this.editedItem.program
      }).then(function (res) {
        _this7.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    updateDean: function updateDean(item) {
      var _this8 = this;

      var index = this.deans.data.indexOf(item);
      axios.post('/api/v1/dean/update', {
        'new_dean': item.user_id,
        'dean': item.id
      }).then(function (res) {
        _this8.deans = res.data.deans;
        _this8.user_dean = res.data.user_dean;
        _this8.totalDeans = res.data.deans.total;
        _this8.numberOfPages = res.data.deans.last_page;
        _this8.text = "successfully update";
        _this8.snackbar = true;
      })["catch"](function (err) {
        console.error(err);
      });
      console.log(item);
    },
    deleteItem: function deleteItem(item) {
      var _this9 = this;

      var index = this.deans.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/deans/" + item.id).then(function (res) {
          _this9.text = "Record Deleted Successfully!";
          _this9.snackbarColor = "primary darken-1";
          _this9.snackbar = true;

          _this9.deans.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this9.text = "Error Deleting Record";
          _this9.snackbarColor = "error darken-1";
          _this9.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this10 = this;

      this.dialog = false;
      setTimeout(function () {
        _this10.editedItem = Object.assign({}, _this10.defaultItem);
        _this10.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this11 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/deans/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this11.text = "Record Updated Successfully!";
          _this11.snackbarColor = "primary darken-1";
          _this11.snackbar = true;
          Object.assign(_this11.deans.data[index], res.data.dean);
          console.log(_this11.editedItem);
        })["catch"](function (err) {
          console.log(err.response);
          _this11.text = "Error Updating Record";
          _this11.snackbarColor = "error darken-1";
          _this11.snackbar = true;
        });
      } else {
        axios.post("/api/v1/deans", this.editedItem).then(function (res) {
          _this11.text = "Record Added Successfully!";
          _this11.snackbarColor = "primary darken-1";
          _this11.snackbar = true; // this.deans.data.push(res.data.dean); 
          // console.log(this.editItem)

          _this11.deans = res.data.deans;
        })["catch"](function (err) {
          console.dir(err);
          _this11.text = "Error Inserting Record";
          _this11.snackbarColor = "error darken-1";
          _this11.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      items: [],
      model: null,
      search: null,
      copyDialog: false,
      tab: null,
      valid: true,
      dialog: false,
      loading: false,
      isLoading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      searchItem: '',
      headers: [{
        text: "Name",
        value: "name"
      }, {
        text: "Campus",
        value: "campus"
      }, {
        text: "Semester",
        value: "semester"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalLibrarys: 0,
      numberOfPages: 0,
      options: {},
      librarys: {},
      staffs: {},
      campuses: {},
      designations: {},
      semesters: {},
      user_staff: {},
      years: [1, 2, 3, 4, 5],
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      editedIndex: -1,
      editedItem: {
        id: "",
        campus_id: "",
        user_id: '',
        semester_id: '',
        designee_id: ''
      },
      defaultItem: {
        id: "",
        campus_id: "",
        user_id: '',
        semester_id: '',
        designee_id: ''
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New" : "Edit";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/librarys?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.librarys = response.data.librarys;
        _this.user_staff = response.data.user_staff;
        _this.designations = response.data.designations;
        _this.campuses = response.data.campuses;
        _this.semesters = response.data.semesters;
        _this.totalLibrarys = response.data.librarys.total;
        _this.numberOfPages = response.data.librarys.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/librarys/".concat(d, "?page=") + pageNumber, {
          params: {
            'per_page': itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.librarys = res.data.librarys;
          console.log(_this2.librarys);
          _this2.totalLibrarys = res.data.librarys.total;
          _this2.numberOfPages = res.data.librarys.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/librarys?page=" + _pageNumber, {
          params: {
            'per_page': _itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.librarys = res.data.librarys;
          _this2.user_staff = res.data.user_staff;
          _this2.designations = res.data.designations;
          _this2.campuses = res.data.campuses;
          _this2.semesters = res.data.semesters;
          _this2.totalLibrarys = res.data.librarys.total;
          _this2.numberOfPages = res.data.librarys.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.librarys.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      console.log(this.editedItem);
      this.dialog = true;
    },
    campusListener: function campusListener() {
      var _this4 = this;

      axios.post("/api/v1/campusListener", {
        'campus_id': this.editedItem.campus_id
      }).then(function (res) {
        _this4.programs = res.data.programs;
        _this4.sections = '';
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListener: function programListener() {
      var _this5 = this;

      axios.post("/api/v1/programListener", {
        'program_id': this.editedItem.program_id
      }).then(function (res) {
        _this5.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    campusListenerNew: function campusListenerNew() {
      var _this6 = this;

      axios.post("/api/v1/campusListener", {
        'campus_id': this.editedItem.campus
      }).then(function (res) {
        _this6.programs = res.data.programs;
        _this6.sections = '';
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListenerNew: function programListenerNew() {
      var _this7 = this;

      axios.post("/api/v1/programListener", {
        'program_id': this.editedItem.program
      }).then(function (res) {
        _this7.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    deleteItem: function deleteItem(item) {
      var _this8 = this;

      var index = this.librarys.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/librarys/" + item.id).then(function (res) {
          _this8.text = "Record Deleted Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;

          _this8.librarys.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Deleting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this9 = this;

      this.dialog = false;
      setTimeout(function () {
        _this9.editedItem = Object.assign({}, _this9.defaultItem);
        _this9.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this10 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/librarys/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this10.text = "Record Updated Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true;
          Object.assign(_this10.librarys.data[index], res.data.library);
          console.log(_this10.editedItem);
        })["catch"](function (err) {
          console.log(err.response);
          _this10.text = "Error Updating Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      } else {
        axios.post("/api/v1/librarys", this.editedItem).then(function (res) {
          _this10.text = "Record Added Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true; // this.librarys.data.push(res.data.library); 

          _this10.librarys = res.data.librarys;
        })["catch"](function (err) {
          console.dir(err);
          _this10.text = "Error Inserting Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      items: [],
      model: null,
      search: null,
      copyDialog: false,
      tab: null,
      valid: true,
      dialog: false,
      loading: false,
      isLoading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      searchItem: '',
      headers: [{
        text: "Name",
        value: "name"
      }, {
        text: "Campus",
        value: "campus"
      }, {
        text: "Semester",
        value: "semester"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalOSASs: 0,
      numberOfPages: 0,
      options: {},
      osass: {},
      staffs: {},
      campuses: {},
      designations: {},
      semesters: {},
      user_staff: {},
      years: [1, 2, 3, 4, 5],
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      editedIndex: -1,
      editedItem: {
        id: "",
        campus_id: "",
        user_id: '',
        semester_id: '',
        designee_id: ''
      },
      defaultItem: {
        id: "",
        campus_id: "",
        user_id: '',
        semester_id: '',
        designee_id: ''
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New " : "Edit ";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/osass?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.osass = response.data.osass;
        _this.user_staff = response.data.user_staff;
        _this.designations = response.data.designations;
        _this.campuses = response.data.campuses;
        _this.semesters = response.data.semesters;
        _this.totalOSASs = response.data.osass.total;
        _this.numberOfPages = response.data.osass.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/osass/".concat(d, "?page=") + pageNumber, {
          params: {
            'per_page': itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.osass = res.data.osass;
          console.log(_this2.osass);
          _this2.totalOSASs = res.data.osass.total;
          _this2.numberOfPages = res.data.osass.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/osass?page=" + _pageNumber, {
          params: {
            'per_page': _itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.osass = res.data.osass;
          _this2.user_staff = res.data.user_staff;
          _this2.designations = res.data.designations;
          _this2.campuses = res.data.campuses;
          _this2.semesters = res.data.semesters;
          _this2.totalOSASs = res.data.osass.total;
          _this2.numberOfPages = res.data.osass.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.osass.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      console.log(this.editedItem);
      this.dialog = true;
    },
    campusListener: function campusListener() {
      var _this4 = this;

      axios.post("/api/v1/campusListener", {
        'campus_id': this.editedItem.campus_id
      }).then(function (res) {
        _this4.programs = res.data.programs;
        _this4.sections = '';
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListener: function programListener() {
      var _this5 = this;

      axios.post("/api/v1/programListener", {
        'program_id': this.editedItem.program_id
      }).then(function (res) {
        _this5.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    campusListenerNew: function campusListenerNew() {
      var _this6 = this;

      axios.post("/api/v1/campusListener", {
        'campus_id': this.editedItem.campus
      }).then(function (res) {
        _this6.programs = res.data.programs;
        _this6.sections = '';
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListenerNew: function programListenerNew() {
      var _this7 = this;

      axios.post("/api/v1/programListener", {
        'program_id': this.editedItem.program
      }).then(function (res) {
        _this7.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    deleteItem: function deleteItem(item) {
      var _this8 = this;

      var index = this.osass.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/osass/" + item.id).then(function (res) {
          _this8.text = "Record Deleted Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;

          _this8.osass.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Deleting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this9 = this;

      this.dialog = false;
      setTimeout(function () {
        _this9.editedItem = Object.assign({}, _this9.defaultItem);
        _this9.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this10 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/osass/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this10.text = "Record Updated Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true;
          Object.assign(_this10.osass.data[index], res.data.osas);
          console.log(_this10.osass.data[index]);
        })["catch"](function (err) {
          console.log(err.response);
          _this10.text = "Error Updating Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      } else {
        axios.post("/api/v1/osass", this.editedItem).then(function (res) {
          _this10.text = "Record Added Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true; // this.osass.data.push(res.data.osas); 

          _this10.osass = res.data.osass;
        })["catch"](function (err) {
          console.dir(err);
          _this10.text = "Error Inserting Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      addEdit: "Add",
      selected: [],
      isLoading: false,
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      searchItem: "",
      headers: [{
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Campus",
        value: "campus"
      }, {
        text: "Semester",
        value: "semester"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalProgramDirectors: 0,
      numberOfPages: 0,
      options: {},
      programdirectors: {},
      campuses: {},
      sections: {},
      programs: {},
      user_pd: {},
      years: [1, 2, 3, 4, 5],
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      editedIndex: -1,
      editedItem: {
        id: "",
        user_id: "",
        name: "",
        campus: "",
        section: "",
        program: "",
        campus_id: "",
        section_id: "",
        program_id: ""
      },
      defaultItem: {
        id: "",
        user_id: "",
        campus: "",
        program: "",
        campus_id: "",
        section_id: "",
        program_id: ""
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New" : "Edit";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/programdirectors?page=" + pageNumber, {
        params: {
          per_page: itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.programdirectors = response.data.programdirectors;
        _this.user_pd = response.data.user_pd;
        _this.campuses = response.data.campuses;
        _this.programs = response.data.programs;
        _this.semesters = response.data.semesters;
        _this.user_staff = response.data.user_staff;
        _this.totalProgramDirectors = response.data.programdirectors.total;
        _this.numberOfPages = response.data.programdirectors.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/programdirectors/".concat(d, "?page=") + pageNumber, {
          params: {
            per_page: itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.programdirectors = res.data.programdirectors;
          _this2.user_pd = res.data.user_pd;
          _this2.colleges = res.data.colleges;
          console.log(_this2.programdirectors);
          _this2.totalProgramDirectors = res.data.programdirectors.total;
          _this2.numberOfPages = res.data.programdirectors.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/programdirectors?page=" + _pageNumber, {
          params: {
            per_page: _itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.programdirectors = res.data.programdirectors;
          _this2.user_pd = res.data.user_pd;
          _this2.colleges = res.data.colleges;
          _this2.semesters = res.data.semesters;
          _this2.campuses = res.data.campuses;
          _this2.programs = res.data.programs;
          _this2.user_staff = res.data.user_staff;
          _this2.totalProgramDirectors = res.data.programdirectors.total;
          _this2.numberOfPages = res.data.programdirectors.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.programdirectors.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      console.log(this.editedItem);
      this.dialog = true;
    },
    campusListener: function campusListener() {
      var _this4 = this;

      axios.post("/api/v1/campusListener", {
        campus_id: this.editedItem.campus_id
      }).then(function (res) {
        _this4.programs = res.data.programs;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListener: function programListener() {
      var _this5 = this;

      axios.post("/api/v1/programListener", {
        program_id: this.editedItem.program_id
      }).then(function (res) {
        _this5.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    campusListenerNew: function campusListenerNew() {
      var _this6 = this;

      axios.post("/api/v1/campusListener", {
        campus_id: this.editedItem.campus_id
      }).then(function (res) {
        _this6.programs = res.data.programs;
        _this6.sections = "";
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListenerNew: function programListenerNew() {
      var _this7 = this;

      axios.post("/api/v1/programListener", {
        program_id: this.editedItem.program
      }).then(function (res) {
        _this7.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    updatePD: function updatePD(item) {
      var _this8 = this;

      var index = this.programdirectors.data.indexOf(item);
      axios.post("/api/v1/pd/update", {
        new_pd: item.user_id,
        pd: item.id
      }).then(function (res) {
        _this8.programdirectors = res.data.programdirectors;
        _this8.user_pd = res.data.user_pd;
        _this8.totalProgramDirectors = res.data.programdirectors.total;
        _this8.numberOfPages = res.data.programdirectors.last_page;
        _this8.text = "successfully update";
        _this8.snackbar = true;
      })["catch"](function (err) {
        console.error(err);
      });
      console.log(item);
    },
    deleteItem: function deleteItem(item) {
      var _this9 = this;

      var index = this.programdirectors.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/programdirectors/" + item.id).then(function (res) {
          _this9.text = "Record Deleted Successfully!";
          _this9.snackbarColor = "primary darken-1";
          _this9.snackbar = true;

          _this9.programdirectors.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this9.text = "Error Deleting Record";
          _this9.snackbarColor = "error darken-1";
          _this9.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this10 = this;

      this.dialog = false;
      setTimeout(function () {
        _this10.editedItem = Object.assign({}, _this10.defaultItem);
        _this10.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this11 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/programdirectors/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this11.text = "Record Updated Successfully!";
          _this11.snackbarColor = "primary darken-1";
          _this11.snackbar = true;
          Object.assign(_this11.programdirectors.data[index], res.data.programdirector);
          console.log(_this11.editedItem);
        })["catch"](function (err) {
          console.log(err.response);
          _this11.text = "Error Updating Record";
          _this11.snackbarColor = "error darken-1";
          _this11.snackbar = true;
        });
      } else {
        axios.post("/api/v1/programdirectors", this.editedItem).then(function (res) {
          _this11.text = "Record Added Successfully!";
          _this11.snackbarColor = "primary darken-1";
          _this11.snackbar = true; // this.programdirectors.data.push(res.data.programdirector);

          _this11.programdirectors = res.data.programdirectors;
        })["catch"](function (err) {
          console.dir(err);
          _this11.text = "Error Inserting Record";
          _this11.snackbarColor = "error darken-1";
          _this11.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    var _ref;

    return _ref = {
      items: [],
      model: null,
      search: null,
      copyDialog: false,
      tab: null,
      valid: true,
      dialog: false,
      loading: false,
      isLoading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      searchItem: '',
      headers: [{
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Semester",
        value: "semester"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalRegistrars: 0,
      numberOfPages: 0,
      options: {},
      registrars: {},
      programs: {},
      sections: {}
    }, _defineProperty(_ref, "programs", {}), _defineProperty(_ref, "years", [1, 2, 3, 4, 5]), _defineProperty(_ref, "rules", {
      required: function required(v) {
        return !!v || "This Field is Required";
      },
      min: function min(v) {
        return v.length >= 5 || "Minimum 5 Characters Required";
      },
      validEmail: function validEmail(v) {
        return /.+@.+\..+/.test(v) || "Email must be valid";
      }
    }), _defineProperty(_ref, "editedIndex", -1), _defineProperty(_ref, "editedItem", {
      id: "",
      registrar_number: "",
      name: "",
      campus: "",
      section: "",
      program: "",
      campus_id: "",
      section_id: "",
      program_id: ""
    }), _defineProperty(_ref, "defaultItem", {
      id: "",
      registrar_number: "",
      campus: "",
      section: "",
      program: "",
      campus_id: "",
      section_id: "",
      program_id: ""
    }), _ref;
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New " : "Edit ";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    remove: function remove(item) {
      var index = this.editedItem.program_id.indexOf(item.id);
      if (index >= 0) this.editedItem.program_id.splice(index, 1);
      console.log(this.editedItem.program_id);
      console.log(this.editedItem.program_id.indexOf(item.id));
    },
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/registrars?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.registrars = response.data.registrars;
        _this.user_staff = response.data.user_staff;
        _this.designations = response.data.designations;
        _this.programs = response.data.programs;
        _this.semesters = response.data.semesters;
        _this.totalRegistrars = response.data.registrars.total;
        _this.numberOfPages = response.data.registrars.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/registrars/".concat(d, "?page=") + pageNumber, {
          params: {
            'per_page': itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.registrars = res.data.registrars;
          console.log(_this2.registrars);
          _this2.totalRegistrars = res.data.registrars.total;
          _this2.numberOfPages = res.data.registrars.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/registrars?page=" + _pageNumber, {
          params: {
            'per_page': _itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.registrars = res.data.registrars;
          _this2.user_staff = res.data.user_staff;
          _this2.designations = res.data.designations;
          _this2.programs = res.data.programs;
          _this2.semesters = res.data.semesters;
          _this2.totalRegistrars = res.data.registrars.total;
          _this2.numberOfPages = res.data.registrars.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.registrars.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      console.log(this.editedItem);
      this.dialog = true;
    },
    campusListener: function campusListener() {
      var _this4 = this;

      axios.post("/api/v1/campusListener", {
        'campus_id': this.editedItem.campus_id
      }).then(function (res) {
        _this4.programs = res.data.programs;
        _this4.sections = '';
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListener: function programListener() {
      var _this5 = this;

      axios.post("/api/v1/programListener", {
        'program_id': this.editedItem.program_id
      }).then(function (res) {
        _this5.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    campusListenerNew: function campusListenerNew() {
      var _this6 = this;

      axios.post("/api/v1/campusListener", {
        'campus_id': this.editedItem.campus
      }).then(function (res) {
        _this6.programs = res.data.programs;
        _this6.sections = '';
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListenerNew: function programListenerNew() {
      var _this7 = this;

      axios.post("/api/v1/programListener", {
        'program_id': this.editedItem.program
      }).then(function (res) {
        _this7.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    deleteItem: function deleteItem(item) {
      var _this8 = this;

      var index = this.registrars.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/registrars/" + item.id).then(function (res) {
          _this8.text = "Record Deleted Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;

          _this8.registrars.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Deleting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this9 = this;

      this.dialog = false;
      setTimeout(function () {
        _this9.editedItem = Object.assign({}, _this9.defaultItem);
        _this9.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this10 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/registrars/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this10.text = "Record Updated Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true;
          Object.assign(_this10.registrars.data[index], res.data.registrar);
          console.log(_this10.editedItem);
        })["catch"](function (err) {
          console.log(err.response);
          _this10.text = "Error Updating Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      } else {
        axios.post("/api/v1/registrars", this.editedItem).then(function (res) {
          _this10.text = "Record Added Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true; // this.registrars.data.push(res.data.registrar); 

          _this10.registrars = res.data.registrars;
        })["catch"](function (err) {
          console.dir(err);
          _this10.text = "Error Inserting Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      items: [],
      model: null,
      search: null,
      copyDialog: false,
      tab: null,
      valid: true,
      dialog: false,
      loading: false,
      isLoading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      searchItem: '',
      headers: [{
        text: "Name",
        value: "name"
      }, {
        text: "Campus",
        value: "campus"
      }, {
        text: "Semester",
        value: "semester"
      }, {
        text: "Action",
        align: 'right',
        value: "actions"
      }],
      page: 0,
      totalStaffs: 0,
      numberOfPages: 0,
      options: {},
      staffs: {},
      campuses: {},
      designations: {},
      semesters: {},
      user_staff: {},
      years: [1, 2, 3, 4, 5],
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      editedIndex: -1,
      editedItem: {
        id: "",
        campus_id: "",
        designee_id: "",
        semester_id: "",
        user_id: '',
        new_semester_id: ''
      },
      defaultItem: {
        id: "",
        campus_id: "",
        designee_id: "",
        semester_id: "",
        user_id: '',
        new_semester_id: ''
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New Item" : "Edit Item";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    }
  },
  watch: {
    model: function model(val) {
      if (val != null) this.tab = 0;else this.tab = null;
    },
    search: function search(val) {
      var _this = this;

      console.log(this.editedItem.user_id + "Name" + val); // Items have already been loaded

      if (this.user_staff.length > 0) return;
      this.editItem.user_id = val;
      this.isLoading = true; // // Lazily load input items
      // fetch('/api/v1/staffs?page=0')
      //   .then(res => res.clone().json())
      //   .then(res => {
      //     this.user_staff = res.user_staff[0].user.name
      //   })
      //   .catch(err => {
      //     console.log(err)
      //   })
      //   .finally(() => (this.isLoading = false))

      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/staffs/".concat(val, "?page=") + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (res) {
        _this.user_staff = res.data.user_staff;
        console.log(_this.user_staff);
        _this.isLoading = false;
      })["catch"](function (err) {
        console.error(err);
        _this.isLoading = false;
      });
    },
    searchDesignation: function searchDesignation(val) {
      var _this2 = this;

      console.log(this.editedItem.user_id + "Name" + val); // Items have already been loaded

      if (this.user_staff.length > 0) return;
      this.editItem.user_id = val;
      this.isLoading = true; // // Lazily load input items
      // fetch('/api/v1/staffs?page=0')
      //   .then(res => res.clone().json())
      //   .then(res => {
      //     this.user_staff = res.user_staff[0].user.name
      //   })
      //   .catch(err => {
      //     console.log(err)
      //   })
      //   .finally(() => (this.isLoading = false))

      var _this$options2 = this.options,
          page = _this$options2.page,
          itemsPerPage = _this$options2.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/staffs/".concat(val, "?page=") + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (res) {
        _this2.user_staff = res.data.user_staff;
        console.log(_this2.user_staff);
        _this2.isLoading = false;
      })["catch"](function (err) {
        console.error(err);
        _this2.isLoading = false;
      });
    },
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    copyPrevStaff: function copyPrevStaff() {
      var _this3 = this;

      axios.post("/api/v1/copyPreviousStaff", this.editedItem).then(function (res) {
        _this3.text = "Copying Successfully!";
        _this3.snackbarColor = "primary darken-1";
        _this3.snackbar = true; // this.staffs.data.push(res.data.staff); 

        _this3.staffs = res.data.staffs;
        _this3.totalStaffs = res.data.staffs.total;
        _this3.numberOfPages = res.data.staffs.last_page;
        _this3.copyDialog = false;
      })["catch"](function (err) {
        _this3.text = "Error Copying Record";
        _this3.snackbarColor = "error darken-1";
        _this3.snackbar = true;
      });
    },
    readDataFromAPI: function readDataFromAPI() {
      var _this4 = this;

      this.loading = true;
      var _this$options3 = this.options,
          page = _this$options3.page,
          itemsPerPage = _this$options3.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/staffs?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this4.loading = false;
        _this4.staffs = response.data.staffs;
        _this4.user_staff = response.data.user_staff;
        _this4.designations = response.data.designations;
        _this4.campuses = response.data.campuses;
        _this4.semesters = response.data.semesters;
        _this4.totalStaffs = response.data.staffs.total;
        _this4.numberOfPages = response.data.staffs.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this5 = this;

      if (d.length > 2) {
        var _this$options4 = this.options,
            page = _this$options4.page,
            itemsPerPage = _this$options4.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/staffs/".concat(d, "?page=") + pageNumber, {
          params: {
            'per_page': itemsPerPage
          }
        }).then(function (res) {
          _this5.loading = false;
          _this5.staffs = res.data.staffs;
          _this5.designations = res.data.designations;
          _this5.campuses = res.data.campuses;
          _this5.semesters = res.data.semesters;
          console.log(_this5.staffs);
          _this5.totalStaffs = res.data.staffs.total;
          _this5.numberOfPages = res.data.staffs.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options5 = this.options,
            _page = _this$options5.page,
            _itemsPerPage = _this$options5.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/staffs?page=" + _pageNumber, {
          params: {
            'per_page': _itemsPerPage
          }
        }).then(function (res) {
          _this5.loading = false;
          _this5.staffs = res.data.staffs;
          _this5.user_staff = res.data.user_staff;
          _this5.designations = res.data.designations;
          _this5.campuses = res.data.campuses;
          _this5.semesters = res.data.semesters;
          _this5.totalStaffs = res.data.staffs.total;
          _this5.numberOfPages = res.data.staffs.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this6 = this;

      axios.interceptors.request.use(function (config) {
        _this6.loading = true;
        return config;
      }, function (error) {
        _this6.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this6.loading = false;
        return response;
      }, function (error) {
        _this6.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.staffs.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      console.log(this.editedItem);
      this.dialog = true;
    },
    updatePD: function updatePD(item) {
      var _this7 = this;

      var index = this.staffs.data.indexOf(item);
      axios.post('/api/v1/staff/update', {
        'new_staff': item.user_id,
        'staff': item.id
      }).then(function (res) {
        _this7.staffs = res.data.staffs;
        _this7.user_staff = res.data.user_staff;
        _this7.totalStaffs = res.data.staffs.total;
        _this7.numberOfPages = res.data.staffs.last_page;
        _this7.text = "successfully update";
        _this7.snackbar = true;
      })["catch"](function (err) {
        console.error(err);
      });
      console.log(item);
    },
    deleteItem: function deleteItem(item) {
      var _this8 = this;

      var index = this.staffs.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/staffs/" + item.id).then(function (res) {
          _this8.text = "Record Deleted Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;

          _this8.staffs.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Deleting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this9 = this;

      this.dialog = false;
      setTimeout(function () {
        _this9.editedItem = Object.assign({}, _this9.defaultItem);
        _this9.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this10 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/staffs/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this10.text = "Record Updated Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true;
          Object.assign(_this10.staffs.data[index], res.data.staff);
          console.log(_this10.editedItem);
        })["catch"](function (err) {
          console.log(err.response);
          _this10.text = "Error Updating Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      } else {
        console.log(this.editItem);
        axios.post("/api/v1/staffs", this.editedItem).then(function (res) {
          _this10.text = "Record Added Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true; //] this.staffs.data.push(res.data.staff); 

          _this10.staffs = res.data.staffs;
        })["catch"](function (err) {
          console.dir(err);
          _this10.text = "Error Inserting Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      model: null,
      search: null,
      copyDialog: false,
      tab: null,
      valid: true,
      dialog: false,
      loading: false,
      isLoading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      searchItem: "",
      headers: [{
        text: "Name",
        value: "name"
      }, {
        text: "College/Campus",
        value: "college"
      }, {
        text: "Semester",
        value: "semester"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalStCouncils: 0,
      numberOfPages: 0,
      options: {},
      stcouncils: {},
      colleges: {},
      designations: {},
      semesters: {},
      user_staff: {},
      years: [1, 2, 3, 4, 5],
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      editedIndex: -1,
      editedItem: {
        id: "",
        user_id: "",
        college_id: "",
        semester_id: ""
      },
      defaultItem: {
        id: "",
        user_id: "",
        college_id: "",
        semester_id: ""
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New Item" : "Edit Item";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    }
  },
  watch: {
    model: function model(val) {
      if (val != null) this.tab = 0;else this.tab = null;
    },
    search: function search(val) {
      var _this = this;

      console.log(this.editedItem.user_id + "Name" + val); // Items have already been loaded

      if (this.user_staff.length > 0) return;
      this.editItem.user_id = val;
      this.isLoading = true; // // Lazily load input items
      // fetch('/api/v1/stcouncils?page=0')
      //   .then(res => res.clone().json())
      //   .then(res => {
      //     this.user_staff = res.user_staff[0].user.name
      //   })
      //   .catch(err => {
      //     console.log(err)
      //   })
      //   .finally(() => (this.isLoading = false))

      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/stcouncils/".concat(val, "?page=") + pageNumber, {
        params: {
          per_page: itemsPerPage
        }
      }).then(function (res) {
        _this.user_staff = res.data.user_staff;
        console.log(_this.user_staff);
        _this.isLoading = false;
      })["catch"](function (err) {
        console.error(err);
        _this.isLoading = false;
      });
    },
    searchDesignation: function searchDesignation(val) {
      var _this2 = this;

      console.log(this.editedItem.user_id + "Name" + val); // Items have already been loaded

      if (this.user_staff.length > 0) return;
      this.editItem.user_id = val;
      this.isLoading = true; // // Lazily load input items
      // fetch('/api/v1/stcouncils?page=0')
      //   .then(res => res.clone().json())
      //   .then(res => {
      //     this.user_staff = res.user_staff[0].user.name
      //   })
      //   .catch(err => {
      //     console.log(err)
      //   })
      //   .finally(() => (this.isLoading = false))

      var _this$options2 = this.options,
          page = _this$options2.page,
          itemsPerPage = _this$options2.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/stcouncils/".concat(val, "?page=") + pageNumber, {
        params: {
          per_page: itemsPerPage
        }
      }).then(function (res) {
        _this2.user_staff = res.data.user_staff;
        console.log(_this2.user_staff);
        _this2.isLoading = false;
      })["catch"](function (err) {
        console.error(err);
        _this2.isLoading = false;
      });
    },
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  methods: {
    copyPrevStcouncil: function copyPrevStcouncil() {
      var _this3 = this;

      axios.post("/api/v1/copyPreviousStcouncil", this.editedItem).then(function (res) {
        _this3.text = "Copying Successfully!";
        _this3.snackbarColor = "primary darken-1";
        _this3.snackbar = true; // this.stcouncils.data.push(res.data.stcouncil);

        _this3.stcouncils = res.data.stcouncils;
        _this3.totalStCouncils = res.data.stcouncils.total;
        _this3.numberOfPages = res.data.stcouncils.total_pages;
        _this3.copyDialog = false;
      })["catch"](function (err) {
        _this3.text = "Error Copying Record";
        _this3.snackbarColor = "error darken-1";
        _this3.snackbar = true;
      });
    },
    readDataFromAPI: function readDataFromAPI() {
      var _this4 = this;

      this.loading = true;
      var _this$options3 = this.options,
          page = _this$options3.page,
          itemsPerPage = _this$options3.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/stcouncils?page=" + pageNumber, {
        params: {
          per_page: itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this4.loading = false;
        _this4.stcouncils = response.data.stcouncils;
        _this4.colleges = response.data.colleges;
        _this4.semesters = response.data.semesters;
        _this4.user_staff = response.data.user_staff;
        _this4.totalStCouncils = response.data.stcouncils.total;
        _this4.numberOfPages = response.data.stcouncils.total_pages;
      });
    },
    searchIt: function searchIt(d) {
      var _this5 = this;

      if (d.length > 2) {
        var _this$options4 = this.options,
            page = _this$options4.page,
            itemsPerPage = _this$options4.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/stcouncils/".concat(d, "?page=") + pageNumber, {
          params: {
            per_page: itemsPerPage
          }
        }).then(function (res) {
          _this5.loading = false;
          _this5.stcouncils = res.data.stcouncils;
          console.log(_this5.stcouncils);
          _this5.colleges = res.data.colleges;
          _this5.semesters = res.data.semesters;
          _this5.user_staff = res.data.user_staff;
          _this5.totalStCouncils = res.data.stcouncils.total;
          _this5.numberOfPages = res.data.stcouncils.total_pages;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options5 = this.options,
            _page = _this$options5.page,
            _itemsPerPage = _this$options5.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/stcouncils?page=" + _pageNumber, {
          params: {
            per_page: _itemsPerPage
          }
        }).then(function (res) {
          _this5.loading = false;
          _this5.stcouncils = res.data.stcouncils;
          _this5.colleges = res.data.colleges;
          _this5.semesters = res.data.semesters;
          _this5.user_staff = res.data.user_staff;
          _this5.totalStCouncils = res.data.stcouncils.total;
          _this5.numberOfPages = res.data.stcouncils.total_pages;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this6 = this;

      axios.interceptors.request.use(function (config) {
        _this6.loading = true;
        return config;
      }, function (error) {
        _this6.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this6.loading = false;
        return response;
      }, function (error) {
        _this6.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.stcouncils.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      console.log(this.editedItem);
      this.dialog = true;
    },
    updatePD: function updatePD(item) {
      var _this7 = this;

      var index = this.stcouncils.data.indexOf(item);
      axios.post("/api/v1/stcouncil/update", {
        new_stcouncil: item.user_id,
        stcouncil: item.id
      }).then(function (res) {
        _this7.stcouncils = res.data.stcouncils;
        _this7.user_staff = res.data.user_staff;
        _this7.totalStCouncils = res.data.stcouncils.total;
        _this7.numberOfPages = res.data.stcouncils.last_page;
        _this7.text = "successfully update";
        _this7.snackbar = true;
      })["catch"](function (err) {
        console.error(err);
      });
      console.log(item);
    },
    deleteItem: function deleteItem(item) {
      var _this8 = this;

      var index = this.stcouncils.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/stcouncils/" + item.id).then(function (res) {
          _this8.text = "Record Deleted Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;

          _this8.stcouncils.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Deleting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this9 = this;

      this.dialog = false;
      setTimeout(function () {
        _this9.editedItem = Object.assign({}, _this9.defaultItem);
        _this9.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this10 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/stcouncils/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this10.text = "Record Updated Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true;
          Object.assign(_this10.stcouncils.data[index], res.data.stcouncil);
          console.log(_this10.editedItem);
        })["catch"](function (err) {
          console.log(err.response);
          _this10.text = "Error Updating Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      } else {
        console.log(this.editItem);
        axios.post("/api/v1/stcouncils", this.editedItem).then(function (res) {
          _this10.text = "Record Added Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true; // this.stcouncils.data.push(res.data.stcouncil);

          _this10.stcouncils = res.data.stcouncils;
        })["catch"](function (err) {
          console.dir(err);
          _this10.text = "Error Inserting Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/adviser/ADVISERComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/adviser/ADVISERComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      drawer: null,
      user: '',
      menu: false,
      role: '',
      scrollOptions: {
        height: '100%'
      },
      items: [{
        icon: "mdi-view-dashboard",
        text: "Dashboard",
        link: "/adviser/dashboard"
      }, {
        icon: "mdi-account-multiple",
        text: "Student List",
        link: "/adviser/student/list"
      }, {
        icon: "mdi-clipboard-list",
        text: "Clearance Requests",
        link: "/adviser/clearance/requests"
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/adviser/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/adviser/submitted/clearances"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/adviser/clearance/list"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/adviser/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/adviser/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    }); //   axios.interceptors.response.use(null, (error) => {
    // if(error.response && error.response.status == 419) {
    //     // session timed out | not authenticated
    //     // window.location.href = '/login';
    //   localStorage.removeItem('token','user','loggedIn');
    //   localStorage.removeItem('loggedIn');
    //   localStorage.removeItem('user');
    //   this.$router.push("/login");
    // }
    // return Promise.reject(error);
    // });
  } // methods: {
  //   initialize() {
  //     axios.interceptors.request.use(
  //       (config) => {
  //         this.loading = true;
  //         return config;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     );
  //     axios.interceptors.response.use(
  //       (response) => {
  //         this.loading = false;
  //         return response;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     ); 
  //     axios.get('/api/authuser')
  //     .then(res => {
  //       this.user = localStorage.getItem('user')
  //       console.dir(res)
  //     })
  //     .catch(err => {
  //       console.error(err); 
  //     })
  //   },
  //   logout(){
  //     localStorage.removeItem('token','user','loggedIn');
  //     localStorage.removeItem('loggedIn');
  //     localStorage.removeItem('user');
  //     this.$router.push("/login");
  //   }
  // },

});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/cashier/CASHIERComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/cashier/CASHIERComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      menu: false,
      drawer: null,
      user: '',
      role: '',
      scrollOptions: {
        height: '100%'
      },
      items: [{
        icon: "mdi-view-dashboard",
        text: "Dashboard",
        link: "/cashier/dashboard"
      }, {
        icon: "mdi-account-multiple",
        text: "Student List",
        link: "/cashier/student/list"
      }, {
        icon: "mdi-clipboard-list",
        text: "Clearance Requests",
        link: "/cashier/clearance/requests"
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/cashier/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/cashier/submitted/clearances"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/cashier/clearance/list"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/cashier/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/cashier/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    }); //   axios.interceptors.response.use(null, (error) => {
    // if(error.response && error.response.status == 419) {
    //     // session timed out | not authenticated
    //     // window.location.href = '/login';
    //   localStorage.removeItem('token','user','loggedIn');
    //   localStorage.removeItem('loggedIn');
    //   localStorage.removeItem('user');
    //   this.$router.push("/login");
    // }
    // return Promise.reject(error);
    // });
  } // methods: {
  //   initialize() {
  //     axios.interceptors.request.use(
  //       (config) => {
  //         this.loading = true;
  //         return config;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     );
  //     axios.interceptors.response.use(
  //       (response) => {
  //         this.loading = false;
  //         return response;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     ); 
  //     axios.get('/api/authuser')
  //     .then(res => {
  //       this.user = localStorage.getItem('user')
  //       console.dir(res)
  //     })
  //     .catch(err => {
  //       console.error(err); 
  //     })
  //   },
  //   logout(){
  //     localStorage.removeItem('token','user','loggedIn');
  //     localStorage.removeItem('loggedIn');
  //     localStorage.removeItem('user');
  //     this.$router.push("/login");
  //   }
  // },

});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/dean/DEANComponent.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/dean/DEANComponent.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      drawer: null,
      user: '',
      role: '',
      menu: false,
      scrollOptions: {
        height: '100%'
      },
      items: [{
        icon: "mdi-view-dashboard",
        text: "Dashboard",
        link: "/dean/dashboard"
      }, {
        icon: "mdi-account-multiple",
        text: "Student List",
        link: "/dean/student/list"
      }, {
        icon: "mdi-clipboard-list",
        text: "Clearance Requests",
        link: "/dean/clearance/requests"
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/dean/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/dean/submitted/clearances"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/dean/clearance/list"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/dean/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/dean/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    }); //   axios.interceptors.response.use(null, (error) => {
    // if(error.response && error.response.status == 419) {
    //     // session timed out | not authenticated
    //     // window.location.href = '/login';
    //   localStorage.removeItem('token','user','loggedIn');
    //   localStorage.removeItem('loggedIn');
    //   localStorage.removeItem('user');
    //   this.$router.push("/login");
    // }
    // return Promise.reject(error);
    // });
  } // methods: {
  //   initialize() {
  //     axios.interceptors.request.use(
  //       (config) => {
  //         this.loading = true;
  //         return config;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     );
  //     axios.interceptors.response.use(
  //       (response) => {
  //         this.loading = false;
  //         return response;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     ); 
  //     axios.get('/api/authuser')
  //     .then(res => {
  //       this.user = localStorage.getItem('user')
  //       console.dir(res)
  //     })
  //     .catch(err => {
  //       console.error(err); 
  //     })
  //   },
  //   logout(){
  //     localStorage.removeItem('token','user','loggedIn');
  //     localStorage.removeItem('loggedIn');
  //     localStorage.removeItem('user');
  //     this.$router.push("/login");
  //   }
  // },

});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/library/LIBRARYComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/library/LIBRARYComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      drawer: null,
      user: '',
      role: '',
      menu: false,
      scrollOptions: {
        height: '100%'
      },
      items: [{
        icon: "mdi-view-dashboard",
        text: "Dashboard",
        link: "/library/dashboard"
      }, {
        icon: "mdi-account-multiple",
        text: "Student List",
        link: "/library/student/list"
      }, {
        icon: "mdi-clipboard-list",
        text: "Clearance Requests",
        link: "/library/clearance/requests"
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/library/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/library/submitted/clearances"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/library/clearance/list"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/library/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/library/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    }); //   axios.interceptors.response.use(null, (error) => {
    // if(error.response && error.response.status == 419) {
    //     // session timed out | not authenticated
    //     // window.location.href = '/login';
    //   localStorage.removeItem('token','user','loggedIn');
    //   localStorage.removeItem('loggedIn');
    //   localStorage.removeItem('user');
    //   this.$router.push("/login");
    // }
    // return Promise.reject(error);
    // });
  } // methods: {
  //   initialize() {
  //     axios.interceptors.request.use(
  //       (config) => {
  //         this.loading = true;
  //         return config;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     );
  //     axios.interceptors.response.use(
  //       (response) => {
  //         this.loading = false;
  //         return response;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     ); 
  //     axios.get('/api/authuser')
  //     .then(res => {
  //       this.user = localStorage.getItem('user')
  //       console.dir(res)
  //     })
  //     .catch(err => {
  //       console.error(err); 
  //     })
  //   },
  //   logout(){
  //     localStorage.removeItem('token','user','loggedIn');
  //     localStorage.removeItem('loggedIn');
  //     localStorage.removeItem('user');
  //     this.$router.push("/login");
  //   }
  // },

});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/login/LoginComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/login/LoginComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    var _ref;

    return _ref = {
      message: "",
      activationCode: "",
      student: {
        student_number: ""
      },
      regsSuc: false,
      step: 1,
      batchIndex: 0,
      dialog: false,
      scrollOptions: {
        height: "100%"
      },
      date: new Date().toISOString().substr(0, 10),
      menu: false,
      modal: false,
      menu2: false,
      showPassword: false,
      showPasswordc: false,
      email: "",
      password: "",
      loading: false,
      loginloading: false,
      loadingSubmitRegister: false,
      snackbar: false,
      text: "",
      user: {
        email: "",
        password: ""
      },
      valid: true,
      validRegs: true,
      validUserInfo: true,
      validEmailAdd: true,
      validStudInfo: true,
      validPassword: true
    }, _defineProperty(_ref, "dialog", false), _defineProperty(_ref, "loading", false), _defineProperty(_ref, "snackbar", false), _defineProperty(_ref, "selected", []), _defineProperty(_ref, "text", ""), _defineProperty(_ref, "success", ""), _defineProperty(_ref, "error", ""), _defineProperty(_ref, "headers", [{
      text: "No",
      align: "left",
      value: "id"
    }, {
      text: "Name",
      value: "name"
    }, {
      text: "Total Working",
      value: "working"
    }, {
      text: "Total Not Working",
      value: "notworking"
    }, {
      text: "Total",
      value: "total"
    }]), _defineProperty(_ref, "page", 0), _defineProperty(_ref, "totalOffices", 0), _defineProperty(_ref, "numberOfPages", 0), _defineProperty(_ref, "options", {}), _defineProperty(_ref, "batchtypes", {}), _defineProperty(_ref, "h_years", {}), _defineProperty(_ref, "c_years", {}), _defineProperty(_ref, "c_year", ""), _defineProperty(_ref, "h_year", ""), _defineProperty(_ref, "student_number", ""), _defineProperty(_ref, "program", ""), _defineProperty(_ref, "lname", ""), _defineProperty(_ref, "mname", ""), _defineProperty(_ref, "fname", ""), _defineProperty(_ref, "email", ""), _defineProperty(_ref, "password", ""), _defineProperty(_ref, "rpassword", ""), _defineProperty(_ref, "officess", {}), _defineProperty(_ref, "rules", {
      required: function required(v) {
        return !!v || "This Field is Required";
      },
      // min: (v) => v.length >= 5|| "Minimum 5 Characters Required",
      min: function min(_min, v) {
        return (v || "").length >= _min || "Minimum 5 Characters Required";
      },
      validEmail: function validEmail(v) {
        return /.+@.+\..+/.test(v) || "Email must be valid";
      }
    }), _defineProperty(_ref, "editedIndex", -1), _defineProperty(_ref, "editedItem", {
      id: "",
      batch: "",
      c_year: "",
      h_year: "",
      student_number: "",
      lname: "",
      mname: "",
      fname: "",
      email: "",
      password: "",
      bday: "",
      rpassword: "",
      created_at: ""
    }), _defineProperty(_ref, "defaultItem", {
      id: "",
      batch: "",
      c_year: "",
      h_year: "",
      student_number: "",
      lname: "",
      mname: "",
      fname: "",
      email: "",
      password: "",
      bday: "",
      rpassword: "",
      created_at: ""
    }), _ref;
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New Office" : "Edit Office";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    },
    currentTitle: function currentTitle() {
      switch (this.step) {
        case 1:
          return "Sign Up";

        case 3:
          return "Email";

        case 2:
          return "Student Information";

        case 4:
          return "Create a password";

        default:
          return "Account created";
      }
    },
    currentTitleSub: function currentTitleSub() {
      switch (this.step) {
        case 1:
          return "It’s quick and easy.";

        case 2:
          return "Provide your student information.";

        case 3:
          return "Ensure your email address.";

        case 4:
          return "Use a secure password.";

        default:
          return "Account created";
      }
    },
    checkEmail: function checkEmail() {
      var _this = this;

      if (/.+@.+\..+/.test(this.editedItem.email)) {
        axios.post("/api/v1/email/verify", {
          email: this.editedItem.email
        }).then(function (res) {
          _this.success = res.data.message;
          _this.error = "";
        })["catch"](function (err) {
          _this.success = "";
          _this.error = "Email Already Exist";
        });
      }
    },
    passwordmatch: function passwordmatch() {
      return this.editedItem.password != this.editedItem.rpassword ? "Password Does Not Match" : true;
    },
    checkUUID: function checkUUID() {
      var _this2 = this;

      if (this.activationCode != "") {
        axios.post("/api/v1/activation/verify", {
          code: this.activationCode
        }).then(function (res) {
          if (_this2.activationCode != "") {
            _this2.success = res.data.message;
            _this2.error = "";
            _this2.step++;
            _this2.success = "";
            _this2.student = res.data.student;
            _this2.program = res.data.program;
          } else if (_this2.activationCode == "") {
            _this2.success = "";
            _this2.error = "This Field is Required";
          }
        })["catch"](function (err) {
          if (_this2.activationCode != "") {
            // console.log(err);
            _this2.success = "";
            _this2.error = "Activation Code is Invalid or Already Used";
          } else if (_this2.activationCode == "") {
            // console.log(err);
            _this2.success = "";
            _this2.error = "This Field is Required";
          }
        });
      }
    }
  },
  methods: {
    lowercase: function lowercase() {
      this.editedItem.email = this.editedItem.email.toLowerCase();
    },
    loginG: function loginG() {
      var _this3 = this;

      this.loading = true;
      axios.get('/api/v1/auth/google').then(function (res) {
        // console.log(res.data);
        window.location.replace(res.data.url);
        localStorage.setItem("token", res.data.access_token); // window.loaction.href =res.data.url;

        _this3.loading = false;
      })["catch"](function (err) {});
    },
    batchTypeListener: function batchTypeListener() {
      this.batchIndex = this.editedItem.batch; // console.log(this.editedItem.batch);
    },
    initialize: function initialize() {
      var _this4 = this;

      // axios
      //   .get(`/api/v1/users`)
      //   .then((res) => {
      //     this.h_years = res.data.h_years;
      //     this.c_years = res.data.c_years;
      //     this.batchtypes = res.data.batches;
      //   })
      //   .catch((err) => {
      //     // console.error("err");
      //   });
      axios.interceptors.request.use(function (config) {
        _this4.loading = true;
        return config;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this4.loading = false;
        return response;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
    },
    resetPassword: function resetPassword() {
      this.$router.push({
        name: "reset-password"
      });
    },
    activate: function activate() {
      var _this5 = this;

      axios.post("/api/v1/user/register", {
        email: this.editedItem.email,
        password: this.editedItem.password,
        rpassword: this.editedItem.rpassword,
        student: this.student.id
      }).then(function (response) {
        _this5.user.email = _this5.editedItem.email; // console.log(this.user.email)

        _this5.dialog = false;
        _this5.regsSuc = true;
        _this5.step = 1;
        _this5.editedItem = Object.assign({}, _this5.defaultItem);
        _this5.activationCode = "";
        _this5.message = response.data.message;
      })["catch"](function (err) {
        _this5.snackbar = true;
        _this5.text = err.response.data.message; // console.log(err.response.data.message);
      });
    },
    proceedtologin: function proceedtologin() {
      this.dialog = false;
      this.$router.go(0);
      this.student = "";
      this.activationCode = "";
      this.editedItem = "";
    },
    login: function login() {
      var _this6 = this;

      this.loginloading = true;
      axios.post("/api/v1/user/login", {
        email: this.user.email,
        password: this.user.password
      }).then(function (response) {
        localStorage.setItem("token", response.data.access_token);
        window.location.replace("/#/");
        _this6.loginloading = false;
      })["catch"](function (err) {
        if (err.response.status == 419) {
          _this6.$router.push("/");
        } else {
          _this6.snackbar = true;
          _this6.text = err.response.data.message; // console.log(err.response.data.message);
        }

        _this6.loginloading = false;
      });
    },
    //  dismiss() {
    //   this.$store.state.error = "";
    // }
    //register user
    register: function register() {
      var _this7 = this;

      // console.log(this.editedItem);
      this.loadingSubmitRegister = true;
      axios.post("/register", this.editedItem).then(function (response) {
        _this7.loadingSubmitRegister = false;
        localStorage.setItem("token", response.data.access_token);
        window.location.replace("/#/");
      })["catch"](function (err) {
        _this7.loadingSubmitRegister = false;
      });
    },
    save: function save() {
      var _this8 = this;

      axios.post("/api/v1/register", this.editedItem).then(function (response) {
        _this8.loginloading = true;
        axios.post("/api/v1/user/login", {
          email: _this8.editedItem.email,
          password: _this8.editedItem.password
        }).then(function (response) {
          localStorage.setItem("token", response.data.access_token);
          window.location.replace("/#/");
          _this8.loginloading = false;
        })["catch"](function (err) {
          if (err.response.status == 419) {
            _this8.$router.push("/");
          } else {
            _this8.snackbar = true;
            _this8.text = err.response.data.message; // console.log(err.response.data.message);
          }

          _this8.loginloading = false;
        });
      })["catch"](function (err) {});
    }
  },
  created: function created() {
    this.initialize();
    axios.defaults.headers["Authorization"] = "Bearer " + localStorage.getItem("token"); // this.$store.dispatch('currentUser/getUser');

    if (localStorage.getItem("token")) {
      this.$router.push("/").then(function (res) {
        return console.log("Already login!");
      })["catch"](function (err) {
        return console.log(err);
      });
    }
  },
  props: {
    source: String
  },
  name: "AApp"
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/osas/OSASComponent.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/osas/OSASComponent.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      drawer: null,
      user: '',
      role: '',
      menu: false,
      scrollOptions: {
        height: '100%'
      },
      items: [{
        icon: "mdi-view-dashboard",
        text: "Dashboard",
        link: "/osas/goa/dashboard"
      }, {
        icon: "mdi-account-multiple",
        text: "Student List",
        link: "/osas/goa/student/list"
      }, {
        icon: "mdi-chevron-up",
        "icon-alt": "mdi-chevron-down",
        text: "Clearance Requests",
        model: false,
        children: [{
          text: "CAS",
          link: "/osas/goa/clearance/requests/cas"
        }, {
          text: "CBM",
          link: "/osas/goa/clearance/requests/cbm"
        }, {
          text: "CET",
          link: "/osas/goa/clearance/requests/cet"
        }, {
          text: "COED",
          link: "/osas/goa/clearance/requests/coed"
        }, {
          text: "SGS",
          link: "/osas/goa/clearance/requests/sgs"
        }]
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/osas/goa/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/osas/goa/submitted/clearances"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/osas/goa/clearance/list"
      }, {
        icon: "mdi-account-group-outline",
        text: "User Accounts",
        link: "/osas/goa/users"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/osas/goa/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/osas/goa/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    }); //   axios.interceptors.response.use(null, (error) => {
    // if(error.response && error.response.status == 419) {
    //     // session timed out | not authenticated
    //     // window.location.href = '/login';
    //   localStorage.removeItem('token','user','loggedIn');
    //   localStorage.removeItem('loggedIn');
    //   localStorage.removeItem('user');
    //   this.$router.push("/login");
    // }
    // return Promise.reject(error);
    // });
  } // methods: {
  //   initialize() {
  //     axios.interceptors.request.use(
  //       (config) => {
  //         this.loading = true;
  //         return config;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     );
  //     axios.interceptors.response.use(
  //       (response) => {
  //         this.loading = false;
  //         return response;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     ); 
  //     axios.get('/api/authuser')
  //     .then(res => {
  //       this.user = localStorage.getItem('user')
  //       console.dir(res)
  //     })
  //     .catch(err => {
  //       console.error(err); 
  //     })
  //   },
  //   logout(){
  //     localStorage.removeItem('token','user','loggedIn');
  //     localStorage.removeItem('loggedIn');
  //     localStorage.removeItem('user');
  //     this.$router.push("/login");
  //   }
  // },

});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      drawer: null,
      user: '',
      role: '',
      menu: false,
      scrollOptions: {
        height: '100%'
      },
      items: [{
        icon: "mdi-view-dashboard",
        text: "Dashboard",
        link: "/osas/dashboard"
      }, {
        icon: "mdi-account-multiple",
        text: "Student List",
        link: "/osas/student/list"
      }, {
        icon: "mdi-clipboard-list",
        text: "Clearance Requests",
        link: "/osas/clearance/requests"
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/osas/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/osas/submitted/clearances"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/osas/clearance/list"
      }, {
        icon: "mdi-account-group-outline",
        text: "User Accounts",
        link: "/osas/users"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/osas/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/osas/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    }); //   axios.interceptors.response.use(null, (error) => {
    // if(error.response && error.response.status == 419) {
    //     // session timed out | not authenticated
    //     // window.location.href = '/login';
    //   localStorage.removeItem('token','user','loggedIn');
    //   localStorage.removeItem('loggedIn');
    //   localStorage.removeItem('user');
    //   this.$router.push("/login");
    // }
    // return Promise.reject(error);
    // });
  } // methods: {
  //   initialize() {
  //     axios.interceptors.request.use(
  //       (config) => {
  //         this.loading = true;
  //         return config;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     );
  //     axios.interceptors.response.use(
  //       (response) => {
  //         this.loading = false;
  //         return response;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     ); 
  //     axios.get('/api/authuser')
  //     .then(res => {
  //       this.user = localStorage.getItem('user')
  //       console.dir(res)
  //     })
  //     .catch(err => {
  //       console.error(err); 
  //     })
  //   },
  //   logout(){
  //     localStorage.removeItem('token','user','loggedIn');
  //     localStorage.removeItem('loggedIn');
  //     localStorage.removeItem('user');
  //     this.$router.push("/login");
  //   }
  // },

});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ForgotPassword.vue?vue&type=script&lang=js&":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/page/ForgotPassword.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      email: null,
      has_error: false,
      success: "",
      loading: false,
      error: "",
      snackbar: false,
      valid: true,
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New User" : "Edit User";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-account-plus" : "mdi-account-edit";
    }
  },
  methods: {
    requestResetPassword: function requestResetPassword() {
      var _this = this;

      this.loading = true;
      axios.post("/api/v1/create", {
        email: this.email
      }).then(function (result) {
        _this.email = null;
        _this.response = result.data;
        _this.snackbar = true;
        _this.text = result.data.message;
        _this.loading = false;
      }, function (error) {
        _this.loading = false;
        console.error(error);
        _this.success = "";
        _this.snackbar = true;
        _this.text = error.response.data.message;
      });
    }
  },
  props: {
    source: String
  },
  name: "App"
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ResetEmailForm.vue?vue&type=script&lang=js&":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/page/ResetEmailForm.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      success: "",
      loading: false,
      message: "",
      type: "",
      error: "",
      snackbar: false,
      valid: true,
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        // min: (v) => v.length >= 5|| "Minimum 5 Characters Required",
        min: function min(_min, v) {
          return (v || "").length >= _min || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      token: null,
      email: null,
      password: null,
      password_confirmation: null,
      has_error: false,
      showPassword: false,
      showPasswordc: false,
      editedItem: {
        id: "",
        name: "",
        email: "",
        role: "",
        password: "",
        rpassword: "",
        created_at: ""
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New User" : "Edit User";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-account-plus" : "mdi-account-edit";
    },
    passwordmatch: function passwordmatch() {
      return this.password != this.password_confirmation ? "Password Does Not Match" : true;
    }
  },
  checkEmail: function checkEmail() {
    var _this = this;

    if (/.+@.+\..+/.test(this.editedItem.email)) {
      axios.post("/api/v1/email/verify", {
        email: this.editedItem.email
      }).then(function (res) {
        _this.success = res.data.message;
        _this.error = "";
      })["catch"](function (err) {
        _this.success = "";
        _this.error = "Email Already Exist";
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.post("/api/v1/emailChangeFind", {
      token: this.$route.params.token
    }).then(function (result) {
      console.log(result.data);
      _this2.message = "Email Successfully Change!"; // this.email = result.data.email;
      // this.$router.push({name: 'login'})

      _this2.type = "success";
    })["catch"](function (err) {
      _this2.type = "error";
      _this2.message = err.response.data.message;
    });
  },
  methods: {
    login: function login() {
      window.location.replace("/#/");
    },
    resetPassword: function resetPassword() {
      var _this3 = this;

      this.loading = true;
      axios.post("/api/v1/reset", {
        token: this.$route.params.token,
        email: this.email,
        password: this.password,
        password_confirmation: this.password_confirmation
      }).then(function (result) {
        console.log(result.data);
        axios.post("/api/v1/user/login", {
          email: _this3.email,
          password: _this3.password
        }).then(function (response) {
          localStorage.setItem("token", _this3.$route.params.token);
          window.location.replace("/#/");
          _this3.loading = false;
        })["catch"](function (err) {
          if (err.response.status == 419) {
            _this3.$router.push("/");
          } else {
            _this3.snackbar = true;
            _this3.text = err.response.data.message;
            console.log(err.response.data.message);
          }

          _this3.loading = false;
        });
        _this3.loading = false;
      }, function (error) {
        _this3.loading = false;
        console.error(error);
      });
    }
  },
  props: {
    source: String
  },
  name: "App"
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ResetPasswordForm.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/page/ResetPasswordForm.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      success: "",
      loading: false,
      error: "",
      snackbar: false,
      valid: true,
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        // min: (v) => v.length >= 5|| "Minimum 5 Characters Required",
        min: function min(_min, v) {
          return (v || "").length >= _min || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      token: null,
      email: null,
      password: null,
      password_confirmation: null,
      has_error: false,
      showPassword: false,
      showPasswordc: false,
      editedItem: {
        id: "",
        name: "",
        email: "",
        role: "",
        password: "",
        rpassword: "",
        created_at: ""
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New User" : "Edit User";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-account-plus" : "mdi-account-edit";
    },
    passwordmatch: function passwordmatch() {
      return this.password != this.password_confirmation ? "Password Does Not Match" : true;
    }
  },
  checkEmail: function checkEmail() {
    var _this = this;

    if (/.+@.+\..+/.test(this.editedItem.email)) {
      axios.post("/api/v1/email/verify", {
        email: this.editedItem.email
      }).then(function (res) {
        _this.success = res.data.message;
        _this.error = "";
      })["catch"](function (err) {
        _this.success = "";
        _this.error = "Email Already Exist";
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.post("/api/v1/find", {
      token: this.$route.params.token
    }).then(function (result) {
      console.log(result.data);
      _this2.email = result.data.email; // this.$router.push({name: 'login'})
    });
  },
  methods: {
    resetPassword: function resetPassword() {
      var _this3 = this;

      this.loading = true;
      axios.post("/api/v1/reset", {
        token: this.$route.params.token,
        email: this.email,
        password: this.password,
        password_confirmation: this.password_confirmation
      }).then(function (result) {
        console.log(result.data);
        axios.post("/api/v1/user/login", {
          email: _this3.email,
          password: _this3.password
        }).then(function (response) {
          localStorage.setItem("token", _this3.$route.params.token);
          window.location.replace("/#/");
          _this3.loading = false;
        })["catch"](function (err) {
          if (err.response.status == 419) {
            _this3.$router.push("/");
          } else {
            _this3.snackbar = true;
            _this3.text = err.response.data.message;
            console.log(err.response.data.message);
          }

          _this3.loading = false;
        });
        _this3.loading = false;
      }, function (error) {
        _this3.loading = false;
        console.error(error);
      });
    }
  },
  props: {
    source: String
  },
  name: "App"
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      drawer: null,
      user: '',
      menu: false,
      role: '',
      scrollOptions: {
        height: '100%'
      },
      items: [{
        icon: "mdi-view-dashboard",
        text: "Dashboard",
        link: "/principal/dashboard"
      }, {
        icon: "mdi-account-multiple",
        text: "Student List",
        link: "/principal/student/list"
      }, {
        icon: "mdi-clipboard-list",
        text: "Clearance Requests",
        link: "/principal/clearance/requests"
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/principal/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/principal/submitted/clearances"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/principal/clearance/list"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/principal/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/principal/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    }); //   axios.interceptors.response.use(null, (error) => {
    // if(error.response && error.response.status == 419) {
    //     // session timed out | not authenticated
    //     // window.location.href = '/login';
    //   localStorage.removeItem('token','user','loggedIn');
    //   localStorage.removeItem('loggedIn');
    //   localStorage.removeItem('user');
    //   this.$router.push("/login");
    // }
    // return Promise.reject(error);
    // });
  } // methods: {
  //   initialize() {
  //     axios.interceptors.request.use(
  //       (config) => {
  //         this.loading = true;
  //         return config;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     );
  //     axios.interceptors.response.use(
  //       (response) => {
  //         this.loading = false;
  //         return response;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     ); 
  //     axios.get('/api/authuser')
  //     .then(res => {
  //       this.user = localStorage.getItem('user')
  //       console.dir(res)
  //     })
  //     .catch(err => {
  //       console.error(err); 
  //     })
  //   },
  //   logout(){
  //     localStorage.removeItem('token','user','loggedIn');
  //     localStorage.removeItem('loggedIn');
  //     localStorage.removeItem('user');
  //     this.$router.push("/login");
  //   }
  // },

});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=script&lang=js&":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      deferDialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "No",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Signatory",
        value: "staff"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalclearancerequests: 0,
      numberOfPages: 0,
      options: {},
      clearancerequests: [],
      editedIndex: -1,
      itemIndex: 0,
      deficiency: {
        title: '',
        note: ''
      },
      studentName: '',
      clearanceRequest: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearancerequestscas?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.clearancerequests = response.data.clearancerequests;
        _this.totalclearancerequests = response.data.clearancerequests.total;
        _this.numberOfPages = response.data.clearancerequests.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/clearancerequestscas/".concat(d)).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/clearancerequestscas?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.clearanceRequest = Object.assign({}, item);
      this.studentName = this.clearanceRequest.name;
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this4 = this;

      var index = this.clearancerequests.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearancerequestscas/" + item.id).then(function (res) {
          _this4.text = "Record Deleted Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;

          _this4.clearancerequests.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Deleting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    },
    approve: function approve() {
      var _this5 = this;

      // const index = this.clearancerequests.data.indexOf(item);
      // let decide = confirm("Are you sure you want to approve this request?");
      // if (decide) {
      axios.post("/api/v1/approveclearancerequestcas", this.clearanceRequest).then(function (res) {
        _this5.text = "Request Approved Successfully!";
        _this5.snackbarColor = "primary darken-1";
        _this5.snackbar = true;
        _this5.clearancerequests = res.data.clearancerequests;
        _this5.totalclearancerequests = res.data.clearancerequests.total;
        _this5.numberOfPages = res.data.clearancerequests.last_page;
        _this5.dialog = false;
      })["catch"](function (err) {
        console.log(err.response);
        _this5.text = "Error Approving Request";
        _this5.snackbarColor = "error darken-1";
        _this5.snackbar = true;
      }); // }

      close();
    },
    defer: function defer(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.itemIndex = this.clearancerequests.data.indexOf(item);
      this.clearanceRequest = Object.assign({}, item);
      this.deferDialog = true;
    },
    deferItem: function deferItem() {
      var _this6 = this;

      var index = this.editedIndex;
      axios.put("/api/v1/clearancerequestscas/" + this.clearanceRequest.id, this.deficiency).then(function (res) {
        _this6.text = "Record Updated Successfully!";
        _this6.snackbarColor = "primary darken-1";
        _this6.snackbar = true;
        _this6.clearancerequests = res.data.clearancerequests;
        _this6.totalclearancerequests = res.data.clearancerequests.total;
        _this6.numberOfPages = res.data.clearancerequests.last_page;
      })["catch"](function (err) {
        console.log(err.response);
        _this6.text = "Error Updating Record";
        _this6.snackbarColor = "error darken-1";
        _this6.snackbar = true;
      });
      this.deferDialog = false;
    },
    close: function close() {
      var _this7 = this;

      this.dialog = false;
      setTimeout(function () {
        _this7.editedItem = Object.assign({}, _this7.defaultItem);
        _this7.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this8 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearancerequestscas/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this8.text = "Record Updated Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;
          Object.assign(_this8.clearancerequests.data[index], res.data.clearancerequest);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Updating Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearancerequestscas", this.editedItem).then(function (res) {
          _this8.text = "Record Added Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true; // this.students.data.push(res.data.student); 

          _this8.clearancerequests = res.data.clearancerequests;
        })["catch"](function (err) {
          console.dir(err);
          _this8.text = "Error Inserting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=script&lang=js&":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      deferDialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "No",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Signatory",
        value: "staff"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalclearancerequests: 0,
      numberOfPages: 0,
      options: {},
      clearancerequests: [],
      editedIndex: -1,
      itemIndex: 0,
      deficiency: {
        title: '',
        note: ''
      },
      studentName: '',
      clearanceRequest: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearancerequestscbm?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.clearancerequests = response.data.clearancerequests;
        _this.totalclearancerequests = response.data.clearancerequests.total;
        _this.numberOfPages = response.data.clearancerequests.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/clearancerequestscbm/".concat(d)).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/clearancerequestscbm?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.clearanceRequest = Object.assign({}, item);
      this.studentName = this.clearanceRequest.name;
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this4 = this;

      var index = this.clearancerequests.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearancerequestscbm/" + item.id).then(function (res) {
          _this4.text = "Record Deleted Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;

          _this4.clearancerequests.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Deleting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    },
    approve: function approve() {
      var _this5 = this;

      // const index = this.clearancerequests.data.indexOf(item);
      // let decide = confirm("Are you sure you want to approve this request?");
      // if (decide) {
      axios.post("/api/v1/approveclearancerequestcbm", this.clearanceRequest).then(function (res) {
        _this5.text = "Request Approved Successfully!";
        _this5.snackbarColor = "primary darken-1";
        _this5.snackbar = true;
        _this5.clearancerequests = res.data.clearancerequests;
        _this5.totalclearancerequests = res.data.clearancerequests.total;
        _this5.numberOfPages = res.data.clearancerequests.last_page;
        _this5.dialog = false;
      })["catch"](function (err) {
        console.log(err.response);
        _this5.text = "Error Approving Request";
        _this5.snackbarColor = "error darken-1";
        _this5.snackbar = true;
      }); // }

      close();
    },
    defer: function defer(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.itemIndex = this.clearancerequests.data.indexOf(item);
      this.clearanceRequest = Object.assign({}, item);
      this.deferDialog = true;
    },
    deferItem: function deferItem() {
      var _this6 = this;

      var index = this.editedIndex;
      axios.put("/api/v1/clearancerequestscbm/" + this.clearanceRequest.id, this.deficiency).then(function (res) {
        _this6.text = "Record Updated Successfully!";
        _this6.snackbarColor = "primary darken-1";
        _this6.snackbar = true;
        _this6.clearancerequests = res.data.clearancerequests;
        _this6.totalclearancerequests = res.data.clearancerequests.total;
        _this6.numberOfPages = res.data.clearancerequests.last_page;
      })["catch"](function (err) {
        console.log(err.response);
        _this6.text = "Error Updating Record";
        _this6.snackbarColor = "error darken-1";
        _this6.snackbar = true;
      });
      this.deferDialog = false;
    },
    close: function close() {
      var _this7 = this;

      this.dialog = false;
      setTimeout(function () {
        _this7.editedItem = Object.assign({}, _this7.defaultItem);
        _this7.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this8 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearancerequestscbm/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this8.text = "Record Updated Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;
          Object.assign(_this8.clearancerequests.data[index], res.data.clearancerequest);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Updating Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearancerequestscbm", this.editedItem).then(function (res) {
          _this8.text = "Record Added Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true; // this.students.data.push(res.data.student); 

          _this8.clearancerequests = res.data.clearancerequests;
        })["catch"](function (err) {
          console.dir(err);
          _this8.text = "Error Inserting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=script&lang=js&":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      deferDialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "No",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Signatory",
        value: "staff"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalclearancerequests: 0,
      numberOfPages: 0,
      options: {},
      clearancerequests: [],
      editedIndex: -1,
      itemIndex: 0,
      deficiency: {
        title: '',
        note: ''
      },
      studentName: '',
      clearanceRequest: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearancerequestscet?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.clearancerequests = response.data.clearancerequests;
        _this.totalclearancerequests = response.data.clearancerequests.total;
        _this.numberOfPages = response.data.clearancerequests.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/clearancerequestscet/".concat(d)).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/clearancerequestscet?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.clearanceRequest = Object.assign({}, item);
      this.studentName = this.clearanceRequest.name;
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this4 = this;

      var index = this.clearancerequests.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearancerequestscet/" + item.id).then(function (res) {
          _this4.text = "Record Deleted Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;

          _this4.clearancerequests.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Deleting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    },
    approve: function approve() {
      var _this5 = this;

      // const index = this.clearancerequests.data.indexOf(item);
      // let decide = confirm("Are you sure you want to approve this request?");
      // if (decide) {
      axios.post("/api/v1/approveclearancerequestcet", this.clearanceRequest).then(function (res) {
        _this5.text = "Request Approved Successfully!";
        _this5.snackbarColor = "primary darken-1";
        _this5.snackbar = true;
        _this5.clearancerequests = res.data.clearancerequests;
        _this5.totalclearancerequests = res.data.clearancerequests.total;
        _this5.numberOfPages = res.data.clearancerequests.last_page;
        _this5.dialog = false;
      })["catch"](function (err) {
        console.log(err.response);
        _this5.text = "Error Approving Request";
        _this5.snackbarColor = "error darken-1";
        _this5.snackbar = true;
      }); // }

      close();
    },
    defer: function defer(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.itemIndex = this.clearancerequests.data.indexOf(item);
      this.clearanceRequest = Object.assign({}, item);
      this.deferDialog = true;
    },
    deferItem: function deferItem() {
      var _this6 = this;

      var index = this.editedIndex;
      axios.put("/api/v1/clearancerequestscet/" + this.clearanceRequest.id, this.deficiency).then(function (res) {
        _this6.text = "Record Updated Successfully!";
        _this6.snackbarColor = "primary darken-1";
        _this6.snackbar = true;
        _this6.clearancerequests = res.data.clearancerequests;
        _this6.totalclearancerequests = res.data.clearancerequests.total;
        _this6.numberOfPages = res.data.clearancerequests.last_page;
      })["catch"](function (err) {
        console.log(err.response);
        _this6.text = "Error Updating Record";
        _this6.snackbarColor = "error darken-1";
        _this6.snackbar = true;
      });
      this.deferDialog = false;
    },
    close: function close() {
      var _this7 = this;

      this.dialog = false;
      setTimeout(function () {
        _this7.editedItem = Object.assign({}, _this7.defaultItem);
        _this7.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this8 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearancerequestscet/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this8.text = "Record Updated Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;
          Object.assign(_this8.clearancerequests.data[index], res.data.clearancerequest);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Updating Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearancerequestscet", this.editedItem).then(function (res) {
          _this8.text = "Record Added Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true; // this.students.data.push(res.data.student); 

          _this8.clearancerequests = res.data.clearancerequests;
        })["catch"](function (err) {
          console.dir(err);
          _this8.text = "Error Inserting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      deferDialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "No",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Signatory",
        value: "staff"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalclearancerequests: 0,
      numberOfPages: 0,
      options: {},
      clearancerequests: [],
      editedIndex: -1,
      itemIndex: 0,
      deficiency: {
        title: '',
        note: ''
      },
      studentName: '',
      clearanceRequest: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearancerequestscoed?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.clearancerequests = response.data.clearancerequests;
        _this.totalclearancerequests = response.data.clearancerequests.total;
        _this.numberOfPages = response.data.clearancerequests.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/clearancerequestscoed/".concat(d)).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/clearancerequestscoed?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.clearanceRequest = Object.assign({}, item);
      this.studentName = this.clearanceRequest.name;
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this4 = this;

      var index = this.clearancerequests.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearancerequestscoed/" + item.id).then(function (res) {
          _this4.text = "Record Deleted Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;

          _this4.clearancerequests.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Deleting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    },
    approve: function approve() {
      var _this5 = this;

      // const index = this.clearancerequests.data.indexOf(item);
      // let decide = confirm("Are you sure you want to approve this request?");
      // if (decide) {
      axios.post("/api/v1/approveclearancerequestcoed", this.clearanceRequest).then(function (res) {
        _this5.text = "Request Approved Successfully!";
        _this5.snackbarColor = "primary darken-1";
        _this5.snackbar = true;
        _this5.clearancerequests = res.data.clearancerequests;
        _this5.totalclearancerequests = res.data.clearancerequests.total;
        _this5.numberOfPages = res.data.clearancerequests.last_page;
        _this5.dialog = false;
      })["catch"](function (err) {
        console.log(err.response);
        _this5.text = "Error Approving Request";
        _this5.snackbarColor = "error darken-1";
        _this5.snackbar = true;
      }); // }

      close();
    },
    defer: function defer(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.itemIndex = this.clearancerequests.data.indexOf(item);
      this.clearanceRequest = Object.assign({}, item);
      this.deferDialog = true;
    },
    deferItem: function deferItem() {
      var _this6 = this;

      var index = this.editedIndex;
      axios.put("/api/v1/clearancerequestscoed/" + this.clearanceRequest.id, this.deficiency).then(function (res) {
        _this6.text = "Record Updated Successfully!";
        _this6.snackbarColor = "primary darken-1";
        _this6.snackbar = true;
        _this6.clearancerequests = res.data.clearancerequests;
        _this6.totalclearancerequests = res.data.clearancerequests.total;
        _this6.numberOfPages = res.data.clearancerequests.last_page;
      })["catch"](function (err) {
        console.log(err.response);
        _this6.text = "Error Updating Record";
        _this6.snackbarColor = "error darken-1";
        _this6.snackbar = true;
      });
      this.deferDialog = false;
    },
    close: function close() {
      var _this7 = this;

      this.dialog = false;
      setTimeout(function () {
        _this7.editedItem = Object.assign({}, _this7.defaultItem);
        _this7.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this8 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearancerequestscoed/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this8.text = "Record Updated Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;
          Object.assign(_this8.clearancerequests.data[index], res.data.clearancerequest);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Updating Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearancerequestscoed", this.editedItem).then(function (res) {
          _this8.text = "Record Added Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true; // this.students.data.push(res.data.student); 

          _this8.clearancerequests = res.data.clearancerequests;
        })["catch"](function (err) {
          console.dir(err);
          _this8.text = "Error Inserting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "No",
        align: "left",
        value: "id"
      }, {
        text: "Clearance Id",
        value: "clearance_id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Semester",
        value: "semester"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalclearances: 0,
      numberOfPages: 0,
      options: {},
      clearances: [],
      editedIndex: -1,
      editedItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        semester: ""
      },
      defaultItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        semester: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearances?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.clearances = response.data.clearances;
        _this.totalclearances = response.data.clearances.total;
        _this.numberOfPages = response.data.clearances.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/clearances/".concat(d)).then(function (res) {
          _this2.loading = false;
          _this2.clearances = res.data.clearances;
          _this2.totalclearances = res.data.clearances.total;
          _this2.numberOfPages = res.data.clearances.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/clearances?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.clearances = res.data.clearances;
          _this2.totalclearances = res.data.clearances.total;
          _this2.numberOfPages = res.data.clearances.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearances.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this4 = this;

      var index = this.clearances.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearances/" + item.id).then(function (res) {
          _this4.text = "Record Deleted Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;

          _this4.clearances.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Deleting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this5 = this;

      this.dialog = false;
      setTimeout(function () {
        _this5.editedItem = Object.assign({}, _this5.defaultItem);
        _this5.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this6 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearances/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this6.text = "Record Updated Successfully!";
          _this6.snackbarColor = "primary darken-1";
          _this6.snackbar = true;
          Object.assign(_this6.clearances.data[index], res.data.clearance);
        })["catch"](function (err) {
          console.log(err.response);
          _this6.text = "Error Updating Record";
          _this6.snackbarColor = "error darken-1";
          _this6.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearances", this.editedItem).then(function (res) {
          _this6.text = "Record Added Successfully!";
          _this6.snackbarColor = "primary darken-1";
          _this6.snackbar = true; // this.students.data.push(res.data.student); 

          _this6.clearances = res.data.clearances;
        })["catch"](function (err) {
          console.dir(err);
          _this6.text = "Error Inserting Record";
          _this6.snackbarColor = "error darken-1";
          _this6.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_0__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      deferDialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      searchItem: '',
      snackbarColor: "",
      headers: [{
        text: "#",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, //  { text: "Signatory", value: "staff" },
      {
        text: "Date Requested",
        value: "request_at"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalclearancerequests: 0,
      numberOfPages: 0,
      options: {},
      clearancerequests: [],
      semesters: [],
      colleges: [],
      programs: [],
      semester: '',
      college: '',
      program: '',
      editedIndex: -1,
      itemIndex: 0,
      deficiency: {
        title: '',
        note: ''
      },
      studentName: '',
      clearanceRequest: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      }
    };
  },
  computed: {},
  watch: {
    searchItem: lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function (val) {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearance-requests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage,
          'search': val,
          'semester': this.semester,
          'college': this.college,
          'program': this.program
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.clearancerequests = response.data.clearance_requests;
        _this.totalclearancerequests = response.data.clearance_requests.total;
        _this.numberOfPages = response.data.clearance_requests.last_page;
        _this.loading = false;
      });
    }, 300),
    semester: lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function (val) {
      var _this2 = this;

      this.college = '';
      this.program = '';
      this.loading = true;
      var _this$options2 = this.options,
          page = _this$options2.page,
          itemsPerPage = _this$options2.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearance-requests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage,
          'semester': val,
          'search': this.searchItem,
          'college': this.college,
          'program': this.program
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this2.colleges = response.data.colleges;
        _this2.clearancerequests = response.data.clearance_requests;
        _this2.totalclearancerequests = response.data.clearance_requests.total;
        _this2.numberOfPages = response.data.clearance_requests.last_page;
        _this2.loading = false;
      });
    }, 300),
    college: lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function (val) {
      var _this3 = this;

      this.loading = true;
      this.program = '';
      var _this$options3 = this.options,
          page = _this$options3.page,
          itemsPerPage = _this$options3.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearance-requests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage,
          'semester': this.semester,
          'program': this.program,
          'search': this.searchItem,
          'college': val
        }
      }).then(function (response) {
        //ThhIten injecting the result to datatable parameters.
        _this3.programs = response.data.programs;
        _this3.clearancerequests = response.data.clearance_requests;
        _this3.totalclearancerequests = response.data.clearance_requests.total;
        _this3.numberOfPages = response.data.clearance_requests.last_page;
        _this3.loading = false;
      });
    }, 300),
    program: lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function (val) {
      var _this4 = this;

      this.loading = true;
      var _this$options4 = this.options,
          page = _this$options4.page,
          itemsPerPage = _this$options4.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearance-requests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage,
          'semester': this.semester,
          'search': this.searchItem,
          'program': val,
          'college': this.college
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        // this.programs = response.data.programs; 
        _this4.clearancerequests = response.data.clearance_requests;
        _this4.totalclearancerequests = response.data.clearance_requests.total;
        _this4.numberOfPages = response.data.clearance_requests.last_page;
        _this4.loading = false;
      });
    }, 300),
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.readDataFromAPI();
  },
  methods: {
    clean: function clean($val) {
      if ($val) {
        $val = $val.replace(/ +(?= )/g, "");
        $val = $val.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, " "); // Replaces all spaces with hyphens.

        $val = $val.replace(/ +(?= )/g, "");
        return $val;
      } // Removes special chars.

    },
    readDataFromAPI: function readDataFromAPI() {
      var _this5 = this;

      this.loading = true;
      var _this$options5 = this.options,
          page = _this$options5.page,
          itemsPerPage = _this$options5.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearance-requests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this5.loading = false;
        _this5.semesters = response.data.semesters;
        _this5.colleges = response.data.colleges;
        _this5.programs = response.data.programs;
        _this5.clearancerequests = response.data.clearance_requests;
        _this5.totalclearancerequests = response.data.clearance_requests.total;
        _this5.numberOfPages = response.data.clearance_requests.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this6 = this;

      var _this$options6 = this.options,
          page = _this$options6.page,
          itemsPerPage = _this$options6.itemsPerPage;
      var pageNumber = page;

      if (d.length > 2) {
        axios.get("/api/v1/clearance-requests?page=" + pageNumber, {
          params: {
            'per_page': itemsPerPage,
            'semester': this.semester,
            'search': this.searchItem,
            'program': this.program,
            'college': this.college
          }
        }).then(function (res) {
          _this6.loading = false;
          _this6.semesters = res.data.semesters;
          _this6.colleges = res.data.colleges;
          _this6.programs = res.data.programs;
          _this6.clearancerequests = res.data.clearance_requests;
          _this6.totalclearancerequests = res.data.clearance_requests.total;
          _this6.numberOfPages = res.data.clearance_requests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/clearance-requests?page=" + pageNumber, {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this6.loading = false;
          _this6.semesters = res.data.semesters;
          _this6.colleges = res.data.colleges;
          _this6.programs = res.data.programs;
          _this6.clearancerequests = res.data.clearance_requests;
          _this6.totalclearancerequests = res.data.clearance_requests.total;
          _this6.numberOfPages = res.data.clearance_requests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this7 = this;

      axios.interceptors.request.use(function (config) {
        _this7.loading = true;
        return config;
      }, function (error) {
        _this7.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this7.loading = false;
        return response;
      }, function (error) {
        _this7.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.clearanceRequest = Object.assign({}, item);
      this.studentName = this.clearanceRequest.name;
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this8 = this;

      var index = this.clearancerequests.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearancerequests/" + item.id).then(function (res) {
          _this8.text = "Record Deleted Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;

          _this8.clearancerequests.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Deleting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }
    },
    approve: function approve() {
      var _this9 = this;

      // console.log(this.clearanceRequest.id);
      axios.post("/api/v1/clearance-requests/approve", {
        'clearanceRequest': this.clearanceRequest,
        'semester': this.semester,
        'college': this.college,
        'program': this.program
      }).then(function (res) {
        _this9.text = "Successfully Approved!";
        _this9.snackbarColor = "primary darken-1";
        _this9.snackbar = true;
        _this9.clearancerequests = res.data.clearance_requests;
        _this9.totalclearancerequests = res.data.clearance_requests.total;
        _this9.numberOfPages = res.data.clearance_requests.last_page;
        _this9.dialog = false;
      })["catch"](function (err) {
        console.log(err.response);
        _this9.text = "Error Approving Request";
        _this9.snackbarColor = "error darken-1";
        _this9.snackbar = true;
      });
      this.close();
    },
    defer: function defer(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.itemIndex = this.clearancerequests.data.indexOf(item);
      this.clearanceRequest = Object.assign({}, item);
      this.deferDialog = true;
    },
    deferItem: function deferItem() {
      var _this10 = this;

      var index = this.editedIndex;
      axios.get("/api/v1/clearance-requests/disapprove", {
        params: {
          'requestId': this.clearanceRequest.id,
          'title': this.deficiency.title,
          'note': this.deficiency.note,
          'semester': this.semester,
          'college': this.college,
          'program': this.program
        }
      }).then(function (res) {
        _this10.text = "Record Updated Successfully!";
        _this10.snackbarColor = "primary darken-1";
        _this10.snackbar = true;
        _this10.loading = false;
        _this10.clearancerequests = res.data.clearance_requests;
        _this10.totalclearancerequests = res.data.clearance_requests.total;
        _this10.numberOfPages = res.data.clearance_requests.last_page;
      })["catch"](function (err) {
        console.log(err.response);
        _this10.text = "Error Updating Record";
        _this10.snackbarColor = "error darken-1";
        _this10.snackbar = true;
      });
      this.deferDialog = false;
    },
    close: function close() {
      this.dialog = false;
      this.editedItem = Object.assign({}, this.defaultItem);
      this.editedIndex = -1;
    },
    save: function save() {
      var _this11 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearancerequests/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this11.text = "Record Updated Successfully!";
          _this11.snackbarColor = "primary darken-1";
          _this11.snackbar = true;
          Object.assign(_this11.clearancerequests.data[index], res.data.clearancerequest);
        })["catch"](function (err) {
          console.log(err.response);
          _this11.text = "Error Updating Record";
          _this11.snackbarColor = "error darken-1";
          _this11.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearancerequests", this.editedItem).then(function (res) {
          _this11.text = "Record Added Successfully!";
          _this11.snackbarColor = "primary darken-1";
          _this11.snackbar = true; // this.students.data.push(res.data.student); 

          _this11.clearancerequests = res.data.clearancerequests;
        })["catch"](function (err) {
          console.dir(err);
          _this11.text = "Error Inserting Record";
          _this11.snackbarColor = "error darken-1";
          _this11.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=script&lang=js&":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      deferDialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "No",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Signatory",
        value: "staff"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalclearancerequests: 0,
      numberOfPages: 0,
      options: {},
      clearancerequests: [],
      editedIndex: -1,
      itemIndex: 0,
      deficiency: {
        title: '',
        note: ''
      },
      studentName: '',
      clearanceRequest: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearancerequestssgs?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.clearancerequests = response.data.clearancerequests;
        _this.totalclearancerequests = response.data.clearancerequests.total;
        _this.numberOfPages = response.data.clearancerequests.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/clearancerequestssgs/".concat(d)).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/clearancerequestssgs?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.clearanceRequest = Object.assign({}, item);
      this.studentName = this.clearanceRequest.name;
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this4 = this;

      var index = this.clearancerequests.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearancerequestssgs/" + item.id).then(function (res) {
          _this4.text = "Record Deleted Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;

          _this4.clearancerequests.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Deleting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    },
    approve: function approve() {
      var _this5 = this;

      // const index = this.clearancerequests.data.indexOf(item);
      // let decide = confirm("Are you sure you want to approve this request?");
      // if (decide) {
      axios.post("/api/v1/approveclearancerequestcoed", this.clearanceRequest).then(function (res) {
        _this5.text = "Request Approved Successfully!";
        _this5.snackbarColor = "primary darken-1";
        _this5.snackbar = true;
        _this5.clearancerequests = res.data.clearancerequests;
        _this5.totalclearancerequests = res.data.clearancerequests.total;
        _this5.numberOfPages = res.data.clearancerequests.last_page;
        _this5.dialog = false;
      })["catch"](function (err) {
        console.log(err.response);
        _this5.text = "Error Approving Request";
        _this5.snackbarColor = "error darken-1";
        _this5.snackbar = true;
      }); // }

      close();
    },
    defer: function defer(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.itemIndex = this.clearancerequests.data.indexOf(item);
      this.clearanceRequest = Object.assign({}, item);
      this.deferDialog = true;
    },
    deferItem: function deferItem() {
      var _this6 = this;

      var index = this.editedIndex;
      axios.put("/api/v1/clearancerequestssgs/" + this.clearanceRequest.id, this.deficiency).then(function (res) {
        _this6.text = "Record Updated Successfully!";
        _this6.snackbarColor = "primary darken-1";
        _this6.snackbar = true;
        _this6.clearancerequests = res.data.clearancerequests;
        _this6.totalclearancerequests = res.data.clearancerequests.total;
        _this6.numberOfPages = res.data.clearancerequests.last_page;
      })["catch"](function (err) {
        console.log(err.response);
        _this6.text = "Error Updating Record";
        _this6.snackbarColor = "error darken-1";
        _this6.snackbar = true;
      });
      this.deferDialog = false;
    },
    close: function close() {
      var _this7 = this;

      this.dialog = false;
      setTimeout(function () {
        _this7.editedItem = Object.assign({}, _this7.defaultItem);
        _this7.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this8 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearancerequestssgs/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this8.text = "Record Updated Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true;
          Object.assign(_this8.clearancerequests.data[index], res.data.clearancerequest);
        })["catch"](function (err) {
          console.log(err.response);
          _this8.text = "Error Updating Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearancerequestssgs", this.editedItem).then(function (res) {
          _this8.text = "Record Added Successfully!";
          _this8.snackbarColor = "primary darken-1";
          _this8.snackbar = true; // this.students.data.push(res.data.student); 

          _this8.clearancerequests = res.data.clearancerequests;
        })["catch"](function (err) {
          console.dir(err);
          _this8.text = "Error Inserting Record";
          _this8.snackbarColor = "error darken-1";
          _this8.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      searchItem: "",
      headers: [{
        text: "#",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Signatory",
        value: "staff"
      }, {
        text: "Date Approved",
        value: "approved_at"
      }],
      page: 0,
      totalclearancerequests: 0,
      numberOfPages: 0,
      options: {},
      clearancerequests: [],
      editedIndex: -1,
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/clearedclearancerequests?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.clearancerequests = response.data.clearancerequests;
        _this.totalclearancerequests = response.data.clearancerequests.total;
        _this.numberOfPages = response.data.clearancerequests.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/clearedclearancerequests/".concat(d, "?page=") + pageNumber, {
          params: {
            'per_page': itemsPerPage,
            'id': d,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/clearedclearancerequests?page=".concat(_pageNumber), {
          params: {
            'per_page': _itemsPerPage,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.clearancerequests = res.data.clearancerequests;
          _this2.totalclearancerequests = res.data.clearancerequests.total;
          _this2.numberOfPages = res.data.clearancerequests.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearancerequests.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this4 = this;

      var index = this.clearancerequests.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearedclearancerequests/" + item.id).then(function (res) {
          _this4.text = "Record Deleted Successfully!";
          _this4.snackbarColor = "primary darken-1";
          _this4.snackbar = true;

          _this4.clearancerequests.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this4.text = "Error Deleting Record";
          _this4.snackbarColor = "error darken-1";
          _this4.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this5 = this;

      this.dialog = false;
      setTimeout(function () {
        _this5.editedItem = Object.assign({}, _this5.defaultItem);
        _this5.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this6 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearedclearancerequests/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this6.text = "Record Updated Successfully!";
          _this6.snackbarColor = "primary darken-1";
          _this6.snackbar = true;
          Object.assign(_this6.clearancerequests.data[index], res.data.clearancerequest);
        })["catch"](function (err) {
          console.log(err.response);
          _this6.text = "Error Updating Record";
          _this6.snackbarColor = "error darken-1";
          _this6.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearedclearancerequests", this.editedItem).then(function (res) {
          _this6.text = "Record Added Successfully!";
          _this6.snackbarColor = "primary darken-1";
          _this6.snackbar = true; // this.students.data.push(res.data.student); 

          _this6.clearancerequests = res.data.clearancerequests;
        })["catch"](function (err) {
          console.dir(err);
          _this6.text = "Error Inserting Record";
          _this6.snackbarColor = "error darken-1";
          _this6.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/DashboardComponent.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/DashboardComponent.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
var _data$created$methods;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var gradients = [["#222"], ["#42b3f4"], ["red", "orange", "yellow"], ["purple", "violet"], ["#42b3f4", "#42b3f4", "#42b3f4"], ["#42b3f4", "#42b3f4", "#42b3f4"]];

var exhale = function exhale(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (_data$created$methods = {
  data: function data() {
    return {
      completed: 0,
      totalStudent: 0,
      width: 2,
      radius: 10,
      padding: 8,
      lineCap: "round",
      gradient: gradients[5],
      value: [0, 2, 5, 9, 5, 10, 3, 5, 0, 0, 1, 8, 2, 9, 0],
      gradientDirection: "top",
      gradients: gradients,
      fill: false,
      type: "trend",
      autoLineWidth: false,
      checking: false,
      heartbeats: [],
      stats: [],
      dialog: false,
      loading: false,
      headers: [{
        text: "No",
        align: "left",
        sortable: false,
        value: "no"
      }, {
        text: "Office",
        value: "office"
      }, {
        text: "Total Approved",
        value: "approved"
      }, {
        text: "Pending Request",
        value: "pending"
      }],
      offices: [{
        no: 1,
        office: "Cashier(Goa Campus)",
        approved: 3308,
        pending: 16
      }, {
        no: 2,
        office: "Library(Goa Campus)",
        approved: 3292,
        pending: 0
      }, {
        no: 3,
        office: "OSAS(Goa Campus)",
        approved: 3291,
        pending: 0
      }, {
        no: 4,
        office: "Registrar(Goa Campus)",
        approved: 3048,
        pending: 112
      }, {
        no: 5,
        office: "Registrar(Goa Campus)",
        approved: 3048,
        pending: 112
      }],
      editedIndex: -1,
      editedItem: {
        name: "",
        campus: "",
        fat: 0,
        carbs: 0,
        protein: 0
      },
      defaultItem: {
        name: "",
        campus: "",
        fat: 0,
        carbs: 0,
        protein: 0
      }
    };
  },
  created: function created() {
    this.takePulse(false);
  },
  methods: {
    heartbeat: function heartbeat() {
      return Math.ceil(Math.random() * (120 - 80) + 80);
    },
    takePulse: function takePulse() {
      var _arguments = arguments,
          _this = this;

      return _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var inhale;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                inhale = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : true;
                _this.checking = true;
                _context.t0 = inhale;

                if (!_context.t0) {
                  _context.next = 6;
                  break;
                }

                _context.next = 6;
                return exhale(1000);

              case 6:
                _this.heartbeats = Array.from({
                  length: 20
                }, _this.heartbeat);
                _this.checking = false;

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))();
    }
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New Item" : "Edit Item";
    },
    avg: function avg() {
      // const sum = this.heartbeats.reduce((acc, cur) => acc + cur, 0)
      // const length = this.heartbeats.length
      // if (!sum && !length) return 0
      // return Math.ceil(sum / length)
      return 5421;
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  }
}, _defineProperty(_data$created$methods, "created", function created() {
  this.initialize();
}), _defineProperty(_data$created$methods, "methods", {
  initialize: function initialize() {
    var _this2 = this;

    this.colleges = [], axios.interceptors.request.use(function (config) {
      _this2.loading = true;
      return config;
    }, function (error) {
      _this2.loading = false;
      return Promise.reject(error);
    });
    axios.interceptors.response.use(function (response) {
      _this2.loading = false;
      return response;
    }, function (error) {
      _this2.loading = false;
      return Promise.reject(error);
    });
    axios.get("/api/v1/colleges", {}).then(function (res) {// this.colleges = res.data.colleges
    })["catch"](function (err) {
      console.error(err);
    });
    axios.get("/api/v1/admindashboard", {}).then(function (res) {
      console.dir(res.completed);
      _this2.completed = res.data.completed;
      _this2.totalStudent = res.data.totalStudent;
      _this2.stats = [{
        name: "Total Students",
        total: _this2.totalStudent
      }, {
        name: "Active Account(s)",
        total: res.data.totalActivatedAccount
      }, {
        name: "Pending Request(s)",
        total: res.data.pendingRequest
      }, {
        name: "Approved Request(s)",
        total: res.data.approvedRequest
      }, {
        name: "Total Clearance Request(s)",
        total: res.data.totalClearanceRequest
      }];
    })["catch"](function (err) {
      console.error(err);
    });
  }
}), _data$created$methods);

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      deletedialog: false,
      editdialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      studentName: "",
      deficiencyName: "",
      text: "",
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "#",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "student_name"
      }, {
        text: "Completed",
        value: "completed"
      }, {
        text: "Deficiency",
        value: "deficiency"
      }, {
        text: "Staff",
        value: "staff"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totaldeficiencies: 0,
      numberOfPages: 0,
      options: {},
      deficiencies: [],
      editedIndex: -1,
      editedItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        semester: "",
        deficiency: "",
        note: ''
      },
      defaultItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        semester: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/deficiencies?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.deficiencies = response.data.deficiencies;
        _this.totaldeficiencies = response.data.deficiencies.total;
        _this.numberOfPages = response.data.deficiencies.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this2 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/deficiencies/".concat(d)).then(function (res) {
          _this2.loading = false;
          _this2.deficiencies = res.data.deficiencies;
          _this2.totaldeficiencies = res.data.deficiencies.total;
          _this2.numberOfPages = res.data.deficiencies.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/deficiencies?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.deficiencies = res.data.deficiencies;
          _this2.totaldeficiencies = res.data.deficiencies.total;
          _this2.numberOfPages = res.data.deficiencies.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this3 = this;

      axios.interceptors.request.use(function (config) {
        _this3.loading = true;
        return config;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this3.loading = false;
        return response;
      }, function (error) {
        _this3.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.deficiencies.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.editdialog = true;
    },
    approveItem: function approveItem(item) {
      this.editedIndex = this.deficiencies.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.studentName = this.editedItem.student_name;
      this.deficiencyName = this.editedItem.deficiency;
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      this.editedIndex = this.deficiencies.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.studentName = this.editedItem.student_name;
      this.deficiencyName = this.editedItem.deficiency;
      this.deletedialog = true;
    },
    deleteDeficiency: function deleteDeficiency() {
      var _this4 = this;

      var index = this.editedIndex;
      axios["delete"]("/api/v1/deficiencies/" + this.edited.id).then(function (res) {
        _this4.text = "Record Deleted Successfully!";
        _this4.snackbarColor = "primary darken-1";
        _this4.snackbar = true;

        _this4.deficiencies.data.splice(index, 1);
      })["catch"](function (err) {
        console.log(err.response);
        _this4.text = "Error Deleting Record";
        _this4.snackbarColor = "error darken-1";
        _this4.snackbar = true;
      });
      this.deletedialog = false;
    },
    approve: function approve() {
      var _this5 = this;

      var index = this.editedIndex;
      axios.post("/api/v1/deficiencies/approve", this.editedItem).then(function (res) {
        _this5.text = "Record Updated Successfully!";
        _this5.snackbarColor = "primary darken-1";
        _this5.snackbar = true;
        _this5.loading = false;
        _this5.deficiencies = res.data.deficiencies;
        _this5.totaldeficiencies = res.data.deficiencies.total;
        _this5.numberOfPages = res.data.deficiencies.last_page;
      })["catch"](function (err) {
        _this5.text = "Error Updating Record";
        _this5.snackbarColor = "error darken-1";
        _this5.snackbar = true;
      });
      this.dialog = false;
    },
    close: function close() {
      var _this6 = this;

      this.dialog = false;
      setTimeout(function () {
        _this6.editedItem = Object.assign({}, _this6.defaultItem);
        _this6.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this7 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.post("/api/v1/deficeincy/edit", this.editedItem).then(function (res) {
          _this7.text = "Record Updated Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true; // Object.assign(this.deficiencies.data[index], res.data.deficiency); 

          _this7.loading = false;
          _this7.deficiencies = res.data.deficiencies;
          _this7.totaldeficiencies = res.data.deficiencies.total;
          _this7.numberOfPages = res.data.deficiencies.last_page;
          _this7.editdialog = false;
        })["catch"](function (err) {
          console.log(err.response);
          _this7.text = "Error Updating Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
          _this7.editdialog = false;
        });
        this.editdialog = false;
      } else {
        axios.post("/api/v1/deficiencies", this.editedItem).then(function (res) {
          _this7.text = "Record Added Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true; // this.students.data.push(res.data.student); 

          _this7.deficiencies = res.data.deficiencies;
        })["catch"](function (err) {
          console.dir(err);
          _this7.text = "Error Inserting Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/PDComponent.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/PDComponent.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      drawer: null,
      menu: false,
      user: '',
      role: '',
      scrollOptions: {
        height: '100%'
      },
      items: [{
        icon: "mdi-view-dashboard",
        text: "Dashboard",
        link: "/pd/dashboard"
      }, {
        icon: "mdi-account-multiple",
        text: "Student List",
        link: "/pd/student/list"
      }, {
        icon: "mdi-clipboard-list",
        text: "Clearance Requests",
        link: "/pd/clearance/requests"
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/pd/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/pd/submitted/clearances"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/pd/clearance/list"
      }, {
        icon: "mdi-account-group-outline",
        text: "User Accounts",
        link: "/pd/users"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/pd/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/pd/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    }); //   axios.interceptors.response.use(null, (error) => {
    // if(error.response && error.response.status == 419) {
    //     // session timed out | not authenticated
    //     // window.location.href = '/login';
    //   localStorage.removeItem('token','user','loggedIn');
    //   localStorage.removeItem('loggedIn');
    //   localStorage.removeItem('user');
    //   this.$router.push("/login");
    // }
    // return Promise.reject(error);
    // });
  } // methods: {
  //   initialize() {
  //     axios.interceptors.request.use(
  //       (config) => {
  //         this.loading = true;
  //         return config;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     );
  //     axios.interceptors.response.use(
  //       (response) => {
  //         this.loading = false;
  //         return response;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     ); 
  //     axios.get('/api/authuser')
  //     .then(res => {
  //       this.user = localStorage.getItem('user')
  //       console.dir(res)
  //     })
  //     .catch(err => {
  //       console.error(err); 
  //     })
  //   },
  //   logout(){
  //     localStorage.removeItem('token','user','loggedIn');
  //     localStorage.removeItem('loggedIn');
  //     localStorage.removeItem('user');
  //     this.$router.push("/login");
  //   }
  // },

});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/StudentListComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/StudentListComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    var _ref;

    return _ref = {
      uploadDialog: "",
      loadingDialog: false,
      ffile: null,
      error: {},
      import_file: "",
      valid: true,
      dialog: false,
      loading: false,
      isLoading: false,
      snackbar: false,
      cDialog: false,
      selected: [],
      text: "",
      success: ""
    }, _defineProperty(_ref, "error", ""), _defineProperty(_ref, "snackbarColor", ""), _defineProperty(_ref, "searchItem", ""), _defineProperty(_ref, "headers", [{
      text: "Student Number",
      value: "student_number"
    }, {
      text: "Name",
      value: "name"
    }, {
      text: "Program",
      value: "program",
      sortable: false
    }, {
      text: "Action",
      align: "right",
      value: "actions"
    }]), _defineProperty(_ref, "page", 0), _defineProperty(_ref, "totalStudents", 0), _defineProperty(_ref, "numberOfPages", 0), _defineProperty(_ref, "options", {}), _defineProperty(_ref, "students", {}), _defineProperty(_ref, "campuses", {}), _defineProperty(_ref, "sections", {}), _defineProperty(_ref, "programs", ""), _defineProperty(_ref, "export_programs", ""), _defineProperty(_ref, "export_campuses", ""), _defineProperty(_ref, "filenames", ""), _defineProperty(_ref, "years", [1, 2, 3, 4, 5]), _defineProperty(_ref, "rules", []), _defineProperty(_ref, "fileRules", [function (file) {
      var pattern = /\.csv$/;
      return !file || pattern.test(file) || "File type should be csv.";
    }]), _defineProperty(_ref, "editedIndex", -1), _defineProperty(_ref, "editedItem", {
      id: "",
      student_number: "",
      name: "",
      campus: "",
      section: "",
      program: "",
      campus_id: "",
      section_id: "",
      program_id: "",
      user_id: "",
      code: "",
      year: "",
      created_at: "",
      stat: ""
    }), _defineProperty(_ref, "defaultItem", {
      id: "",
      student_number: "",
      name: "",
      campus: "",
      section: "",
      program: "",
      campus_id: "",
      section_id: "",
      program_id: "",
      export_campus_id: "",
      export_program_id: "",
      user_id: "",
      code: "",
      year: "",
      created_at: "",
      stat: ""
    }), _defineProperty(_ref, "tempItem", {
      id: "",
      student_number: "",
      name: "",
      campus: "",
      section: "",
      program: "",
      campus_id: "",
      section_id: "",
      program_id: "",
      user_id: "",
      export_campus_id: "",
      export_program_id: "",
      code: "",
      year: "",
      created_at: "",
      stat: ""
    }), _ref;
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New Item" : "Edit Item";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-plus" : "mdi-pen";
    }
  },
  watch: {
    "editedItem.student_number": function editedItemStudent_number(val) {
      this.rules = [];
    },
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    copyToClipBoard: function copyToClipBoard(textToCopy) {
      console.log(textToCopy);
      this.text = "(" + textToCopy + ") Copied to clipboard!";
      this.snackbarColor = "success darken-1";
      document.execCommand("copy");
      this.snackbar = true;
    },
    onFileChange: function onFileChange(e) {
      console.log(e.target.files[0]);
      this.import_file = this.$refs.import_file;
    },
    proceedAction: function proceedAction() {
      var _this = this;

      this.loading = true;
      var formData = new FormData();
      formData.append("import_file", this.ffile);
      axios.post("api/v1/students/import", formData, {
        headers: {
          "content-type": "multipart/form-data"
        }
      }).then(function (res) {
        if (res.status === 200) {
          // codes here after the file is upload successfully
          _this.uploadDialog = false;
          _this.loading = false;
          _this.campuses = res.data.campuses;
          _this.programs = res.data.programs;
          _this.sections = res.data.sections;
          _this.students = res.data.students;
          _this.totalStudents = res.data.students.total;
          _this.numberOfPages = res.data.students.last_page;
        }
      })["catch"](function (error) {
        // code here when an upload is not valid
        _this.uploading = false;
        _this.loading = false;
        _this.error = error.response.data;
        console.log("check error: ", _this.error);
      });
    },
    readDataFromAPI: function readDataFromAPI() {
      var _this2 = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/students?page=" + pageNumber, {
        params: {
          per_page: itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this2.loading = false;
        _this2.students = response.data.students;
        _this2.campuses = response.data.campuses;
        _this2.programs = response.data.programs;
        _this2.sections = response.data.sections;
        _this2.export_programs = response.data.programs;
        _this2.export_campuses = response.data.campuses;
        _this2.totalStudents = response.data.students.total;
        _this2.numberOfPages = response.data.students.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this3 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/students/".concat(d, "?page=") + pageNumber, {
          params: {
            per_page: itemsPerPage
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.students = res.data.students;
          console.log(_this3.students);
          _this3.campuses = res.data.campuses;
          _this3.programs = res.data.programs;
          _this3.sections = res.data.sections;
          _this3.totalStudents = res.data.students.total;
          _this3.numberOfPages = res.data.students.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/students?page=" + _pageNumber, {
          params: {
            per_page: _itemsPerPage
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.campuses = res.data.campuses;
          _this3.programs = res.data.programs;
          _this3.sections = res.data.sections;
          _this3.students = res.data.students;
          _this3.export_programs = res.data.programs;
          _this3.export_campuses = res.data.campuses;
          _this3.totalStudents = res.data.students.total;
          _this3.numberOfPages = res.data.students.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this4 = this;

      axios.interceptors.request.use(function (config) {
        _this4.loading = true;
        return config;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this4.loading = false;
        return response;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.students.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.tempItem = this.editedItem;
      this.dialog = true;
    },
    campusListener: function campusListener() {
      var _this5 = this;

      axios.post("/api/v1/campusListener", {
        campus_id: this.editedItem.campus_id
      }).then(function (res) {
        _this5.programs = res.data.programs;
        _this5.sections = "";
      })["catch"](function (err) {
        console.error(err);
      });
    },
    exportcampusListener: function exportcampusListener($item) {
      var _this6 = this;

      console.log($item);
      axios.post("/api/v1/campusListener", {
        campus_id: this.editedItem.export_campus_id
      }).then(function (res) {
        _this6.export_programs = res.data.programs;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListener: function programListener() {
      var _this7 = this;

      axios.post("/api/v1/programListener", {
        program_id: this.editedItem.program_id
      }).then(function (res) {
        _this7.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    campusListenerNew: function campusListenerNew() {
      var _this8 = this;

      axios.post("/api/v1/campusListener", {
        campus_id: this.editedItem.campus
      }).then(function (res) {
        _this8.programs = res.data.programs;
        _this8.sections = "";
      })["catch"](function (err) {
        console.error(err);
      });
    },
    programListenerNew: function programListenerNew() {
      var _this9 = this;

      axios.post("/api/v1/programListener", {
        program_id: this.editedItem.program
      }).then(function (res) {
        _this9.sections = res.data.sections;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    deleteItem: function deleteItem(item) {
      var _this10 = this;

      var index = this.students.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/students/" + item.id).then(function (res) {
          _this10.text = "Record Deleted Successfully!";
          _this10.snackbarColor = "primary darken-1";
          _this10.snackbar = true;

          _this10.students.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this10.text = "Error Deleting Record";
          _this10.snackbarColor = "error darken-1";
          _this10.snackbar = true;
        });
      }

      this.close();
    },
    close: function close() {
      var _this11 = this;

      this.dialog = false;
      setTimeout(function () {
        _this11.editedItem = Object.assign({}, _this11.defaultItem);
        _this11.editedIndex = -1;
      }, 300);
    },
    exportActivationCode: function exportActivationCode() {
      var _this12 = this;

      axios.post("/api/v1/getFileName", this.editedItem).then(function (response) {
        _this12.filenames = response.data.filename;
      })["catch"](function (err) {
        console.error(err);
      });
      axios.get("/api/v1/students/activationcode/export", {
        responseType: 'blob',
        params: this.editedItem
      }).then(function (response) {
        var url = window.URL.createObjectURL(new Blob([response.data], {
          type: "text/xlsx"
        })); // Create dynamic <a> element

        var link = document.createElement("a");
        link.href = url;
        link.setAttribute("download", _this12.filenames + '.xlsx');
        document.body.appendChild(link); // Dynamicall click the a link element
        // This will download the csv file

        link.click();
        _this12.exportDialog = false;
        _this12.filenames = '', _this12.close();
      })["catch"](function (err) {
        console.error(err);
      });
    },
    resetP: function resetP($item) {
      axios.post("/api/v1/resetP", $item).then(function (response) {// console.log(response.data)
        // this.cDialog = false;
      })["catch"](function (err) {
        console.error(err);
      }); //  this.loadingDialog = false;
      //   this.cDialog = false;
    },
    save: function save() {
      var _this13 = this;

      this.rules = {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      };
      this.$refs.entryForm.validate();
      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        console.log("Temp Data " + this.tempItem);
        axios.put("/api/v1/students/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this13.text = "Record Updated Successfully!";
          _this13.snackbarColor = "primary darken-1";
          _this13.snackbar = true;
          Object.assign(_this13.students.data[index], res.data.student);
          console.log(_this13.editedItem);

          _this13.close();
        })["catch"](function (err) {
          console.log(err.response);
          _this13.text = "Error Updating Record";
          _this13.snackbarColor = "error darken-1";
          _this13.snackbar = true;
        });
      } else {
        console.log(this.editedItem);
        axios.post("/api/v1/students", this.editedItem).then(function (res) {
          _this13.text = "Record Added Successfully!";
          _this13.snackbarColor = "primary darken-1";
          _this13.snackbar = true; // this.students.data.push(res.data.student);

          _this13.students = res.data.students;

          _this13.close();
        })["catch"](function (err) {
          console.dir(err);
          _this13.text = "Error Inserting Record";
          _this13.snackbarColor = "error darken-1";
          _this13.snackbar = true;
        });
      }
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      searchItem: '',
      success: "",
      error: "",
      snackbarColor: "",
      headers: [{
        text: "#",
        align: "left",
        value: "id"
      }, {
        text: "Student Number",
        value: "student_number"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Program",
        value: "program"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Date Submitted",
        value: "datesubmitted"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalsubmittedclearances: 0,
      numberOfPages: 0,
      options: {},
      submittedclearances: [],
      semesters: {
        id: "",
        semester: ""
      },
      semester_id: 0,
      editedIndex: -1,
      editedItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      },
      defaultItem: {
        id: "",
        token: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        staff: ""
      }
    };
  },
  computed: {},
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.searchIt(this.searchItem);
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    generatePDF: function generatePDF(item) {
      axios.get('/api/v1/active-clearance/signatory/pdf', {
        responseType: 'blob',
        params: {
          'clearance_id': item.clearance_id
        }
      }).then(function (response) {
        item.name = item.name.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "_"); // Replaces all spaces with hyphens.

        item.name = item.name.replace(/ +(?= )/g, "");
        var fileURL = window.URL.createObjectURL(new Blob([response.data], {
          type: 'application/pdf'
        }));
        var fileLink = document.createElement('a');
        fileLink.href = fileURL;
        fileLink.setAttribute('download', item.name + '-' + item.clearance_id + '.pdf');
        document.body.appendChild(fileLink);
        fileLink.click(); // this.downloadLoading = false;
      }); //  this.editedIndex = this.submittedclearances.data.indexOf(item);
      //   this.editedItem = Object.assign({}, item); 
      // if(item.college == "School of Graduate Studies and Research")
      // {
      //    axios.get('/api/v1/pdf-createSGS',{responseType: 'blob'
      //  ,params: { 'clearance': this.editedItem.clearance_id }
      //  }).then((response) => {
      //  var fileURL = window.URL.createObjectURL(new Blob([response.data], {type: 'application/pdf'}));
      //  var fileLink = document.createElement('a');
      //  fileLink.href = fileURL;
      //  fileLink.setAttribute('download', this.editedItem.name+this.editedItem.clearance_id+'.pdf');
      //  document.body.appendChild(fileLink);
      //  fileLink.click();
      //  });
      // }
      // else{
      //    axios.get('/api/v1/pdf-create',{responseType: 'blob'
      //  ,params: { 'clearance': this.editedItem.clearance_id }
      //  }).then((response) => {
      //  var fileURL = window.URL.createObjectURL(new Blob([response.data], {type: 'application/pdf'}));
      //  var fileLink = document.createElement('a');
      //  fileLink.href = fileURL;
      //  fileLink.setAttribute('download', this.editedItem.name+this.editedItem.clearance_id+'.pdf');
      //  document.body.appendChild(fileLink);
      //  fileLink.click();
      // });}
    },
    readDataFromAPI: function readDataFromAPI() {
      var _this = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/submittedclearances?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        _this.loading = false;
        _this.submittedclearances = response.data.submittedclearances;
        _this.totalsubmittedclearances = response.data.submittedclearances.total;
        _this.numberOfPages = response.data.submittedclearances.last_page;
      });
    },
    semesterChange: function semesterChange(d) {
      var _this2 = this;

      if (d.length > 2) {
        axios.get("/api/v1/submittedclearances/".concat(d, "?page=") + 1, {
          params: {
            'per_page': 10,
            'id': d,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.page = res.data.submittedclearances.current_page;
          _this2.submittedclearances = res.data.submittedclearances;
          _this2.totalsubmittedclearances = res.data.submittedclearances.total;
          _this2.numberOfPages = res.data.submittedclearances.total_pages;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/submittedclearances?page=0", {
          params: {
            'per_page': 10,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this2.loading = false;
          _this2.page = res.data.submittedclearances.current_page;
          _this2.submittedclearances = res.data.submittedclearances;
          _this2.totalsubmittedclearances = res.data.submittedclearances.total;
          _this2.numberOfPages = res.data.submittedclearances.total_pages;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    searchIt: function searchIt(d) {
      var _this3 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        var pageNumber = page;
        axios.get("/api/v1/submittedclearances/".concat(d, "?page=") + pageNumber, {
          params: {
            'per_page': itemsPerPage,
            'id': d,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.page = res.data.submittedclearances.current_page;
          _this3.submittedclearances = res.data.submittedclearances;
          _this3.totalsubmittedclearances = res.data.submittedclearances.total;
          _this3.numberOfPages = res.data.submittedclearances.total_pages;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        var _this$options3 = this.options,
            _page = _this$options3.page,
            _itemsPerPage = _this$options3.itemsPerPage;
        var _pageNumber = _page;
        axios.get("/api/v1/submittedclearances?page=" + _pageNumber, {
          params: {
            'per_page': _itemsPerPage,
            'semester_id': this.semester_id
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.page = res.data.submittedclearances.current_page;
          _this3.submittedclearances = res.data.submittedclearances;
          _this3.totalsubmittedclearances = res.data.submittedclearances.total;
          _this3.numberOfPages = res.data.submittedclearances.total_pages;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this4 = this;

      axios.interceptors.request.use(function (config) {
        _this4.loading = true;
        return config;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this4.loading = false;
        return response;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
      axios.get('/api/v1/semesters', {}).then(function (res) {
        _this4.semesters = res.data.semesters;
      })["catch"](function (err) {
        console.error(err);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.submittedclearances.data.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this5 = this;

      var index = this.submittedclearances.data.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/submittedclearances/" + item.id).then(function (res) {
          _this5.text = "Record Deleted Successfully!";
          _this5.snackbarColor = "primary darken-1";
          _this5.snackbar = true;

          _this5.submittedclearances.data.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this5.text = "Error Deleting Record";
          _this5.snackbarColor = "error darken-1";
          _this5.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this6 = this;

      this.dialog = false;
      setTimeout(function () {
        _this6.editedItem = Object.assign({}, _this6.defaultItem);
        _this6.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this7 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/submittedclearances/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this7.text = "Record Updated Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true;
          Object.assign(_this7.submittedclearances.data[index], res.data.submittedclearance);
        })["catch"](function (err) {
          console.log(err.response);
          _this7.text = "Error Updating Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
        });
      } else {
        axios.post("/api/v1/submittedclearances", this.editedItem).then(function (res) {
          _this7.text = "Record Added Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true; // this.students.data.push(res.data.student); 

          _this7.submittedclearances = res.data.submittedclearances;
        })["catch"](function (err) {
          console.dir(err);
          _this7.text = "Error Inserting Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      drawer: null,
      user: '',
      menu: false,
      role: '',
      scrollOptions: {
        height: '100%'
      },
      items: [{
        icon: "mdi-view-dashboard",
        text: "Dashboard",
        link: "/registrar/dashboard"
      }, {
        icon: "mdi-account-multiple",
        text: "Student List",
        link: "/registrar/student/list"
      }, {
        icon: "mdi-clipboard-list",
        text: "Clearance Requests",
        link: "/registrar/clearance/requests"
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/registrar/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/registrar/submitted/clearances"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/registrar/clearance/list"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/registrar/deficiency/list"
      }, {
        icon: "mdi-account-group-outline",
        text: "User Accounts",
        link: "/registrar/users"
      }, {
        icon: "mdi-history",
        text: "List of All Deficiency",
        link: "/registrar/deficiency/all/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/registrar/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    }); //   axios.interceptors.response.use(null, (error) => {
    // if(error.response && error.response.status == 419) {
    //     // session timed out | not authenticated
    //     // window.location.href = '/login';
    //   localStorage.removeItem('token','user','loggedIn');
    //   localStorage.removeItem('loggedIn');
    //   localStorage.removeItem('user');
    //   this.$router.push("/login");
    // }
    // return Promise.reject(error);
    // });
  } // methods: {
  //   initialize() {
  //     axios.interceptors.request.use(
  //       (config) => {
  //         this.loading = true;
  //         return config;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     );
  //     axios.interceptors.response.use(
  //       (response) => {
  //         this.loading = false;
  //         return response;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     ); 
  //     axios.get('/api/authuser')
  //     .then(res => {
  //       this.user = localStorage.getItem('user')
  //       console.dir(res)
  //     })
  //     .catch(err => {
  //       console.error(err); 
  //     })
  //   },
  //   logout(){
  //     localStorage.removeItem('token','user','loggedIn');
  //     localStorage.removeItem('loggedIn');
  //     localStorage.removeItem('user');
  //     this.$router.push("/login");
  //   }
  // },

});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      drawer: null,
      menu: false,
      user: '',
      role: '',
      scrollOptions: {
        height: '100%'
      },
      items: [{
        icon: "mdi-view-dashboard",
        text: "Dashboard",
        link: "/registrarstaff/dashboard"
      }, {
        icon: "mdi-account-multiple",
        text: "Student List",
        link: "/registrarstaff/student/list"
      }, {
        icon: "mdi-clipboard-list",
        text: "Clearance Requests",
        link: "/registrarstaff/clearance/requests"
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/registrarstaff/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/registrarstaff/submitted/clearances"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/registrarstaff/clearance/list"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/registrarstaff/deficiency/list"
      }, {
        icon: "mdi-account-group-outline",
        text: "User Accounts",
        link: "/registrarstaff/users"
      }, {
        icon: "mdi-history",
        text: "List of All Deficiency",
        link: "/registrarstaff/deficiency/all/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/registrarstaff/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    }); //   axios.interceptors.response.use(null, (error) => {
    // if(error.response && error.response.status == 419) {
    //     // session timed out | not authenticated
    //     // window.location.href = '/login';
    //   localStorage.removeItem('token','user','loggedIn');
    //   localStorage.removeItem('loggedIn');
    //   localStorage.removeItem('user');
    //   this.$router.push("/login");
    // }
    // return Promise.reject(error);
    // });
  } // methods: {
  //   initialize() {
  //     axios.interceptors.request.use(
  //       (config) => {
  //         this.loading = true;
  //         return config;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     );
  //     axios.interceptors.response.use(
  //       (response) => {
  //         this.loading = false;
  //         return response;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     ); 
  //     axios.get('/api/authuser')
  //     .then(res => {
  //       this.user = localStorage.getItem('user')
  //       console.dir(res)
  //     })
  //     .catch(err => {
  //       console.error(err); 
  //     })
  //   },
  //   logout(){
  //     localStorage.removeItem('token','user','loggedIn');
  //     localStorage.removeItem('loggedIn');
  //     localStorage.removeItem('user');
  //     this.$router.push("/login");
  //   }
  // },

});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      drawer: null,
      fav: true,
      menu: false,
      message: false,
      hints: true,
      user: '',
      role: '',
      scrollOptions: {
        height: '100%'
      },
      items: [{
        icon: "mdi-view-dashboard",
        text: "Dashboard",
        link: "/stcouncil/dashboard"
      }, {
        icon: "mdi-account-multiple",
        text: "Student List",
        link: "/stcouncil/student/list"
      }, {
        icon: "mdi-clipboard-list",
        text: "Clearance Requests",
        link: "/stcouncil/clearance/requests"
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/stcouncil/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/stcouncil/submitted/clearances"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/stcouncil/clearance/list"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/stcouncil/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/stcouncil/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    }); //   axios.interceptors.response.use(null, (error) => {
    // if(error.response && error.response.status == 419) {
    //     // session timed out | not authenticated
    //     // window.location.href = '/login';
    //   localStorage.removeItem('token','user','loggedIn');
    //   localStorage.removeItem('loggedIn');
    //   localStorage.removeItem('user');
    //   this.$router.push("/login");
    // }
    // return Promise.reject(error);
    // });
  } // methods: {
  //   initialize() {
  //     axios.interceptors.request.use(
  //       (config) => {
  //         this.loading = true;
  //         return config;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     );
  //     axios.interceptors.response.use(
  //       (response) => {
  //         this.loading = false;
  //         return response;
  //       },
  //       (error) => {
  //         this.loading = false;
  //         return Promise.reject(error);
  //       }
  //     ); 
  //     axios.get('/api/authuser')
  //     .then(res => {
  //       this.user = localStorage.getItem('user')
  //       console.dir(res)
  //     })
  //     .catch(err => {
  //       console.error(err); 
  //     })
  //   },
  //   logout(){
  //     localStorage.removeItem('token','user','loggedIn');
  //     localStorage.removeItem('loggedIn');
  //     localStorage.removeItem('user');
  //     this.$router.push("/login");
  //   }
  // },

});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/ClearanceListComponent.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/student/ClearanceListComponent.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_0__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      valid: true,
      dialog: false,
      loading: false,
      snackbar: false,
      selected: [],
      text: "",
      success: "",
      error: "",
      search: '',
      snackbarColor: "",
      headers: [// {
      //   text: "No",
      //   align: "left",
      //   value: "key",
      // },    
      {
        text: "Program",
        value: "program"
      }, {
        text: "Campus",
        value: "campus"
      }, {
        text: "Purpose",
        value: "purpose"
      }, {
        text: "Status",
        value: "status"
      }],
      page: 0,
      totalclearances: 0,
      numberOfPages: 0,
      options: {},
      clearances: [],
      editedIndex: -1,
      editedItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        semester: ""
      },
      defaultItem: {
        id: "",
        name: "",
        student_number: "",
        program: "",
        purpose: "",
        semester: ""
      }
    };
  },
  computed: {},
  watch: {
    search: lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(function (val) {
      var _this = this;

      axios.get("/api/v1/active-clearance/clearances", {
        params: {
          search: this.clean(val)
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        console.log(response.data.clearances.data);
        _this.loading = false;
        _this.clearances = response.data.clearances;
        _this.totalclearances = response.data.clearances.total;
        _this.numberOfPages = response.data.clearances.last_page;
      });
    }, 100),
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    clean: function clean($val) {
      if ($val) {
        $val = $val.replace(/ +(?= )/g, "");
        $val = $val.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, " "); // Replaces all spaces with hyphens.

        $val = $val.replace(/ +(?= )/g, "");
        return $val;
      } // Removes special chars.

    },
    readDataFromAPI: function readDataFromAPI() {
      var _this2 = this;

      this.loading = true;
      var _this$options = this.options,
          page = _this$options.page,
          itemsPerPage = _this$options.itemsPerPage;
      var pageNumber = page;
      axios.get("/api/v1/active-clearance/clearances?page=" + pageNumber, {
        params: {
          'per_page': itemsPerPage
        }
      }).then(function (response) {
        //Then injecting the result to datatable parameters.
        console.log(response.data.clearances.data);
        _this2.loading = false;
        _this2.clearances = response.data.clearances;
        _this2.totalclearances = response.data.clearances.total;
        _this2.numberOfPages = response.data.clearances.last_page;
      });
    },
    searchIt: function searchIt(d) {
      var _this3 = this;

      if (d.length > 2) {
        var _this$options2 = this.options,
            page = _this$options2.page,
            itemsPerPage = _this$options2.itemsPerPage;
        axios.get("/api/v1/clearances/".concat(d)).then(function (res) {
          _this3.loading = false;
          _this3.clearances = res.data.clearances;
          _this3.totalclearances = res.data.clearances.total;
          _this3.numberOfPages = res.data.clearances.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }

      if (d.length <= 0) {
        axios.get("/api/v1/clearances?page=".concat(d.page), {
          params: {
            'per_page': d.itemsPerPage
          }
        }).then(function (res) {
          _this3.loading = false;
          _this3.clearances = res.data.clearances;
          _this3.totalclearances = res.data.clearances.total;
          _this3.numberOfPages = res.data.clearances.last_page;
        })["catch"](function (err) {
          console.error(err);
        });
      }
    },
    initialize: function initialize() {
      var _this4 = this;

      axios.interceptors.request.use(function (config) {
        _this4.loading = true;
        return config;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this4.loading = false;
        return response;
      }, function (error) {
        _this4.loading = false;
        return Promise.reject(error);
      });
    },
    editItem: function editItem(item) {
      this.editedIndex = this.clearances.indexOf(item);
      this.editedItem = Object.assign({}, item);
      this.dialog = true;
    },
    deleteItem: function deleteItem(item) {
      var _this5 = this;

      var index = this.clearances.indexOf(item);
      var decide = confirm("Are you sure you want to delete this item?");

      if (decide) {
        axios["delete"]("/api/v1/clearances/" + item.id).then(function (res) {
          _this5.text = "Record Deleted Successfully!";
          _this5.snackbarColor = "primary darken-1";
          _this5.snackbar = true;

          _this5.clearances.splice(index, 1);
        })["catch"](function (err) {
          console.log(err.response);
          _this5.text = "Error Deleting Record";
          _this5.snackbarColor = "error darken-1";
          _this5.snackbar = true;
        });
      }
    },
    close: function close() {
      var _this6 = this;

      this.dialog = false;
      setTimeout(function () {
        _this6.editedItem = Object.assign({}, _this6.defaultItem);
        _this6.editedIndex = -1;
      }, 300);
    },
    save: function save() {
      var _this7 = this;

      console.log(this.editedItem);

      if (this.editedIndex > -1) {
        var index = this.editedIndex;
        axios.put("/api/v1/clearances/" + this.editedItem.id, this.editedItem).then(function (res) {
          _this7.text = "Record Updated Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true;
          Object.assign(_this7.clearances[index], res.data.clearance);
        })["catch"](function (err) {
          console.log(err.response);
          _this7.text = "Error Updating Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
        });
      } else {
        axios.post("/api/v1/clearances", this.editedItem).then(function (res) {
          _this7.text = "Record Added Successfully!";
          _this7.snackbarColor = "primary darken-1";
          _this7.snackbar = true; // this.students.data.push(res.data.student); 

          _this7.clearances = res.data.clearances;
        })["catch"](function (err) {
          console.dir(err);
          _this7.text = "Error Inserting Record";
          _this7.snackbarColor = "error darken-1";
          _this7.snackbar = true;
        });
      }

      this.close();
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/LHSStudentComponent.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/student/LHSStudentComponent.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      menu: false,
      drawer: null,
      user: '',
      role: '',
      scrollOptions: {
        height: '100%'
      },
      items: [// {
      //   icon: "mdi-view-dashboard",
      //   text: "Dashboard",
      //   link: "/lhs/student/dashboard",
      // },
      {
        icon: "mdi-clipboard-check",
        text: "Active Clearance",
        link: "/lhs/student/active/clearance"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/lhs/student/clearance/list"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/lhs/student/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/lhs/student/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    });
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/SGSStudentComponent.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/student/SGSStudentComponent.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  data: function data() {
    return {
      dialog: false,
      menu: false,
      drawer: null,
      user: '',
      role: '',
      scrollOptions: {
        height: '100%'
      },
      items: [// {
      //   icon: "mdi-view-dashboard",
      //   text: "Dashboard",
      //   link: "/sgs/student/dashboard",
      // },
      {
        icon: "mdi-clipboard-check",
        text: "Active Clearance",
        link: "/sgs/student/active/clearance"
      }, {
        icon: "mdi-clipboard-text",
        text: "Clearance List",
        link: "/sgs/student/clearance/list"
      }, {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/sgs/student/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/sgs/student/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  // created() {
  //   this.initialize();
  // },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    },
    loggedIn: {
      get: function get() {
        return this.$store.state.currentUser.loggedIn;
      }
    },
    currentUser: {
      get: function get() {
        return this.$store.state.currentUser.user;
      }
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      this.menu = false;
      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  },
  created: function created() {
    var _this2 = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token");
    this.$store.dispatch('currentUser/getUser');
    axios.get('/api/v1/getUser').then(function (res) {
      _this2.user = res.data.user;
      _this2.role = res.data.role.role;
      console.dir(res);
    });
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/SettingsComponent.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/student/SettingsComponent.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      tabs: null,
      valid: true,
      dialog: false,
      loading: true,
      snackbar: false,
      password_disabled: false,
      email_disabled: false,
      passwordCheckbox: false,
      snackbarColor: "",
      selected: [],
      text: "",
      success: "",
      error: "",
      headers: [{
        text: "No",
        align: "left",
        value: "id"
      }, {
        text: "Name",
        value: "name"
      }, {
        text: "Email",
        value: "email"
      }, {
        text: "Role",
        value: "role"
      }, {
        text: "Date Created",
        value: "created_at"
      }, {
        text: "Action",
        value: "actions"
      }],
      page: 0,
      totalUsers: 0,
      numberOfPages: 0,
      options: {},
      users: {},
      roles: [],
      purposes: [],
      semesters: [],
      graduations: [],
      setup: {
        graduation_id: "",
        credential: "",
        purpose_id: "",
        semester_id: "",
        g_id: ""
      },
      rules: {
        required: function required(v) {
          return !!v || "This Field is Required";
        },
        min: function min(v) {
          return v.length >= 5 || "Minimum 5 Characters Required";
        },
        validEmail: function validEmail(v) {
          return /.+@.+\..+/.test(v) || "Email must be valid";
        }
      },
      editedIndex: -1,
      editedItem: {
        id: "",
        name: "",
        email: "",
        role: "",
        password: "",
        rpassword: "",
        created_at: ""
      },
      defaultItem: {
        id: "",
        name: "",
        email: "",
        password: "",
        rpassword: "",
        role: "",
        created_at: ""
      }
    };
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New User" : "Edit User";
    },
    formIcon: function formIcon() {
      return this.editedIndex === -1 ? "mdi-account-plus" : "mdi-account-edit";
    },
    passwordmatch: function passwordmatch() {
      return this.editedItem.password != this.editedItem.rpassword ? "Password Does Not Match" : true;
    },
    checkEmail: function checkEmail() {
      var _this = this;

      if (/.+@.+\..+/.test(this.editedItem.email)) {
        axios.post("/api/v1/email/verify", {
          email: this.editedItem.email
        }).then(function (res) {
          _this.success = res.data.message;
          _this.error = "";
        })["catch"](function (err) {
          _this.success = "";
          _this.error = "Email Already Exist";
        });
      }
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    },
    options: {
      handler: function handler() {
        this.readDataFromAPI();
      }
    },
    deep: true
  },
  created: function created() {
    this.initialize();
  },
  methods: {
    initialize: function initialize() {
      var _this2 = this;

      axios.interceptors.request.use(function (config) {
        _this2.loading = true;
        return config;
      }, function (error) {
        _this2.loading = false;
        return Promise.reject(error);
      });
      axios.interceptors.response.use(function (response) {
        _this2.loading = false;
        return response;
      }, function (error) {
        _this2.loading = false;
        return Promise.reject(error);
      });
      axios.get("/api/v1/purposesetup").then(function (res) {
        _this2.setup.credential = res.data.credential;
        _this2.purposes = res.data.purposes;
        _this2.graduations = res.data.graduations;
        _this2.semesters = res.data.semesters;

        if (res.data.purpose_id) {
          _this2.setup.purpose_id = res.data.purpose_id.id;
        }

        if (res.data.semester_id) {
          _this2.setup.semester_id = res.data.semester_id.id;
        }

        if (res.data.graduation_id) {
          _this2.setup.graduation_id = res.data.graduation_id.id;
        }
      })["catch"](function (err) {
        console.log(err);
      });
    },
    save: function save() {
      var _this3 = this;

      axios.post("/api/v1/purposesetup", this.setup).then(function (res) {
        _this3.text = "Purpose Saved Successfully!";
        _this3.snackbarColor = "primary darken-1";
        _this3.snackbar = true;

        _this3.$router.push({
          path: "/student/active/clearance"
        });
      })["catch"](function (err) {
        console.dir(err);
        _this3.text = "Error Saving Purpose!";
        _this3.snackbarColor = "error darken-1";
        _this3.snackbar = true;
      });
    },
    updateEmail: function updateEmail() {
      var _this4 = this;

      this.loading = true;
      axios.post("/api/v1/emailChangeCreate", {
        email: this.editedItem.email
      }).then(function (result) {
        _this4.email = null;
        _this4.email_disabled = false;
        _this4.response = result.data;
        _this4.snackbar = true;
        _this4.text = result.data.message;
        _this4.snackbarColor = "success darken-1";
        _this4.loading = false;
        _this4.email_disabled = false;
        _this4.valid = false;
      }, function (error) {
        _this4.loading = false;
        console.error(error);
        _this4.success = "";
        _this4.snackbar = true;
        _this4.text = error.response.data.message;
      });
    },
    updatePassword: function updatePassword() {
      var _this5 = this;

      axios.post("/api/v1/changePassword", {
        password: this.editedItem.password
      }).then(function (res) {
        _this5.editedItem.password = "";
        _this5.editedItem.rpassword = "";
        _this5.password_disabled = false;
        _this5.text = "Password Updated Successfully!";
        _this5.snackbarColor = "primary darken-1";
        _this5.snackbar = true;
      })["catch"](function (err) {
        console.dir(err);
        _this5.text = "Error Updating Password!";
        _this5.snackbarColor = "error darken-1";
        _this5.snackbar = true;
      });
    }
  },
  props: {
    source: String
  },
  name: "App"
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/StudentSIASComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/student/StudentSIASComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
var _data$created$methods;



function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var gradients = [["#222"], ["#42b3f4"], ["red", "orange", "yellow"], ["purple", "violet"], ["#42b3f4", "#42b3f4", "#42b3f4"], ["#42b3f4", "#42b3f4", "#42b3f4"]];

var exhale = function exhale(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (_data$created$methods = {
  data: function data() {
    var _ref;

    return _ref = {
      e1: 1,
      e6: 1,
      dialog: false,
      completed: 0,
      totalStudent: 0,
      width: 2,
      radius: 10,
      padding: 8,
      lineCap: "round",
      gradient: gradients[5],
      value: [0, 2, 5, 9, 5, 10, 3, 5, 0, 0, 1, 8, 2, 9, 0],
      gradientDirection: "top",
      gradients: gradients,
      fill: false,
      type: "trend",
      autoLineWidth: false,
      checking: false,
      heartbeats: [],
      stats: []
    }, _defineProperty(_ref, "dialog", false), _defineProperty(_ref, "loading", false), _defineProperty(_ref, "headers", [{
      text: "No",
      align: "left",
      sortable: false,
      value: "no"
    }, {
      text: "Office",
      value: "office"
    }, {
      text: "Total Approved",
      value: "approved"
    }, {
      text: "Pending Request",
      value: "pending"
    }]), _defineProperty(_ref, "offices", [{
      no: 1,
      office: "Cashier(Goa Campus)",
      approved: 3308,
      pending: 16
    }, {
      no: 2,
      office: "Library(Goa Campus)",
      approved: 3292,
      pending: 0
    }, {
      no: 3,
      office: "OSAS(Goa Campus)",
      approved: 3291,
      pending: 0
    }, {
      no: 4,
      office: "Registrar(Goa Campus)",
      approved: 3048,
      pending: 112
    }, {
      no: 5,
      office: "Registrar(Goa Campus)",
      approved: 3048,
      pending: 112
    }]), _defineProperty(_ref, "editedIndex", -1), _defineProperty(_ref, "editedItem", {
      name: "",
      campus: "",
      fat: 0,
      carbs: 0,
      protein: 0
    }), _defineProperty(_ref, "account", {
      name: "",
      program: "",
      user_id: "",
      password: ""
    }), _defineProperty(_ref, "defaultItem", {
      name: "",
      campus: "",
      fat: 0,
      carbs: 0,
      protein: 0
    }), _ref;
  },
  created: function created() {
    this.takePulse(false);
  },
  methods: {
    heartbeat: function heartbeat() {
      return Math.ceil(Math.random() * (120 - 80) + 80);
    },
    takePulse: function takePulse() {
      var _arguments = arguments,
          _this = this;

      return _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var inhale;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                inhale = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : true;
                _this.checking = true;
                _context.t0 = inhale;

                if (!_context.t0) {
                  _context.next = 6;
                  break;
                }

                _context.next = 6;
                return exhale(1000);

              case 6:
                _this.heartbeats = Array.from({
                  length: 20
                }, _this.heartbeat);
                _this.checking = false;

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))();
    }
  },
  computed: {
    formTitle: function formTitle() {
      return this.editedIndex === -1 ? "New Item" : "Edit Item";
    },
    avg: function avg() {
      // const sum = this.heartbeats.reduce((acc, cur) => acc + cur, 0)
      // const length = this.heartbeats.length
      // if (!sum && !length) return 0
      // return Math.ceil(sum / length)
      return 5421;
    }
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  }
}, _defineProperty(_data$created$methods, "created", function created() {
  this.initialize();
}), _defineProperty(_data$created$methods, "methods", {
  initialize: function initialize() {
    var _this2 = this;

    this.colleges = [], axios.interceptors.request.use(function (config) {
      _this2.loading = true;
      return config;
    }, function (error) {
      _this2.loading = false;
      return Promise.reject(error);
    });
    axios.interceptors.response.use(function (response) {
      _this2.loading = false;
      return response;
    }, function (error) {
      _this2.loading = false;
      return Promise.reject(error);
    });
    axios.get("/api/v1/mysiasaccounts").then(function (response) {
      //Then injecting the result to datatable parameters.
      _this2.account = response.data.account;
    });
  }
}), _data$created$methods);

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/AdminLayout.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/layout/AdminLayout.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _OSCSNavigationDrawer_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OSCSNavigationDrawer.vue */ "./resources/js/shared/layout/OSCSNavigationDrawer.vue");
/* harmony import */ var _OSCSAppBar_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OSCSAppBar.vue */ "./resources/js/shared/layout/OSCSAppBar.vue");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  components: {
    OSCSNavigationDrawer: _OSCSNavigationDrawer_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
    OSCSAppBar: _OSCSAppBar_vue__WEBPACK_IMPORTED_MODULE_1__["default"]
  },
  data: function data() {
    return {
      dialog: false,
      menu: false,
      drawer: null,
      user: '',
      role: '',
      scrollOptions: {
        height: '100%'
      },
      navigationList: [// {
      //   icon: "mdi-view-dashboard",
      //   text: "Dashboard",
      //   link: "/admin/dashboard",
      // },
      {
        icon: "mdi-account-multiple-plus",
        text: "Student List",
        link: "/admin/student/list"
      }, //  {
      //   icon: "mdi-clipboard-list",
      //   text: "SIAS Accounts",
      //   link: "/admin/sias/account",
      // },
      {
        icon: "mdi-video-input-component",
        "icon-alt": "mdi-chevron-down",
        text: "Admin Setup",
        model: false,
        children: [{
          text: "Campuses",
          link: "/admin/campuses"
        }, {
          text: "Colleges",
          link: "/admin/colleges"
        }, {
          text: "Programs",
          link: "/admin/programs"
        }, {
          text: "Sections",
          link: "/admin/sections"
        }, {
          text: "Semester",
          link: "/admin/semesters"
        }, {
          text: "Graduation Schedule",
          link: "/admin/graduations"
        }, {
          text: "Purposes",
          link: "/admin/purposes"
        }]
      }, {
        icon: "mdi-account-settings",
        "icon-alt": "mdi-chevron-down",
        text: "Signatories",
        model: false,
        children: [{
          text: "Staff",
          link: "/admin/staff"
        }, {
          text: "Student Council",
          link: "/admin/stcouncils"
        }, {
          text: "Program Director",
          link: "/admin/programdirector"
        }, {
          text: "Dean",
          link: "/admin/deans"
        }, {
          text: "OSAS",
          link: "/admin/osas"
        }, {
          text: "Library",
          link: "/admin/library"
        }, {
          text: "Cashier",
          link: "/admin/cashiers"
        }, {
          text: "Registrar",
          link: "/admin/registrar"
        }]
      }, {
        icon: "mdi-clipboard-list",
        text: "Clearance Requests",
        link: "/admin/clearance/requests"
      }, {
        icon: "mdi-account-check",
        text: "Cleared Student Clearances",
        link: "/admin/cleared/clearances"
      }, {
        icon: "mdi-send-circle",
        text: "Submitted Clearances",
        link: "/admin/submitted/clearances"
      }, // {
      //   icon: "mdi-clipboard-check",
      //   text: "Active Clearance",
      //   link: "/admin/active/clearance",
      // },
      // {
      //   icon: "mdi-clipboard-text",
      //   text: "Clearance List",
      //   link: "/admin/clearance/list",
      // },
      {
        icon: "mdi-history",
        text: "List of Deficiency",
        link: "/admin/deficiency/list"
      }, {
        icon: "mdi-account-group-outline",
        text: "User Accounts",
        link: "/admin/users"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/admin/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  methods: {
    openDrawer: function openDrawer() {
      this.drawer = !this.drawer;
    }
  },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/OSCSAppBar.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/layout/OSCSAppBar.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    openDrawer: null
  },
  data: function data() {
    return {
      dialog: false,
      menu: false,
      drawer: null,
      user: "",
      role: ""
    };
  },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    }
  },
  methods: {
    logout: function logout() {
      var _this = this;

      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this.$router.push("/login");
      });
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    source: String,
    drawer: null,
    navigationList: ''
  },
  data: function data() {
    return {
      dialog: false,
      menu: false,
      user: '',
      role: '',
      scrollOptions: {
        height: '100%'
      }
    };
  },
  created: function created() {
    var _this = this;

    axios.interceptors.response.use(function (response) {
      return response;
    }, function (error) {
      if (error.response.status !== 419) return Promise.reject(error);
      window.location.reload();
    });
    axios.defaults.headers['Authorization'] = "Bearer " + localStorage.getItem("token"); // this.$store.dispatch('currentUser/getUser');

    axios.get('/api/v1/getUser').then(function (res) {
      _this.user = res.data.user;
      _this.role = res.data.role.role;
    });
  },
  methods: {
    logout: function logout() {
      var _this2 = this;

      axios.post('logout').then(function (resposnse) {
        localStorage.removeItem('token');

        _this2.$router.push("/login");
      });
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/SignatoryLayout.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/layout/SignatoryLayout.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _OSCSNavigationDrawer_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OSCSNavigationDrawer.vue */ "./resources/js/shared/layout/OSCSNavigationDrawer.vue");
/* harmony import */ var _OSCSAppBar_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OSCSAppBar.vue */ "./resources/js/shared/layout/OSCSAppBar.vue");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  components: {
    OSCSNavigationDrawer: _OSCSNavigationDrawer_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
    OSCSAppBar: _OSCSAppBar_vue__WEBPACK_IMPORTED_MODULE_1__["default"]
  },
  data: function data() {
    return {
      dialog: false,
      menu: false,
      drawer: null,
      user: '',
      role: '',
      scrollOptions: {
        height: '100%'
      },
      navigationList: []
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  methods: {
    openDrawer: function openDrawer() {
      this.drawer = !this.drawer;
    }
  },
  mounted: function mounted() {
    var _this = this;

    axios.get('/api/v1/verify').then(function (res) {
      if (res.data.user_role.role.name == "cashier") {
        _this.navigationList = [{
          icon: "mdi-clipboard-list",
          text: "Clearance Requests",
          link: "/cashier/clearance/requests"
        }, {
          icon: "mdi-history",
          text: "Student Deficiencies",
          link: "/cashier/deficiency/list"
        }, {
          icon: "mdi-account-check",
          text: "Approved Requests",
          link: "/cashier/cleared/clearances"
        }, {
          icon: "mdi-send-circle",
          text: "Submitted Clearances",
          link: "/cashier/submitted/clearances"
        }, {
          icon: "mdi-account-multiple",
          text: "Student List",
          link: "/cashier/student/list"
        }, {
          icon: "mdi-cog",
          text: "Settings",
          link: "/cashier/settings"
        }];
      } else if (res.data.user_role.role.name == "pd") {
        _this.navigationList = [{
          icon: "mdi-clipboard-list",
          text: "Clearance Requests",
          link: "/pd/clearance/requests"
        }, {
          icon: "mdi-history",
          text: "Student Deficiencies",
          link: "/pd/deficiency/list"
        }, {
          icon: "mdi-account-check",
          text: "Approved Requests",
          link: "/pd/cleared/clearances"
        }, {
          icon: "mdi-send-circle",
          text: "Submitted Clearances",
          link: "/pd/submitted/clearances"
        }, {
          icon: "mdi-account-multiple",
          text: "Student List",
          link: "/pd/student/list"
        }, {
          icon: "mdi-cog",
          text: "Settings",
          link: "/pd/settings"
        }];
      } else if (res.data.user_role.role.name == "stcouncil") {
        _this.navigationList = [{
          icon: "mdi-clipboard-list",
          text: "Clearance Requests",
          link: "/stcouncil/clearance/requests"
        }, {
          icon: "mdi-history",
          text: "Student Deficiencies",
          link: "/stcouncil/deficiency/list"
        }, {
          icon: "mdi-account-check",
          text: "Approved Requests",
          link: "/stcouncil/cleared/clearances"
        }, {
          icon: "mdi-send-circle",
          text: "Submitted Clearances",
          link: "/stcouncil/submitted/clearances"
        }, {
          icon: "mdi-account-multiple",
          text: "Student List",
          link: "/stcouncil/student/list"
        }, {
          icon: "mdi-cog",
          text: "Settings",
          link: "/stcouncil/settings"
        }];
      } else if (res.data.user_role.role.name == "registrarstaff") {
        _this.navigationList = [{
          icon: "mdi-clipboard-list",
          text: "Clearance Requests",
          link: "/registrarstaff/clearance/requests"
        }, {
          icon: "mdi-history",
          text: "Student Deficiencies",
          link: "/registrarstaff/deficiency/list"
        }, {
          icon: "mdi-account-check",
          text: "Approved Requests",
          link: "/registrarstaff/cleared/clearances"
        }, {
          icon: "mdi-send-circle",
          text: "Submitted Clearances",
          link: "/registrarstaff/submitted/clearances"
        }, {
          icon: "mdi-account-multiple",
          text: "Student List",
          link: "/registrarstaff/student/list"
        }, {
          icon: "mdi-cog",
          text: "Settings",
          link: "/registrarstaff/settings"
        }];
      } else if (res.data.user_role.role.name == "registrar") {
        _this.navigationList = [{
          icon: "mdi-clipboard-list",
          text: "Clearance Requests",
          link: "/registrar/clearance/requests"
        }, {
          icon: "mdi-history",
          text: "Student Deficiencies",
          link: "/registrar/deficiency/list"
        }, {
          icon: "mdi-account-check",
          text: "Approved Requests",
          link: "/registrar/cleared/clearances"
        }, {
          icon: "mdi-send-circle",
          text: "Submitted Clearances",
          link: "/registrar/submitted/clearances"
        }, {
          icon: "mdi-account-multiple",
          text: "Student List",
          link: "/registrar/student/list"
        }, {
          icon: "mdi-cog",
          text: "Settings",
          link: "/registrar/settings"
        }];
      } else if (res.data.user_role.role.name == "cashier") {
        _this.navigationList = [{
          icon: "mdi-clipboard-list",
          text: "Clearance Requests",
          link: "/cashier/clearance/requests"
        }, {
          icon: "mdi-history",
          text: "Student Deficiencies",
          link: "/cashier/deficiency/list"
        }, {
          icon: "mdi-account-check",
          text: "Approved Requests",
          link: "/cashier/cleared/clearances"
        }, {
          icon: "mdi-send-circle",
          text: "Submitted Clearances",
          link: "/cashier/submitted/clearances"
        }, {
          icon: "mdi-account-multiple",
          text: "Student List",
          link: "/cashier/student/list"
        }, {
          icon: "mdi-cog",
          text: "Settings",
          link: "/cashier/settings"
        }];
      } else if (res.data.user_role.role.name == "library") {
        _this.navigationList = [{
          icon: "mdi-clipboard-list",
          text: "Clearance Requests",
          link: "/library/clearance/requests"
        }, {
          icon: "mdi-history",
          text: "Student Deficiencies",
          link: "/library/deficiency/list"
        }, {
          icon: "mdi-account-check",
          text: "Approved Requests",
          link: "/library/cleared/clearances"
        }, {
          icon: "mdi-send-circle",
          text: "Submitted Clearances",
          link: "/library/submitted/clearances"
        }, {
          icon: "mdi-account-multiple",
          text: "Student List",
          link: "/library/student/list"
        }, {
          icon: "mdi-cog",
          text: "Settings",
          link: "/library/settings"
        }];
      } else if (res.data.user_role.role.name == "osas") {
        _this.navigationList = [{
          icon: "mdi-clipboard-list",
          text: "Clearance Requests",
          link: "/osas/clearance/requests"
        }, {
          icon: "mdi-history",
          text: "Student Deficiencies",
          link: "/osas/deficiency/list"
        }, {
          icon: "mdi-account-check",
          text: "Approved Requests",
          link: "/osas/cleared/clearances"
        }, {
          icon: "mdi-send-circle",
          text: "Submitted Clearances",
          link: "/osas/submitted/clearances"
        }, {
          icon: "mdi-account-multiple",
          text: "Student List",
          link: "/osas/student/list"
        }, {
          icon: "mdi-cog",
          text: "Settings",
          link: "/osas/settings"
        }];
      } else if (res.data.user_role.role.name == "dean") {
        _this.navigationList = [{
          icon: "mdi-clipboard-list",
          text: "Clearance Requests",
          link: "/dean/clearance/requests"
        }, {
          icon: "mdi-history",
          text: "Student Deficiencies",
          link: "/dean/deficiency/list"
        }, {
          icon: "mdi-account-check",
          text: "Approved Requests",
          link: "/dean/cleared/clearances"
        }, {
          icon: "mdi-send-circle",
          text: "Submitted Clearances",
          link: "/dean/submitted/clearances"
        }, {
          icon: "mdi-account-multiple",
          text: "Student List",
          link: "/dean/student/list"
        }, {
          icon: "mdi-cog",
          text: "Settings",
          link: "/dean/settings"
        }];
      }
    })["catch"](function (err) {});
  },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/StudentLayout.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/layout/StudentLayout.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _OSCSNavigationDrawer_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OSCSNavigationDrawer.vue */ "./resources/js/shared/layout/OSCSNavigationDrawer.vue");
/* harmony import */ var _OSCSAppBar_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OSCSAppBar.vue */ "./resources/js/shared/layout/OSCSAppBar.vue");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["default"] = ({
  name: "main-app",
  props: {
    source: String
  },
  components: {
    OSCSNavigationDrawer: _OSCSNavigationDrawer_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
    OSCSAppBar: _OSCSAppBar_vue__WEBPACK_IMPORTED_MODULE_1__["default"]
  },
  data: function data() {
    return {
      dialog: false,
      menu: false,
      drawer: null,
      user: '',
      role: '',
      scrollOptions: {
        height: '100%'
      },
      navigationList: [{
        icon: "mdi-home-assistant",
        text: "Active Clearance",
        link: "/student/active/clearance"
      }, {
        icon: "mdi-text-box-outline",
        text: "Clearance List",
        link: "/student/clearance/list"
      }, {
        icon: "mdi-text-box-remove-outline",
        text: "List of Deficiency",
        link: "/student/deficiency/list"
      }, {
        icon: "mdi-cog",
        text: "Settings",
        link: "/student/settings"
      }]
    };
  },
  watch: {
    dialog: function dialog(val) {
      val || this.close();
    }
  },
  methods: {
    openDrawer: function openDrawer() {
      this.drawer = !this.drawer;
    }
  },
  computed: {
    currentRouteName: function currentRouteName() {
      return this.$route.name;
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ __webpack_exports__["default"] = ({
  data: function data() {
    return {
      downloadLoading: false,
      submitLoading: false,
      student_name: '',
      clearance_id: '',
      deficiency_designee: "",
      deficiencyheaders: [{
        text: "Deficiency",
        value: "title"
      }, {
        text: "Note",
        value: "note"
      }, {
        text: "Status",
        value: "completed"
      }],
      deficiencies: [],
      deficiencySignatory: "",
      deficiencydialog: false,
      signatoriesList: [],
      countApproved: 0,
      countSignatory: 0,
      purpose: '',
      isOpen: false,
      isSubmitted: false,
      dateSubmitted: '',
      isPurposeSetup: null,
      expanded: [],
      singleExpand: false,
      tableHeaders: [{
        text: 'Designee',
        value: 'designee'
      }, {
        text: 'Office',
        value: 'office'
      }, {
        text: 'Status',
        value: 'clearance_request_status'
      }, {
        text: 'Action',
        value: 'actions'
      } // { text: '', value: 'data-table-expand' },
      ]
    };
  },
  computed: {},
  methods: {
    submitClearance: function submitClearance() {
      var _this = this;

      this.submitLoading = true;
      axios.post("/api/v1/active-clearance/submit", {
        clearance_id: this.clearance_id
      }).then(function (res) {
        _this.isSubmitted = res.data.isSubmitted;
        _this.dateSubmitted = res.data.dateSubmitted;
        _this.submitLoading = false;
      })["catch"](function (err) {
        console.error(err);
        _this.submitLoading = false;
      });
    },
    generatePDF: function generatePDF() {
      var _this2 = this;

      if (this.countApproved == this.countSignatory && this.countApproved != 0 && this.countSignatory != 0) {
        this.downloadLoading = true;
        axios.get('/api/v1/active-clearance/pdf', {
          responseType: 'blob',
          params: {
            'clearance_id': this.clearance_id
          }
        }).then(function (response) {
          _this2.student_name = _this2.student_name.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "_"); // Replaces all spaces with hyphens.

          _this2.student_name = _this2.student_name.replace(/ +(?= )/g, "");
          var fileURL = window.URL.createObjectURL(new Blob([response.data], {
            type: 'application/pdf'
          }));
          var fileLink = document.createElement('a');
          fileLink.href = fileURL;
          fileLink.setAttribute('download', _this2.student_name + '-' + _this2.clearance_id + '.pdf');
          document.body.appendChild(fileLink);
          fileLink.click();
          _this2.downloadLoading = false;
        });
      }
    },
    viewDeficiency: function viewDeficiency(item) {
      this.deficiencydialog = true;
      this.deficiency_designee = item.designee;
      this.deficiencies = Object.assign({}, item.defieciencyList);
    },
    signatories: function signatories() {
      var _this3 = this;

      axios.get("/api/v1/active-clearance").then(function (response) {
        _this3.signatoriesList = response.data.signatories;
        _this3.countApproved = response.data.countApproved;
        _this3.countSignatory = response.data.countSignatory;
        _this3.purpose = response.data.purpose;
        _this3.isOpen = response.data.isOpen;
        _this3.isSubmitted = response.data.isSubmitted;
        _this3.dateSubmitted = response.data.dateSubmitted;
        _this3.isPurposeSetup = response.data.isPurposeSetup;
        _this3.clearance_id = response.data.clearance_id;
        _this3.student_name = response.data.student_name;
      });
    },
    sendRequest: function sendRequest(item) {
      var _this4 = this;

      item.loadingBtn = true;
      console.log(item.loadingBtn);
      this.submitRequestItem = Object.assign({}, item);
      axios.post("/api/v1/active-clearance/send-request", this.submitRequestItem).then(function (res) {
        item.loadingBtn = false;
        _this4.signatoriesList = res.data.signatories;
        _this4.countApproved = response.data.countApproved;
        _this4.countSignatory = response.data.countSignatory;
      })["catch"](function (err) {
        console.error(err);
        item.loadingBtn = false;
      });
    }
  },
  created: function created() {
    this.signatories();
  }
});

/***/ }),

/***/ "./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/login/LoginComponent.vue?vue&type=style&index=0&lang=css&":
/*!**************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--6-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-2!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/login/LoginComponent.vue?vue&type=style&index=0&lang=css& ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n#logo {\r\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\n}\r\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/style-loader/index.js!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/login/LoginComponent.vue?vue&type=style&index=0&lang=css&":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader!./node_modules/css-loader??ref--6-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-2!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/login/LoginComponent.vue?vue&type=style&index=0&lang=css& ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../../node_modules/css-loader??ref--6-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src??ref--6-2!../../../../node_modules/vue-loader/lib??vue-loader-options!./LoginComponent.vue?vue&type=style&index=0&lang=css& */ "./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/login/LoginComponent.vue?vue&type=style&index=0&lang=css&");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/charts/ApexBarChart.vue?vue&type=template&id=123211d9&":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/charts/ApexBarChart.vue?vue&type=template&id=123211d9& ***!
  \***********************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "ma-0 pb-0" },
    [
      _c("apexchart", {
        attrs: {
          width: "300",
          type: "donut",
          options: _vm.chartOptions,
          series: _vm.series,
        },
      }),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponent.vue?vue&type=template&id=50ee3cd2&":
/*!***************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ActiveClearanceComponent.vue?vue&type=template&id=50ee3cd2& ***!
  \***************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("OSCSACctiveClearaneTable")
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=template&id=43052e16&":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=template&id=43052e16& ***!
  \******************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    { staticStyle: { "margin-bottom": "36px" } },
    [
      (!_vm.submittedClearance &&
        _vm.clearance.student_council == true &&
        _vm.clearance.cashier == true &&
        _vm.clearance.library == true &&
        _vm.clearance.osas == true &&
        _vm.clearance.program_director == true &&
        _vm.clearance.college_deaan == true &&
        _vm.clearance.registrar == true) ||
      (_vm.clearance.adviser == true && _vm.clearance.principal == true)
        ? _c(
            "v-alert",
            {
              attrs: {
                border: "right",
                "colored-border": "",
                type: "info",
                elevation: "0",
              },
            },
            [
              _c("b", [_c("i", [_vm._v("Note:")])]),
              _vm._v(
                " To complete the proccess. Please click the submit button to send your clearance to the Office of the Registrar.\n   "
              ),
            ]
          )
        : _vm._e(),
      _vm._v(" "),
      _vm.submittedClearance
        ? _c(
            "v-alert",
            {
              attrs: {
                border: "right",
                "colored-border": "",
                type: "success",
                elevation: "0",
              },
            },
            [
              _c("b", [_c("i", [_vm._v("Note:")])]),
              _vm._v(
                " You have successfully submitted your clearance to the Office of the Registrar ("
              ),
              _c("i", [
                _vm._v(
                  " " +
                    _vm._s(
                      _vm._f("moment")(
                        _vm.submittedClearance.created_at,
                        "from",
                        "now"
                      )
                    ) +
                    " "
                ),
              ]),
              _vm._v(").\n"),
            ]
          )
        : _vm._e(),
      _vm._v(" "),
      [
        _c("span", { staticClass: "font-italic subtitle-2" }, [
          _vm._v("Status: "),
        ]),
        _vm._v(" "),
        _vm.submittedClearance
          ? _c(
              "v-chip",
              {
                staticStyle: { "margin-left": "4px" },
                attrs: {
                  "text-color": "white",
                  color: "success",
                  "x-small": "",
                },
              },
              [_vm._v("\n                Completed\n               ")]
            )
          : _c(
              "v-chip",
              {
                staticStyle: { "margin-left": "4px" },
                attrs: {
                  "text-color": "white",
                  color: _vm.stad ? "info" : "red",
                  "x-small": "",
                },
              },
              [
                _vm._v(
                  "\n                " +
                    _vm._s(_vm.stad ? "On-Going" : "Closed") +
                    "\n               "
                ),
              ]
            ),
        _vm._v(" "),
        (_vm.clearance.student_council == true &&
          _vm.clearance.cashier == true &&
          _vm.clearance.library == true &&
          _vm.clearance.osas == true &&
          _vm.clearance.program_director == true &&
          _vm.clearance.college_deaan == true &&
          _vm.clearance.registrar == true) ||
        (_vm.clearance.adviser == true && _vm.clearance.principal == true)
          ? _c(
              "v-btn",
              {
                staticClass: "elevation-0 error lighten-1",
                attrs: { small: "" },
                on: { click: _vm.generatePDF },
              },
              [
                _c("v-icon", [_vm._v("mdi-file-pdf")]),
                _vm._v("Generate Clearance"),
              ],
              1
            )
          : _vm._e(),
        _vm._v(" "),
        (!_vm.submittedClearance &&
          _vm.clearance.student_council == true &&
          _vm.clearance.cashier == true &&
          _vm.clearance.library == true &&
          _vm.clearance.osas == true &&
          _vm.clearance.program_director == true &&
          _vm.clearance.college_deaan == true &&
          _vm.clearance.registrar == true) ||
        (_vm.clearance.adviser == true && _vm.clearance.principal == true)
          ? _c(
              "v-btn",
              {
                staticClass: "elevation-0 success lighten-1",
                attrs: { small: "" },
                on: { click: _vm.submitClearance },
              },
              [
                _c("v-icon", [_vm._v("mdi-forward")]),
                _vm._v("Submit to the Registrar"),
              ],
              1
            )
          : _vm._e(),
      ],
      _vm._v(" "),
      _c("v-data-table", {
        staticClass: "elevation-1",
        staticStyle: { "padding-bottom": "60px", "margin-top": "20px" },
        attrs: {
          "item-key": "name",
          loading: _vm.loading,
          "loading-text": "Loading... Please wait",
          headers: _vm.headers,
          items: _vm.clearances,
          "sort-by": "name",
          color: "error",
          "hide-default-footer": "",
          "disable-sort": "",
        },
        scopedSlots: _vm._u(
          [
            {
              key: "top",
              fn: function () {
                return [
                  _c(
                    "v-toolbar",
                    { attrs: { flat: "", color: "white" } },
                    [
                      _c("div", { staticClass: "overline text-h6" }, [
                        _vm._v("\n           Active Clearance\n           "),
                        _c("span", { staticClass: "font-italic subtitle-2" }, [
                          _vm._v(
                            "( " + _vm._s(_vm.activeClearancePurpose) + " )"
                          ),
                        ]),
                      ]),
                      _vm._v(" "),
                      _c("v-spacer"),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("v-divider"),
                ]
              },
              proxy: true,
            },
            {
              key: "item.office",
              fn: function (ref) {
                var item = ref.item
                return [
                  _c("div", { staticClass: "font-weight-bold" }, [
                    _vm._v(_vm._s(item.office)),
                  ]),
                ]
              },
            },
            {
              key: "item.status",
              fn: function (ref) {
                var item = ref.item
                return [
                  item.status == 1
                    ? [
                        _c(
                          "v-chip",
                          {
                            attrs: {
                              "text-color": "white",
                              color: "success",
                              small: "",
                            },
                          },
                          [
                            _c(
                              "v-avatar",
                              { attrs: { left: "" } },
                              [
                                _c("v-icon", { attrs: { small: "" } }, [
                                  _vm._v("mdi-check-circle"),
                                ]),
                              ],
                              1
                            ),
                            _vm._v(
                              "\n           Approved on " +
                                _vm._s(item.data_approved) +
                                "\n         "
                            ),
                          ],
                          1
                        ),
                      ]
                    : item.status == 0 || (item.status == 2 && item.designee)
                    ? [
                        item.clearanceRequestCount == 1
                          ? [
                              item.status != 2
                                ? _c(
                                    "v-chip",
                                    {
                                      attrs: {
                                        "text-color": "white",
                                        color: "cyan",
                                        small: "",
                                      },
                                    },
                                    [
                                      _c(
                                        "v-avatar",
                                        { attrs: { left: "" } },
                                        [
                                          _c(
                                            "v-icon",
                                            { attrs: { small: "" } },
                                            [_vm._v("mdi-information")]
                                          ),
                                        ],
                                        1
                                      ),
                                      _vm._v(
                                        "\n             Pending for Approval\n           "
                                      ),
                                    ],
                                    1
                                  )
                                : _vm._e(),
                              _vm._v(" "),
                              item.deficiencyCount != 0
                                ? [
                                    _c(
                                      "v-chip",
                                      {
                                        attrs: {
                                          "text-color": "white",
                                          color: "error lighten-1",
                                          small: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            return _vm.viewDeficiency(item)
                                          },
                                        },
                                      },
                                      [
                                        _c(
                                          "v-avatar",
                                          { attrs: { left: "" } },
                                          [
                                            _c(
                                              "v-icon",
                                              { attrs: { small: "" } },
                                              [_vm._v("mdi-clipboard-alert")]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(
                                          "\n               With Deficiency\n             "
                                        ),
                                      ],
                                      1
                                    ),
                                  ]
                                : _vm._e(),
                            ]
                          : _vm._e(),
                        _vm._v(" "),
                        item.clearanceRequestCount == 0
                          ? [
                              item.deficiencyCount == 0
                                ? [
                                    _c(
                                      "v-chip",
                                      {
                                        attrs: {
                                          "text-color": "white",
                                          color: "blue-grey lighten-1",
                                          small: "",
                                        },
                                      },
                                      [
                                        _vm._v(
                                          "\n               No deficiency\n             "
                                        ),
                                      ]
                                    ),
                                  ]
                                : [
                                    _c(
                                      "v-chip",
                                      {
                                        attrs: {
                                          "text-color": "white",
                                          color: "error lighten-1",
                                          small: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            _vm.deficiencydialog = true
                                          },
                                        },
                                      },
                                      [
                                        _c(
                                          "v-avatar",
                                          { attrs: { left: "" } },
                                          [
                                            _c(
                                              "v-icon",
                                              { attrs: { small: "" } },
                                              [_vm._v("mdi-clipboard-alert")]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(
                                          "\n               With Deficiency\n             "
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                            ]
                          : _vm._e(),
                      ]
                    : _vm._e(),
                ]
              },
            },
            _vm.stad
              ? {
                  key: "item.actions",
                  fn: function (ref) {
                    var item = ref.item
                    return [
                      item.status == 0 && item.designee
                        ? [
                            item.clearanceRequestCount == 0
                              ? [
                                  _c(
                                    "v-btn",
                                    {
                                      staticClass: "ma-2",
                                      attrs: {
                                        color: "primary",
                                        depressed: "",
                                        small: "",
                                      },
                                      on: {
                                        click: function ($event) {
                                          return _vm.sendRequest(item)
                                        },
                                      },
                                    },
                                    [_vm._v("Click to Request Clearance")]
                                  ),
                                ]
                              : [
                                  item.deficiencyCount != 0
                                    ? [
                                        _c(
                                          "v-btn",
                                          {
                                            staticClass: "ma-2",
                                            attrs: {
                                              color: "error",
                                              depressed: "",
                                              small: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                return _vm.viewDeficiency(item)
                                              },
                                            },
                                          },
                                          [_vm._v("View Deficiency")]
                                        ),
                                      ]
                                    : _vm._e(),
                                ],
                          ]
                        : _vm._e(),
                    ]
                  },
                }
              : {
                  key: "item.actions",
                  fn: function (ref) {
                    var item = ref.item
                    return [
                      _c(
                        "v-btn",
                        {
                          staticClass: "ma-2",
                          attrs: {
                            color: "red",
                            depressed: "",
                            small: "",
                            text: "",
                          },
                        },
                        [_vm._v("Request for Clearance is Closed")]
                      ),
                    ]
                  },
                },
          ],
          null,
          true
        ),
      }),
      _vm._v(" "),
      _c("v-divider"),
      _vm._v(" "),
      _c(
        "v-dialog",
        {
          attrs: { scrollable: "", "max-width": "500px" },
          model: {
            value: _vm.deficiencydialog,
            callback: function ($$v) {
              _vm.deficiencydialog = $$v
            },
            expression: "deficiencydialog",
          },
        },
        [
          _c(
            "v-card",
            [
              _c("v-card-title", { staticClass: "headline" }, [
                _vm._v("Deficiency List\n         "),
                _c("span", { staticClass: "font-italic subtitle-2" }, [
                  _vm._v(
                    "\n           (From: " +
                      _vm._s(_vm.deficiency_designee) +
                      ")"
                  ),
                ]),
              ]),
              _vm._v(" "),
              _c("v-divider"),
              _vm._v(" "),
              _c(
                "v-card-text",
                { staticStyle: { height: "300px" } },
                [
                  _c(
                    "v-list",
                    { attrs: { subheader: "", "two-line": "" } },
                    [
                      _vm._l(_vm.deficiencies, function (deficiency) {
                        return _c(
                          "v-list-item",
                          { key: deficiency.title },
                          [
                            _c(
                              "v-list-item-avatar",
                              [
                                deficiency.completed
                                  ? _c(
                                      "v-icon",
                                      {
                                        staticClass: "success lighten-1",
                                        attrs: { dark: "" },
                                      },
                                      [_vm._v(" mdi-check ")]
                                    )
                                  : _c(
                                      "v-icon",
                                      {
                                        staticClass: "error lighten-1",
                                        attrs: { dark: "" },
                                      },
                                      [_vm._v(" mdi-alert ")]
                                    ),
                              ],
                              1
                            ),
                            _vm._v(" "),
                            _c(
                              "v-list-item-content",
                              [
                                _c(
                                  "v-list-item-title",
                                  {
                                    staticClass: "small",
                                    attrs: { small: "" },
                                  },
                                  [_vm._v(_vm._s(deficiency.title))]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-list-item-subtitle",
                                  {
                                    staticClass: "subtitle-2",
                                    attrs: { small: "" },
                                  },
                                  [_vm._v("*" + _vm._s(deficiency.note))]
                                ),
                                _vm._v(" "),
                                _c("v-list-item-subtitle"),
                              ],
                              1
                            ),
                            _vm._v(" "),
                            _c(
                              "v-list-item-action",
                              [
                                _c("v-list-item-action-text", [
                                  _vm._v(
                                    _vm._s(
                                      _vm._f("moment")(
                                        deficiency.updated_at,
                                        "from",
                                        "now"
                                      )
                                    )
                                  ),
                                ]),
                                _vm._v(" "),
                                deficiency.completed
                                  ? _c(
                                      "v-chip",
                                      {
                                        attrs: {
                                          "text-color": "white",
                                          color: "success",
                                          "x-small": "",
                                        },
                                      },
                                      [
                                        _vm._v(
                                          "\n                 Completed\n               "
                                        ),
                                      ]
                                    )
                                  : _c(
                                      "v-chip",
                                      {
                                        attrs: {
                                          "text-color": "white",
                                          color: "warning",
                                          "x-small": "",
                                        },
                                      },
                                      [
                                        _vm._v(
                                          "\n                 Pending\n               "
                                        ),
                                      ]
                                    ),
                              ],
                              1
                            ),
                          ],
                          1
                        )
                      }),
                      _vm._v(" "),
                      _c("v-divider"),
                    ],
                    2
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c("v-divider"),
              _vm._v(" "),
              _c(
                "v-card-actions",
                [
                  _c("v-spacer"),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "green darken-1", text: "" },
                      on: {
                        click: function ($event) {
                          _vm.deficiencydialog = false
                        },
                      },
                    },
                    [_vm._v("Close")]
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-snackbar",
        {
          attrs: { bottom: "" },
          model: {
            value: _vm.snackbar,
            callback: function ($$v) {
              _vm.snackbar = $$v
            },
            expression: "snackbar",
          },
        },
        [
          _vm._v("\n     " + _vm._s(_vm.text) + "\n\n     "),
          _c(
            "v-btn",
            {
              attrs: { color: "pink", text: "" },
              on: {
                click: function ($event) {
                  _vm.snackbar = false
                },
              },
            },
            [_vm._v(" Close ")]
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-dialog",
        {
          attrs: { persistent: "", "max-width": "300" },
          model: {
            value: _vm.dialog,
            callback: function ($$v) {
              _vm.dialog = $$v
            },
            expression: "dialog",
          },
        },
        [
          _c(
            "v-card",
            [
              _c("v-card-title", { staticClass: "headline" }, [
                _vm._v("\n         Send this Clearance Request?\n       "),
              ]),
              _vm._v(" "),
              _c(
                "v-card-actions",
                [
                  _c("v-spacer"),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "green darken-1", text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v("\n           Cancel\n         ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "green darken-1", text: "" },
                      on: {
                        click: function ($event) {
                          return _vm.approve()
                        },
                      },
                    },
                    [_vm._v("\n           Approve\n         ")]
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    2
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=template&id=4f142f1d&":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=template&id=4f142f1d& ***!
  \******************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.purposeVal
    ? _c(
        "v-sheet",
        { staticStyle: { "margin-bottom": "36px" } },
        [
          (!_vm.submittedClearance &&
            _vm.clearance.cashier == true &&
            _vm.clearance.library == true &&
            _vm.clearance.osas == true &&
            _vm.clearance.program_director == true &&
            _vm.clearance.college_deaan == true &&
            _vm.clearance.registrar == true) ||
          (_vm.clearance.adviser == true && _vm.clearance.principal == true)
            ? _c(
                "v-alert",
                {
                  attrs: {
                    border: "right",
                    "colored-border": "",
                    type: "info",
                    elevation: "0",
                  },
                },
                [
                  _c("b", [_c("i", [_vm._v("Note:")])]),
                  _vm._v(
                    " To complete the proccess. Please click the submit button to send your clearance to the Office of the Registrar.\n   "
                  ),
                ]
              )
            : _vm._e(),
          _vm._v(" "),
          _vm.submittedClearance
            ? _c(
                "v-alert",
                {
                  attrs: {
                    border: "right",
                    "colored-border": "",
                    type: "success",
                    elevation: "0",
                  },
                },
                [
                  _c("b", [_c("i", [_vm._v("Note:")])]),
                  _vm._v(
                    " You have successfully submitted your clearance to the Office of the Registrar ("
                  ),
                  _c("i", [
                    _vm._v(
                      " " +
                        _vm._s(
                          _vm._f("moment")(
                            _vm.submittedClearance.created_at,
                            "from",
                            "now"
                          )
                        ) +
                        " "
                    ),
                  ]),
                  _vm._v(").\n"),
                ]
              )
            : _vm._e(),
          _vm._v(" "),
          [
            _c("span", { staticClass: "font-italic subtitle-2" }, [
              _vm._v("Status: "),
            ]),
            _vm._v(" "),
            _vm.submittedClearance
              ? _c(
                  "v-chip",
                  {
                    staticStyle: { "margin-left": "4px" },
                    attrs: {
                      "text-color": "white",
                      color: "success",
                      "x-small": "",
                    },
                  },
                  [_vm._v("\n                Completed\n               ")]
                )
              : _c(
                  "v-chip",
                  {
                    staticStyle: { "margin-left": "4px" },
                    attrs: {
                      "text-color": "white",
                      color: _vm.stad ? "info" : "red",
                      "x-small": "",
                    },
                  },
                  [
                    _vm._v(
                      "\n                " +
                        _vm._s(_vm.stad ? "On-Going" : "Closed") +
                        "\n               "
                    ),
                  ]
                ),
            _vm._v(" "),
            (_vm.clearance.cashier == true &&
              _vm.clearance.library == true &&
              _vm.clearance.osas == true &&
              _vm.clearance.program_director == true &&
              _vm.clearance.college_deaan == true &&
              _vm.clearance.registrar == true) ||
            (_vm.clearance.adviser == true && _vm.clearance.principal == true)
              ? _c(
                  "v-btn",
                  {
                    staticClass: "elevation-0 error lighten-1",
                    attrs: { small: "" },
                    on: { click: _vm.generatePDF },
                  },
                  [
                    _c("v-icon", [_vm._v("mdi-file-pdf")]),
                    _vm._v("Generate Clearance"),
                  ],
                  1
                )
              : _vm._e(),
            _vm._v(" "),
            (!_vm.submittedClearance &&
              _vm.clearance.cashier == true &&
              _vm.clearance.library == true &&
              _vm.clearance.osas == true &&
              _vm.clearance.program_director == true &&
              _vm.clearance.college_deaan == true &&
              _vm.clearance.registrar == true) ||
            (_vm.clearance.adviser == true && _vm.clearance.principal == true)
              ? _c(
                  "v-btn",
                  {
                    staticClass: "elevation-0 success lighten-1",
                    attrs: { small: "" },
                    on: { click: _vm.submitClearance },
                  },
                  [
                    _c("v-icon", [_vm._v("mdi-forward")]),
                    _vm._v("Submit to the Registrar"),
                  ],
                  1
                )
              : _vm._e(),
          ],
          _vm._v(" "),
          _c("v-data-table", {
            staticClass: "elevation-1",
            staticStyle: { "padding-bottom": "60px", "margin-top": "20px" },
            attrs: {
              "item-key": "name",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              items: _vm.clearances,
              "sort-by": "name",
              color: "error",
              "hide-default-footer": "",
              "disable-sort": "",
            },
            scopedSlots: _vm._u(
              [
                {
                  key: "top",
                  fn: function () {
                    return [
                      _c(
                        "v-toolbar",
                        { attrs: { flat: "", color: "white" } },
                        [
                          _c("div", { staticClass: "overline text-h6" }, [
                            _vm._v(
                              "\n           Active Clearance\n           "
                            ),
                            _c(
                              "span",
                              { staticClass: "font-italic subtitle-2" },
                              [
                                _vm._v(
                                  "( " +
                                    _vm._s(_vm.activeClearancePurpose) +
                                    " )"
                                ),
                              ]
                            ),
                          ]),
                          _vm._v(" "),
                          _c("v-spacer"),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("v-divider"),
                    ]
                  },
                  proxy: true,
                },
                {
                  key: "item.office",
                  fn: function (ref) {
                    var item = ref.item
                    return [
                      _c("div", { staticClass: "font-weight-bold" }, [
                        _vm._v(_vm._s(item.office)),
                      ]),
                    ]
                  },
                },
                {
                  key: "item.status",
                  fn: function (ref) {
                    var item = ref.item
                    return [
                      item.status == 1
                        ? [
                            _c(
                              "v-chip",
                              {
                                attrs: {
                                  "text-color": "white",
                                  color: "success",
                                  small: "",
                                },
                              },
                              [
                                _c(
                                  "v-avatar",
                                  { attrs: { left: "" } },
                                  [
                                    _c("v-icon", { attrs: { small: "" } }, [
                                      _vm._v("mdi-check-circle"),
                                    ]),
                                  ],
                                  1
                                ),
                                _vm._v(
                                  "\n           Approved on " +
                                    _vm._s(item.data_approved) +
                                    "\n         "
                                ),
                              ],
                              1
                            ),
                          ]
                        : item.status == 0 ||
                          (item.status == 2 && item.designee)
                        ? [
                            item.clearanceRequestCount == 1
                              ? [
                                  item.status != 2
                                    ? _c(
                                        "v-chip",
                                        {
                                          attrs: {
                                            "text-color": "white",
                                            color: "cyan",
                                            small: "",
                                          },
                                        },
                                        [
                                          _c(
                                            "v-avatar",
                                            { attrs: { left: "" } },
                                            [
                                              _c(
                                                "v-icon",
                                                { attrs: { small: "" } },
                                                [_vm._v("mdi-information")]
                                              ),
                                            ],
                                            1
                                          ),
                                          _vm._v(
                                            "\n             Pending for Approval\n           "
                                          ),
                                        ],
                                        1
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  item.deficiencyCount != 0
                                    ? [
                                        _c(
                                          "v-chip",
                                          {
                                            attrs: {
                                              "text-color": "white",
                                              color: "error lighten-1",
                                              small: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                return _vm.viewDeficiency(item)
                                              },
                                            },
                                          },
                                          [
                                            _c(
                                              "v-avatar",
                                              { attrs: { left: "" } },
                                              [
                                                _c(
                                                  "v-icon",
                                                  { attrs: { small: "" } },
                                                  [
                                                    _vm._v(
                                                      "mdi-clipboard-alert"
                                                    ),
                                                  ]
                                                ),
                                              ],
                                              1
                                            ),
                                            _vm._v(
                                              "\n               With Deficiency\n             "
                                            ),
                                          ],
                                          1
                                        ),
                                      ]
                                    : _vm._e(),
                                ]
                              : _vm._e(),
                            _vm._v(" "),
                            item.clearanceRequestCount == 0
                              ? [
                                  item.deficiencyCount == 0
                                    ? [
                                        _c(
                                          "v-chip",
                                          {
                                            attrs: {
                                              "text-color": "white",
                                              color: "blue-grey lighten-1",
                                              small: "",
                                            },
                                          },
                                          [
                                            _vm._v(
                                              "\n               No deficiency\n             "
                                            ),
                                          ]
                                        ),
                                      ]
                                    : [
                                        _c(
                                          "v-chip",
                                          {
                                            attrs: {
                                              "text-color": "white",
                                              color: "error lighten-1",
                                              small: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                _vm.deficiencydialog = true
                                              },
                                            },
                                          },
                                          [
                                            _c(
                                              "v-avatar",
                                              { attrs: { left: "" } },
                                              [
                                                _c(
                                                  "v-icon",
                                                  { attrs: { small: "" } },
                                                  [
                                                    _vm._v(
                                                      "mdi-clipboard-alert"
                                                    ),
                                                  ]
                                                ),
                                              ],
                                              1
                                            ),
                                            _vm._v(
                                              "\n               With Deficiency\n             "
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                ]
                              : _vm._e(),
                          ]
                        : _vm._e(),
                    ]
                  },
                },
                _vm.stad
                  ? {
                      key: "item.actions",
                      fn: function (ref) {
                        var item = ref.item
                        return [
                          item.status == 0 && item.designee
                            ? [
                                item.clearanceRequestCount == 0
                                  ? [
                                      _c(
                                        "v-btn",
                                        {
                                          staticClass: "ma-2",
                                          attrs: {
                                            color: "primary",
                                            depressed: "",
                                            small: "",
                                          },
                                          on: {
                                            click: function ($event) {
                                              return _vm.sendRequest(item)
                                            },
                                          },
                                        },
                                        [_vm._v("Click to Request Clearance")]
                                      ),
                                    ]
                                  : [
                                      item.deficiencyCount != 0
                                        ? [
                                            _c(
                                              "v-btn",
                                              {
                                                staticClass: "ma-2",
                                                attrs: {
                                                  color: "error",
                                                  depressed: "",
                                                  small: "",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    return _vm.viewDeficiency(
                                                      item
                                                    )
                                                  },
                                                },
                                              },
                                              [_vm._v("View Deficiency")]
                                            ),
                                          ]
                                        : _vm._e(),
                                    ],
                              ]
                            : _vm._e(),
                        ]
                      },
                    }
                  : {
                      key: "item.actions",
                      fn: function (ref) {
                        var item = ref.item
                        return [
                          _c(
                            "v-btn",
                            {
                              staticClass: "ma-2",
                              attrs: {
                                color: "red",
                                depressed: "",
                                small: "",
                                text: "",
                              },
                            },
                            [_vm._v("Request for Clearance is Closed")]
                          ),
                        ]
                      },
                    },
              ],
              null,
              true
            ),
          }),
          _vm._v(" "),
          _c("v-divider"),
          _vm._v(" "),
          _c(
            "v-dialog",
            {
              attrs: { scrollable: "", "max-width": "500px" },
              model: {
                value: _vm.deficiencydialog,
                callback: function ($$v) {
                  _vm.deficiencydialog = $$v
                },
                expression: "deficiencydialog",
              },
            },
            [
              _c(
                "v-card",
                [
                  _c("v-card-title", { staticClass: "headline" }, [
                    _vm._v("Deficiency List\n         "),
                    _c("span", { staticClass: "font-italic subtitle-2" }, [
                      _vm._v(
                        "\n           (From: " +
                          _vm._s(_vm.deficiency_designee) +
                          ")"
                      ),
                    ]),
                  ]),
                  _vm._v(" "),
                  _c("v-divider"),
                  _vm._v(" "),
                  _c(
                    "v-card-text",
                    { staticStyle: { height: "300px" } },
                    [
                      _c(
                        "v-list",
                        { attrs: { subheader: "", "two-line": "" } },
                        [
                          _vm._l(_vm.deficiencies, function (deficiency) {
                            return _c(
                              "v-list-item",
                              { key: deficiency.title },
                              [
                                _c(
                                  "v-list-item-avatar",
                                  [
                                    deficiency.completed
                                      ? _c(
                                          "v-icon",
                                          {
                                            staticClass: "success lighten-1",
                                            attrs: { dark: "" },
                                          },
                                          [_vm._v(" mdi-check ")]
                                        )
                                      : _c(
                                          "v-icon",
                                          {
                                            staticClass: "error lighten-1",
                                            attrs: { dark: "" },
                                          },
                                          [_vm._v(" mdi-alert ")]
                                        ),
                                  ],
                                  1
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-list-item-content",
                                  [
                                    _c(
                                      "v-list-item-title",
                                      {
                                        staticClass: "small",
                                        attrs: { small: "" },
                                      },
                                      [_vm._v(_vm._s(deficiency.title))]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-subtitle",
                                      {
                                        staticClass: "subtitle-2",
                                        attrs: { small: "" },
                                      },
                                      [_vm._v("*" + _vm._s(deficiency.note))]
                                    ),
                                    _vm._v(" "),
                                    _c("v-list-item-subtitle"),
                                  ],
                                  1
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-list-item-action",
                                  [
                                    _c("v-list-item-action-text", [
                                      _vm._v(
                                        _vm._s(
                                          _vm._f("moment")(
                                            deficiency.updated_at,
                                            "from",
                                            "now"
                                          )
                                        )
                                      ),
                                    ]),
                                    _vm._v(" "),
                                    deficiency.completed
                                      ? _c(
                                          "v-chip",
                                          {
                                            attrs: {
                                              "text-color": "white",
                                              color: "success",
                                              "x-small": "",
                                            },
                                          },
                                          [
                                            _vm._v(
                                              "\n                 Completed\n               "
                                            ),
                                          ]
                                        )
                                      : _c(
                                          "v-chip",
                                          {
                                            attrs: {
                                              "text-color": "white",
                                              color: "warning",
                                              "x-small": "",
                                            },
                                          },
                                          [
                                            _vm._v(
                                              "\n                 Pending\n               "
                                            ),
                                          ]
                                        ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            )
                          }),
                          _vm._v(" "),
                          _c("v-divider"),
                        ],
                        2
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("v-divider"),
                  _vm._v(" "),
                  _c(
                    "v-card-actions",
                    [
                      _c("v-spacer"),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: { color: "green darken-1", text: "" },
                          on: {
                            click: function ($event) {
                              _vm.deficiencydialog = false
                            },
                          },
                        },
                        [_vm._v("Close")]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-snackbar",
            {
              attrs: { bottom: "" },
              model: {
                value: _vm.snackbar,
                callback: function ($$v) {
                  _vm.snackbar = $$v
                },
                expression: "snackbar",
              },
            },
            [
              _vm._v("\n     " + _vm._s(_vm.text) + "\n\n     "),
              _c(
                "v-btn",
                {
                  attrs: { color: "pink", text: "" },
                  on: {
                    click: function ($event) {
                      _vm.snackbar = false
                    },
                  },
                },
                [_vm._v(" Close ")]
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-dialog",
            {
              attrs: { persistent: "", "max-width": "300" },
              model: {
                value: _vm.dialog,
                callback: function ($$v) {
                  _vm.dialog = $$v
                },
                expression: "dialog",
              },
            },
            [
              _c(
                "v-card",
                [
                  _c("v-card-title", { staticClass: "headline" }, [
                    _vm._v("\n         Send this Clearance Request?\n       "),
                  ]),
                  _vm._v(" "),
                  _c(
                    "v-card-actions",
                    [
                      _c("v-spacer"),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: { color: "green darken-1", text: "" },
                          on: {
                            click: function ($event) {
                              _vm.dialog = false
                            },
                          },
                        },
                        [_vm._v("\n           Cancel\n         ")]
                      ),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: { color: "green darken-1", text: "" },
                          on: {
                            click: function ($event) {
                              return _vm.approve()
                            },
                          },
                        },
                        [_vm._v("\n           Approve\n         ")]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        2
      )
    : _vm.purposeVal == 0
    ? _c(
        "v-container",
        [
          _c(
            "v-row",
            {
              staticClass: "pa-12",
              attrs: { align: "center ", justify: "center" },
            },
            [
              _c(
                "v-alert",
                {
                  attrs: {
                    icon: "mdi-shield-lock-outline",
                    prominent: "",
                    text: "",
                    type: "info",
                  },
                },
                [
                  _c(
                    "v-row",
                    { staticClass: "pa-3", attrs: { align: "center" } },
                    [
                      _c("v-col", { staticClass: "grow" }, [
                        _c("strong", [_vm._v("No purpose detected!")]),
                        _vm._v(
                          " Go to settings to setup your clearance purpose.\n   \n       "
                        ),
                      ]),
                      _vm._v(" "),
                      _c(
                        "v-col",
                        { staticClass: "shrink" },
                        [
                          _c(
                            "v-btn",
                            {
                              staticClass: "primary",
                              attrs: {
                                href: "/#/sgs/student/settings",
                                elevation: "0",
                              },
                            },
                            [_vm._v("Redirect to Settings")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      )
    : _c("v-container")
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/AppComponent.vue?vue&type=template&id=cd268472&":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/AppComponent.vue?vue&type=template&id=cd268472& ***!
  \***************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [_c("router-view")], 1)
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearanceListComponent.vue?vue&type=template&id=4bae00ee&":
/*!*************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ClearanceListComponent.vue?vue&type=template&id=4bae00ee& ***!
  \*************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _c(
        "v-card",
        [
          _c(
            "v-card-subtitle",
            {
              staticClass: "white--text text-uppercase elevation-2 mb-0 pb-1",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("span", { staticClass: "text-h6" }, [
                _vm._v(" Clearance List "),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2 mb-0 pb-0 mt-0 pt-0",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("v-text-field", {
                staticClass: "mb-0 pb-0 mt-0 pt-0",
                attrs: {
                  "append-icon": "mdi-magnify",
                  label: "Search",
                  "solo-inverted": "",
                  flat: "",
                  dark: "",
                  dense: "",
                },
                model: {
                  value: _vm.search,
                  callback: function ($$v) {
                    _vm.search = $$v
                  },
                  expression: "search",
                },
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-container",
            [
              _c("v-data-table", {
                staticClass: "elevation-0",
                attrs: {
                  "item-key": "id",
                  loading: _vm.loading,
                  "loading-text": "Loading... Please wait",
                  headers: _vm.headers,
                  page: _vm.page + 1,
                  pageCount: _vm.numberOfPages,
                  items: _vm.clearances.data,
                  options: _vm.options,
                  "server-items-length": _vm.totalclearances,
                  "items-per-page": 10,
                  "show-select": "",
                  "footer-props": {
                    itemsPerPageOptions: [5, 10, 15],
                    itemsPerPageText: "Clearance Request Per Page",
                    "show-current-page": true,
                    "show-first-last-page": true,
                  },
                },
                on: {
                  "update:options": function ($event) {
                    _vm.options = $event
                  },
                },
                scopedSlots: _vm._u([
                  {
                    key: "top",
                    fn: function () {
                      return [
                        _c("v-text-field", {
                          attrs: {
                            "append-icon": "mdi-magnify",
                            label: "Search",
                          },
                          on: { input: _vm.searchIt },
                        }),
                        _vm._v(" "),
                        _c(
                          "v-toolbar",
                          { attrs: { flat: "", color: "white" } },
                          [
                            _c("div", { staticClass: "overline text-h6" }, [
                              _vm._v(
                                "\n            Clearance List\n            \n          "
                              ),
                            ]),
                            _vm._v(" "),
                            _c("v-spacer"),
                          ],
                          1
                        ),
                      ]
                    },
                    proxy: true,
                  },
                  {
                    key: "item.id",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        _c("td", [
                          _vm._v(_vm._s(_vm.clearances.data.indexOf(item) + 1)),
                        ]),
                      ]
                    },
                  },
                  {
                    key: "item.actions",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        [
                          _c(
                            "v-btn",
                            {
                              staticClass: "ma-2",
                              attrs: {
                                color: "primary",
                                depressed: "",
                                small: "",
                              },
                            },
                            [_vm._v("View")]
                          ),
                        ],
                      ]
                    },
                  },
                ]),
              }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\n        mdi-close\n      "),
                              ]),
                              _vm._v("close\n    "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\n        mdi-error\n      "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n    "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearanceRequestsComponent.vue?vue&type=template&id=1d0bdc08&":
/*!*****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ClearanceRequestsComponent.vue?vue&type=template&id=1d0bdc08& ***!
  \*****************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _vm.editedIndex > -1
        ? _c(
            "v-dialog",
            {
              attrs: { persistent: "", "max-width": "400" },
              model: {
                value: _vm.dialog,
                callback: function ($$v) {
                  _vm.dialog = $$v
                },
                expression: "dialog",
              },
            },
            [
              _c(
                "v-card",
                [
                  _c(
                    "v-card-subtitle",
                    {
                      staticClass:
                        "white--text text-uppercase elevation-2 pt-4",
                      staticStyle: {
                        background:
                          "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                      },
                    },
                    [
                      _c("span", { staticClass: "text-h6" }, [
                        _vm._v(" Approving Request "),
                      ]),
                    ]
                  ),
                  _vm._v(" "),
                  _c("v-card-text", { staticClass: "pt-4" }, [
                    _vm._v(
                      "This will certifiy that " +
                        _vm._s(_vm.studentName) +
                        " is cleared from any property and money responsibility as of this date."
                    ),
                  ]),
                  _vm._v(" "),
                  _c(
                    "v-card-actions",
                    [
                      _c("v-spacer"),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: { color: "green darken-1", text: "" },
                          on: {
                            click: function ($event) {
                              _vm.dialog = false
                            },
                          },
                        },
                        [_vm._v("\n          Cancel\n        ")]
                      ),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: { color: "green darken-1", text: "" },
                          on: {
                            click: function ($event) {
                              return _vm.approve()
                            },
                          },
                        },
                        [_vm._v("\n          Approve\n        ")]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          )
        : _vm._e(),
      _vm._v(" "),
      _c(
        "v-dialog",
        {
          attrs: { persistent: "", "max-width": "500" },
          model: {
            value: _vm.deferDialog,
            callback: function ($$v) {
              _vm.deferDialog = $$v
            },
            expression: "deferDialog",
          },
        },
        [
          _c(
            "v-card",
            [
              _c(
                "v-card-subtitle",
                {
                  staticClass: "white--text text-uppercase elevation-2 pt-4",
                  staticStyle: {
                    background:
                      "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                  },
                },
                [
                  _c("span", { staticClass: "text-h6" }, [
                    _vm._v("Add Deficiency "),
                  ]),
                ]
              ),
              _vm._v(" "),
              _c(
                "v-card-text",
                { staticClass: "pt-4" },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", sm: "12", md: "12" } },
                    [
                      _c("v-text-field", {
                        staticClass: "elevation-0",
                        attrs: {
                          filled: "",
                          label: "Item of Deficiency*",
                          required: "",
                        },
                        model: {
                          value: _vm.deficiency.title,
                          callback: function ($$v) {
                            _vm.$set(_vm.deficiency, "title", $$v)
                          },
                          expression: "deficiency.title",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", sm: "12", md: "12" } },
                    [
                      _c("v-textarea", {
                        attrs: {
                          filled: "",
                          label: "Additional Information",
                          hint: "Notes or Instructions for student",
                        },
                        model: {
                          value: _vm.deficiency.note,
                          callback: function ($$v) {
                            _vm.$set(_vm.deficiency, "note", $$v)
                          },
                          expression: "deficiency.note",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("small", [_vm._v("*indicates required field")]),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-card-actions",
                [
                  _c("v-spacer"),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "blue darken-1", text: "" },
                      on: {
                        click: function ($event) {
                          _vm.deferDialog = false
                        },
                      },
                    },
                    [_vm._v("Close")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "blue darken-1", text: "" },
                      on: {
                        click: function ($event) {
                          return _vm.deferItem()
                        },
                      },
                    },
                    [_vm._v("Save")]
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-card",
        [
          _c(
            "v-card-subtitle",
            {
              staticClass: "white--text text-uppercase elevation-2 mb-0 pb-1",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("span", { staticClass: "text-h6" }, [
                _vm._v(" Clearance Requests "),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2 mb-0 pb-6 mt-0 pt-2",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c(
                "v-row",
                [
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "3" },
                    },
                    [
                      _c("v-select", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          label: "Select Semester",
                          "item-value": "id",
                          "item-text": "semester",
                          items: _vm.semesters,
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        model: {
                          value: _vm.semester,
                          callback: function ($$v) {
                            _vm.semester = $$v
                          },
                          expression: "semester",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "3" },
                    },
                    [
                      _c("v-select", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          label: "Select College",
                          "item-value": "id",
                          "item-text": "name",
                          items: _vm.colleges,
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        model: {
                          value: _vm.college,
                          callback: function ($$v) {
                            _vm.college = $$v
                          },
                          expression: "college",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "3" },
                    },
                    [
                      _c("v-select", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          label: "Select Program",
                          "item-value": "id",
                          "item-text": "name",
                          items: _vm.programs,
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        model: {
                          value: _vm.program,
                          callback: function ($$v) {
                            _vm.program = $$v
                          },
                          expression: "program",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "3" },
                    },
                    [
                      _c("v-text-field", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          "append-icon": "mdi-magnify",
                          label: "Search",
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        on: { input: _vm.searchIt },
                        model: {
                          value: _vm.searchItem,
                          callback: function ($$v) {
                            _vm.searchItem = $$v
                          },
                          expression: "searchItem",
                        },
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c("v-data-table", {
            staticClass: "px-6 pb-6  mt-2",
            attrs: {
              "item-key": "id",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              page: _vm.page + 1,
              pageCount: _vm.numberOfPages,
              items: _vm.clearancerequests.data,
              options: _vm.options,
              "server-items-length": _vm.totalclearancerequests,
              "items-per-page": 10,
              "footer-props": {
                itemsPerPageOptions: [5, 10, 15],
                itemsPerPageText: "Clearance Request Per Page",
                "show-current-page": true,
                "show-first-last-page": true,
              },
            },
            on: {
              "update:options": function ($event) {
                _vm.options = $event
              },
            },
            scopedSlots: _vm._u([
              {
                key: "item.request_at",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c(
                      "v-chip",
                      {
                        attrs: {
                          "text-color": "white",
                          color: "success",
                          small: "",
                        },
                      },
                      [
                        _vm._v(
                          "\n         \n          " +
                            _vm._s(item.request_at) +
                            "\n      "
                        ),
                      ]
                    ),
                  ]
                },
              },
              {
                key: "item.actions",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    [
                      _c(
                        "v-btn",
                        {
                          staticClass: "ma-2 pr-5 pl-4 text-center",
                          attrs: {
                            color: "success",
                            depressed: "",
                            "x-small": "",
                          },
                          on: {
                            click: function ($event) {
                              return _vm.editItem(item)
                            },
                          },
                        },
                        [
                          _c("v-icon", { attrs: { dark: "", "x-small": "" } }, [
                            _vm._v(
                              "\n        mdi-check-circle-outline\n      "
                            ),
                          ]),
                          _vm._v("APPROVE"),
                        ],
                        1
                      ),
                    ],
                    _vm._v(" "),
                    [
                      _c(
                        "v-btn",
                        {
                          staticClass: "ma-2",
                          attrs: {
                            color: "error",
                            depressed: "",
                            "x-small": "",
                          },
                          on: {
                            click: function ($event) {
                              return _vm.defer(item)
                            },
                          },
                        },
                        [
                          _c("v-icon", { attrs: { dark: "", "x-small": "" } }, [
                            _vm._v(
                              "\n        mdi-close-circle-outline\n      "
                            ),
                          ]),
                          _vm._v("DISAPPROVE"),
                        ],
                        1
                      ),
                    ],
                  ]
                },
              },
            ]),
          }),
          _vm._v(" "),
          _c(
            "v-snackbar",
            {
              attrs: {
                color: _vm.snackbarColor,
                right: "",
                timeout: "5000",
                outlined: "",
                top: "",
                width: "50",
              },
              scopedSlots: _vm._u([
                {
                  key: "action",
                  fn: function (ref) {
                    var attrs = ref.attrs
                    return [
                      _c(
                        "v-btn",
                        _vm._b(
                          {
                            attrs: { color: _vm.snackbarColor, text: "" },
                            on: {
                              click: function ($event) {
                                _vm.snackbar = false
                              },
                            },
                          },
                          "v-btn",
                          attrs,
                          false
                        ),
                        [
                          _c("v-icon", { attrs: { dark: "", left: "" } }, [
                            _vm._v("\n        mdi-close\n      "),
                          ]),
                          _vm._v("close\n    "),
                        ],
                        1
                      ),
                    ]
                  },
                },
              ]),
              model: {
                value: _vm.snackbar,
                callback: function ($$v) {
                  _vm.snackbar = $$v
                },
                expression: "snackbar",
              },
            },
            [
              _c("v-icon", { attrs: { left: "" } }, [
                _vm._v("\n        mdi-error\n      "),
              ]),
              _vm._v(_vm._s(_vm.text) + "\n\n    "),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearedClearancesComponent.vue?vue&type=template&id=0d6c8b76&":
/*!*****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/ClearedClearancesComponent.vue?vue&type=template&id=0d6c8b76& ***!
  \*****************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _c(
        "v-card",
        [
          _c(
            "v-card-subtitle",
            {
              staticClass: "white--text text-uppercase elevation-2 mb-0 pb-1",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("span", { staticClass: "text-h6" }, [
                _vm._v("  Approved Requests "),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2 mb-0 pb-0 mt-0 pt-0",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("v-text-field", {
                staticClass: "mb-0 pb-0 mt-2 pt-0",
                attrs: {
                  "append-icon": "mdi-magnify",
                  label: "Search",
                  "solo-inverted": "",
                  flat: "",
                  dark: "",
                  dense: "",
                },
                on: { input: _vm.searchIt },
                model: {
                  value: _vm.searchItem,
                  callback: function ($$v) {
                    _vm.searchItem = $$v
                  },
                  expression: "searchItem",
                },
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c("v-data-table", {
            staticClass: "px-6 pb-6  mt-4",
            attrs: {
              "item-key": "id",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              page: _vm.page + 1,
              pageCount: _vm.numberOfPages,
              items: _vm.clearancerequests.data,
              options: _vm.options,
              "server-items-length": _vm.totalclearancerequests,
              "items-per-page": 10,
              "footer-props": {
                itemsPerPageOptions: [5, 10, 15],
                itemsPerPageText: "Clearance Request Per Page",
                "show-current-page": true,
                "show-first-last-page": true,
              },
            },
            on: {
              "update:options": function ($event) {
                _vm.options = $event
              },
            },
            scopedSlots: _vm._u([
              {
                key: "item.approved_at",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c(
                      "v-chip",
                      {
                        attrs: {
                          "text-color": "white",
                          color: "success",
                          small: "",
                        },
                      },
                      [
                        _vm._v(
                          "\n         \n          " +
                            _vm._s(item.approved_at) +
                            "\n      "
                        ),
                      ]
                    ),
                  ]
                },
              },
              {
                key: "item.actions",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    [
                      _c(
                        "v-btn",
                        {
                          staticClass: "ma-2",
                          attrs: { color: "primary", depressed: "", small: "" },
                        },
                        [_vm._v("View")]
                      ),
                    ],
                  ]
                },
              },
            ]),
          }),
          _vm._v(" "),
          _c(
            "v-snackbar",
            {
              attrs: {
                color: _vm.snackbarColor,
                right: "",
                timeout: "5000",
                outlined: "",
                top: "",
                width: "50",
              },
              scopedSlots: _vm._u([
                {
                  key: "action",
                  fn: function (ref) {
                    var attrs = ref.attrs
                    return [
                      _c(
                        "v-btn",
                        _vm._b(
                          {
                            attrs: { color: _vm.snackbarColor, text: "" },
                            on: {
                              click: function ($event) {
                                _vm.snackbar = false
                              },
                            },
                          },
                          "v-btn",
                          attrs,
                          false
                        ),
                        [
                          _c("v-icon", { attrs: { dark: "", left: "" } }, [
                            _vm._v("\n        mdi-close\n      "),
                          ]),
                          _vm._v("close\n    "),
                        ],
                        1
                      ),
                    ]
                  },
                },
              ]),
              model: {
                value: _vm.snackbar,
                callback: function ($$v) {
                  _vm.snackbar = $$v
                },
                expression: "snackbar",
              },
            },
            [
              _c("v-icon", { attrs: { left: "" } }, [
                _vm._v("\n        mdi-error\n      "),
              ]),
              _vm._v(_vm._s(_vm.text) + "\n\n    "),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/DeficiencyListComponent.vue?vue&type=template&id=cee6eaca&":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/DeficiencyListComponent.vue?vue&type=template&id=cee6eaca& ***!
  \**************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _c(
        "v-card",
        [
          _c(
            "v-card-subtitle",
            {
              staticClass: "white--text text-uppercase elevation-2 mb-0 pb-1",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("span", { staticClass: "text-h6" }, [
                _vm._v(" Student Deficiencies "),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2 mb-0 pb-0 mt-0 pt-0",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("v-text-field", {
                staticClass: "mb-0 pb-0 mt-2 pt-0",
                attrs: {
                  "append-icon": "mdi-magnify",
                  label: "Search",
                  "solo-inverted": "",
                  flat: "",
                  dark: "",
                  dense: "",
                },
                on: { input: _vm.searchIt },
                model: {
                  value: _vm.searchItem,
                  callback: function ($$v) {
                    _vm.searchItem = $$v
                  },
                  expression: "searchItem",
                },
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-container",
            [
              _c("v-data-table", {
                staticClass: "px-6 pb-6  mt-4",
                attrs: {
                  "item-key": "id",
                  loading: _vm.loading,
                  "loading-text": "Loading... Please wait",
                  headers: _vm.headers,
                  page: _vm.page + 1,
                  pageCount: _vm.numberOfPages,
                  items: _vm.deficiencies.data,
                  options: _vm.options,
                  "server-items-length": _vm.totaldeficiencies,
                  "items-per-page": 10,
                  "footer-props": {
                    itemsPerPageOptions: [5, 10, 15],
                    itemsPerPageText: "Deficiency Per Page",
                    "show-current-page": true,
                    "show-first-last-page": true,
                  },
                },
                on: {
                  "update:options": function ($event) {
                    _vm.options = $event
                  },
                },
                scopedSlots: _vm._u([
                  {
                    key: "top",
                    fn: function () {
                      return [
                        _c(
                          "v-dialog",
                          {
                            attrs: { persistent: "", "max-width": "500" },
                            model: {
                              value: _vm.editdialog,
                              callback: function ($$v) {
                                _vm.editdialog = $$v
                              },
                              expression: "editdialog",
                            },
                          },
                          [
                            _c(
                              "v-card",
                              [
                                _c(
                                  "v-card-title",
                                  {
                                    staticClass:
                                      "white--text text-uppercase elevation-2 ",
                                    staticStyle: {
                                      background:
                                        "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                                    },
                                  },
                                  [
                                    _c("span", { staticClass: "text-h6" }, [
                                      _vm._v("Edit Deficiency "),
                                    ]),
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-card-text",
                                  [
                                    _c(
                                      "v-container",
                                      [
                                        _c(
                                          "v-row",
                                          [
                                            _c(
                                              "v-col",
                                              {
                                                attrs: {
                                                  cols: "12",
                                                  sm: "12",
                                                  md: "12",
                                                },
                                              },
                                              [
                                                _c("v-text-field", {
                                                  attrs: {
                                                    filled: "",
                                                    label:
                                                      "Item of Deficiency*",
                                                    required: "",
                                                  },
                                                  model: {
                                                    value:
                                                      _vm.editedItem.deficiency,
                                                    callback: function ($$v) {
                                                      _vm.$set(
                                                        _vm.editedItem,
                                                        "deficiency",
                                                        $$v
                                                      )
                                                    },
                                                    expression:
                                                      "editedItem.deficiency",
                                                  },
                                                }),
                                              ],
                                              1
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "v-col",
                                              {
                                                attrs: {
                                                  cols: "12",
                                                  sm: "12",
                                                  md: "12",
                                                },
                                              },
                                              [
                                                _c("v-textarea", {
                                                  attrs: {
                                                    filled: "",
                                                    label:
                                                      "Additional Information",
                                                    hint: "Notes or Instructions for student",
                                                  },
                                                  model: {
                                                    value: _vm.editedItem.note,
                                                    callback: function ($$v) {
                                                      _vm.$set(
                                                        _vm.editedItem,
                                                        "note",
                                                        $$v
                                                      )
                                                    },
                                                    expression:
                                                      "editedItem.note",
                                                  },
                                                }),
                                              ],
                                              1
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c("small", [
                                      _vm._v("*indicates required field"),
                                    ]),
                                  ],
                                  1
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-card-actions",
                                  [
                                    _c("v-spacer"),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "blue darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            _vm.editdialog = false
                                          },
                                        },
                                      },
                                      [_vm._v("Close")]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "blue darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            return _vm.save()
                                          },
                                        },
                                      },
                                      [_vm._v("Save")]
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "v-dialog",
                          {
                            attrs: { persistent: "", "max-width": "320" },
                            model: {
                              value: _vm.dialog,
                              callback: function ($$v) {
                                _vm.dialog = $$v
                              },
                              expression: "dialog",
                            },
                          },
                          [
                            _c(
                              "v-card",
                              [
                                _c(
                                  "v-card-title",
                                  { staticClass: "headline" },
                                  [
                                    _vm._v(
                                      "\n          Approve this Deficiency?\n        "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c("v-card-text", [
                                  _vm._v(
                                    "This will certifiy that " +
                                      _vm._s(_vm.studentName) +
                                      " has completed the deficiency (" +
                                      _vm._s(_vm.deficiencyName) +
                                      ")."
                                  ),
                                ]),
                                _vm._v(" "),
                                _c(
                                  "v-card-actions",
                                  [
                                    _c("v-spacer"),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "primary darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            _vm.dialog = false
                                          },
                                        },
                                      },
                                      [
                                        _vm._v(
                                          "\n            Cancel\n          "
                                        ),
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "green darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            return _vm.approve()
                                          },
                                        },
                                      },
                                      [
                                        _vm._v(
                                          "\n            Approve\n          "
                                        ),
                                      ]
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "v-dialog",
                          {
                            attrs: { persistent: "", "max-width": "320" },
                            model: {
                              value: _vm.deletedialog,
                              callback: function ($$v) {
                                _vm.deletedialog = $$v
                              },
                              expression: "deletedialog",
                            },
                          },
                          [
                            _c(
                              "v-card",
                              [
                                _c(
                                  "v-card-title",
                                  { staticClass: "headline" },
                                  [
                                    _vm._v(
                                      "\n          Delete this Deficiency?\n        "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c("v-card-text", [
                                  _vm._v(
                                    "This will delete the deficiency (" +
                                      _vm._s(_vm.deficiencyName) +
                                      ") of " +
                                      _vm._s(_vm.studentName) +
                                      "."
                                  ),
                                ]),
                                _vm._v(" "),
                                _c(
                                  "v-card-actions",
                                  [
                                    _c("v-spacer"),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "primary darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            _vm.deletedialog = false
                                          },
                                        },
                                      },
                                      [
                                        _vm._v(
                                          "\n            Cancel\n          "
                                        ),
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "error darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            return _vm.deleteDeficiency()
                                          },
                                        },
                                      },
                                      [
                                        _vm._v(
                                          "\n            Delete\n          "
                                        ),
                                      ]
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                      ]
                    },
                    proxy: true,
                  },
                  {
                    key: "item.completed",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        item.completed == 1
                          ? _c(
                              "v-chip",
                              {
                                attrs: {
                                  "text-color": "white",
                                  color: "success",
                                  small: "",
                                },
                              },
                              [
                                _vm._v(
                                  "\n           \n           Completed\n        "
                                ),
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        item.completed != 1
                          ? _c(
                              "v-chip",
                              {
                                attrs: {
                                  "text-color": "white",
                                  color: "warning",
                                  small: "",
                                },
                              },
                              [
                                _vm._v(
                                  "\n           \n           Pending\n        "
                                ),
                              ]
                            )
                          : _vm._e(),
                      ]
                    },
                  },
                  {
                    key: "item.actions",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        item.completed != 1
                          ? [
                              _c(
                                "v-btn",
                                {
                                  staticClass: "ma-1",
                                  attrs: {
                                    color: "success",
                                    depressed: "",
                                    "x-small": "",
                                  },
                                  on: {
                                    click: function ($event) {
                                      return _vm.approveItem(item)
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "v-icon",
                                    { attrs: { dark: "", "x-small": "" } },
                                    [
                                      _vm._v(
                                        "\n          mdi-check-circle\n        "
                                      ),
                                    ]
                                  ),
                                  _vm._v("APPROVE"),
                                ],
                                1
                              ),
                            ]
                          : _vm._e(),
                        _vm._v(" "),
                        item.completed != 1
                          ? [
                              _c(
                                "v-btn",
                                {
                                  staticClass: "ma-1 px-6",
                                  attrs: {
                                    color: "primary",
                                    depressed: "",
                                    "x-small": "",
                                  },
                                  on: {
                                    click: function ($event) {
                                      return _vm.editItem(item)
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "v-icon",
                                    { attrs: { dark: "", "x-small": "" } },
                                    [
                                      _vm._v(
                                        "\n          mdi-circle-edit-outline\n        "
                                      ),
                                    ]
                                  ),
                                  _vm._v("EDIT"),
                                ],
                                1
                              ),
                            ]
                          : _vm._e(),
                      ]
                    },
                  },
                ]),
              }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\n          mdi-close\n        "),
                              ]),
                              _vm._v("close\n      "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\n          mdi-error\n        "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n      "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=template&id=813ee318&":
/*!***********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=template&id=813ee318& ***!
  \***********************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        [
          _c(
            "v-container",
            [
              _c("v-data-table", {
                staticClass: "elevation-0",
                attrs: {
                  "item-key": "id",
                  loading: _vm.loading,
                  "loading-text": "Loading... Please wait",
                  headers: _vm.headers,
                  page: _vm.page + 1,
                  pageCount: _vm.numberOfPages,
                  items: _vm.deficiencies.data,
                  options: _vm.options,
                  "server-items-length": _vm.totaldeficiencies,
                  "items-per-page": 10,
                  "footer-props": {
                    itemsPerPageOptions: [5, 10, 15],
                    itemsPerPageText: "Deficiency Per Page",
                    "show-current-page": true,
                    "show-first-last-page": true,
                  },
                },
                on: {
                  "update:options": function ($event) {
                    _vm.options = $event
                  },
                },
                scopedSlots: _vm._u([
                  {
                    key: "top",
                    fn: function () {
                      return [
                        _c("v-text-field", {
                          attrs: {
                            "append-icon": "mdi-magnify",
                            label: "Search",
                          },
                          on: { input: _vm.searchIt },
                        }),
                        _vm._v(" "),
                        _c(
                          "v-toolbar",
                          { attrs: { flat: "", color: "white" } },
                          [
                            _c("div", { staticClass: "overline text-h6" }, [
                              _vm._v(
                                "\n            Deficiency List\n            \n          "
                              ),
                            ]),
                            _vm._v(" "),
                            _c("v-spacer"),
                          ],
                          1
                        ),
                      ]
                    },
                    proxy: true,
                  },
                  {
                    key: "item.id",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        _c("td", [
                          _vm._v(
                            _vm._s(_vm.deficiencies.data.indexOf(item) + 1)
                          ),
                        ]),
                      ]
                    },
                  },
                  {
                    key: "item.completed",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        item.completed == 1
                          ? _c(
                              "v-chip",
                              {
                                attrs: {
                                  "text-color": "white",
                                  color: "success",
                                  small: "",
                                },
                              },
                              [
                                _vm._v(
                                  "\n         \n         Completed\n      "
                                ),
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        item.completed != 1
                          ? _c(
                              "v-chip",
                              {
                                attrs: {
                                  "text-color": "white",
                                  color: "warning",
                                  small: "",
                                },
                              },
                              [_vm._v("\n         \n         Pending\n      ")]
                            )
                          : _vm._e(),
                      ]
                    },
                  },
                ]),
              }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\n        mdi-close\n      "),
                              ]),
                              _vm._v("close\n    "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\n        mdi-error\n      "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n    "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SIASAccountComponent.vue?vue&type=template&id=0be22f43&":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/SIASAccountComponent.vue?vue&type=template&id=0be22f43& ***!
  \***********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        [
          _c(
            "v-container",
            [
              _c("div", { staticClass: "row" }, [
                _c("div", { staticClass: "form-row" }, [
                  _c(
                    "div",
                    { staticClass: "col-md-12" },
                    [
                      _c(
                        "label",
                        {
                          staticClass: "form-control-label",
                          attrs: { for: "input-file-import" },
                        },
                        [_vm._v("Upload Excel File")]
                      ),
                      _vm._v(" "),
                      _c("input", {
                        ref: "import_file",
                        staticClass: "form-control",
                        class: { " is-invalid": _vm.error.message },
                        attrs: {
                          type: "file",
                          id: "input-file-import",
                          name: "file_import",
                        },
                        on: { change: _vm.onFileChange },
                      }),
                      _vm._v(" "),
                      _vm.error.message
                        ? _c("div", { staticClass: "invalid-feedback" })
                        : _vm._e(),
                      _vm._v(" "),
                      _c("v-btn", { on: { click: _vm.proceedAction } }, [
                        _vm._v("Import"),
                      ]),
                    ],
                    1
                  ),
                ]),
              ]),
              _vm._v(" "),
              _c("v-data-table", {
                staticClass: "elevation-0",
                attrs: {
                  "item-key": "id",
                  loading: _vm.loading,
                  "loading-text": "Loading... Please wait",
                  headers: _vm.headers,
                  page: _vm.page + 1,
                  pageCount: _vm.numberOfPages,
                  items: _vm.siasaccounts.data,
                  options: _vm.options,
                  "server-items-length": _vm.totalStudents,
                  "items-per-page": 10,
                  "footer-props": {
                    itemsPerPageOptions: [5, 10, 15],
                    itemsPerPageText: "Student Per Page",
                    "show-current-page": true,
                    "show-first-last-page": true,
                  },
                },
                on: {
                  "update:options": function ($event) {
                    _vm.options = $event
                  },
                },
                scopedSlots: _vm._u([
                  {
                    key: "top",
                    fn: function () {
                      return [
                        _c("v-text-field", {
                          attrs: {
                            "append-icon": "mdi-magnify",
                            label: "Search",
                          },
                          on: { input: _vm.searchIt },
                          model: {
                            value: _vm.searchItem,
                            callback: function ($$v) {
                              _vm.searchItem = $$v
                            },
                            expression: "searchItem",
                          },
                        }),
                        _vm._v(" "),
                        _c(
                          "v-toolbar",
                          { attrs: { flat: "", color: "white" } },
                          [
                            _c("div", { staticClass: "overline text-h6" }, [
                              _vm._v("\n            SIAS Account\n          "),
                            ]),
                            _vm._v(" "),
                            _c("v-spacer"),
                          ],
                          1
                        ),
                      ]
                    },
                    proxy: true,
                  },
                  {
                    key: "item.id",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        _c("td", [
                          _vm._v(
                            _vm._s(_vm.siasaccounts.data.indexOf(item) + 1)
                          ),
                        ]),
                      ]
                    },
                  },
                  {
                    key: "item.actions",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        _c(
                          "v-icon",
                          {
                            staticClass: "mr-2",
                            attrs: { small: "" },
                            on: {
                              click: function ($event) {
                                return _vm.editItem(item)
                              },
                            },
                          },
                          [_vm._v(" mdi-pencil ")]
                        ),
                        _vm._v(" "),
                        _c(
                          "v-icon",
                          {
                            staticClass: "mr-2",
                            attrs: { small: "" },
                            on: {
                              click: function ($event) {
                                return _vm.deleteItem(item)
                              },
                            },
                          },
                          [_vm._v("\n        mdi-delete-forever\n      ")]
                        ),
                      ]
                    },
                  },
                ]),
              }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\n        mdi-close\n      "),
                              ]),
                              _vm._v("close\n    "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\n        mdi-error\n      "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n    "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SettingsComponent.vue?vue&type=template&id=67fba83f&":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/SettingsComponent.vue?vue&type=template&id=67fba83f& ***!
  \********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-card",
    [
      _c(
        "v-toolbar",
        {
          attrs: { flat: "" },
          scopedSlots: _vm._u([
            {
              key: "extension",
              fn: function () {
                return [
                  _c(
                    "v-tabs",
                    {
                      attrs: { "fixed-tabs": "", VERTICAL: "" },
                      model: {
                        value: _vm.tabs,
                        callback: function ($$v) {
                          _vm.tabs = $$v
                        },
                        expression: "tabs",
                      },
                    },
                    [
                      _c("v-tabs-slider"),
                      _vm._v(" "),
                      _c(
                        "v-tab",
                        {
                          staticClass: "primary--text",
                          attrs: { href: "#mobile-tabs-5-2" },
                        },
                        [
                          _c("v-icon", { attrs: { left: "" } }, [
                            _vm._v("mdi-email"),
                          ]),
                          _vm._v(" Change Email\n        "),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-tab",
                        {
                          staticClass: "primary--text",
                          attrs: { href: "#mobile-tabs-5-3" },
                        },
                        [
                          _c("v-icon", { attrs: { left: "" } }, [
                            _vm._v("mdi-lock"),
                          ]),
                          _vm._v(" Change Password\n        "),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
        },
        [
          _c(
            "v-toolbar-title",
            [
              _c("v-icon", { attrs: { left: "" } }, [_vm._v("mdi-cog")]),
              _vm._v("Settings"),
            ],
            1
          ),
          _vm._v(" "),
          _c("v-spacer"),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-tabs-items",
        {
          model: {
            value: _vm.tabs,
            callback: function ($$v) {
              _vm.tabs = $$v
            },
            expression: "tabs",
          },
        },
        [
          _c(
            "v-tab-item",
            { attrs: { value: "mobile-tabs-5-2" } },
            [
              _c(
                "v-card",
                { attrs: { flat: "" } },
                [
                  _c(
                    "v-form",
                    {
                      attrs: { method: "post" },
                      on: {
                        submit: function ($event) {
                          $event.stopPropagation()
                          $event.preventDefault()
                          return _vm.updateEmail.apply(null, arguments)
                        },
                      },
                      model: {
                        value: _vm.valid,
                        callback: function ($$v) {
                          _vm.valid = $$v
                        },
                        expression: "valid",
                      },
                    },
                    [
                      _c(
                        "v-container",
                        [
                          _c(
                            "v-row",
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "12", sm: "12" } },
                                [
                                  _c("v-text-field", {
                                    attrs: {
                                      type: "email",
                                      "success-messages": _vm.success,
                                      "error-messages": _vm.error,
                                      blur: _vm.checkEmail,
                                      label: "Email",
                                      disabled: !_vm.email_disabled,
                                      rules: [
                                        _vm.rules.required,
                                        _vm.rules.validEmail,
                                      ],
                                    },
                                    model: {
                                      value: _vm.editedItem.email,
                                      callback: function ($$v) {
                                        _vm.$set(_vm.editedItem, "email", $$v)
                                      },
                                      expression: "editedItem.email",
                                    },
                                  }),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("v-divider"),
                  _vm._v(" "),
                  _c(
                    "v-card-actions",
                    [
                      _c("v-checkbox", {
                        attrs: { label: "Change Email" },
                        model: {
                          value: _vm.email_disabled,
                          callback: function ($$v) {
                            _vm.email_disabled = $$v
                          },
                          expression: "email_disabled",
                        },
                      }),
                      _vm._v(" "),
                      _c("v-spacer"),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: {
                            color: "blue darken-1",
                            text: "",
                            disabled: !_vm.valid,
                            type: "submit",
                            loading: _vm.loading,
                          },
                          on: {
                            click: function ($event) {
                              $event.preventDefault()
                              return _vm.updateEmail.apply(null, arguments)
                            },
                          },
                        },
                        [
                          _vm._v(
                            "\n                    Save\n                  "
                          ),
                        ]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-tab-item",
            { attrs: { value: "mobile-tabs-5-3" } },
            [
              _c(
                "v-card",
                { attrs: { flat: "" } },
                [
                  _c(
                    "v-form",
                    {
                      attrs: { method: "post" },
                      on: {
                        submit: function ($event) {
                          $event.stopPropagation()
                          $event.preventDefault()
                          return _vm.updatePassword.apply(null, arguments)
                        },
                      },
                      model: {
                        value: _vm.valid,
                        callback: function ($$v) {
                          _vm.valid = $$v
                        },
                        expression: "valid",
                      },
                    },
                    [
                      _c(
                        "v-container",
                        [
                          _c(
                            "v-row",
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "12", sm: "12" } },
                                [
                                  _c("v-text-field", {
                                    attrs: {
                                      type: "password",
                                      color: "primary",
                                      label: "Type Password",
                                      disabled: !_vm.password_disabled,
                                      rules: [
                                        _vm.rules.required,
                                        _vm.rules.min,
                                      ],
                                    },
                                    model: {
                                      value: _vm.editedItem.password,
                                      callback: function ($$v) {
                                        _vm.$set(
                                          _vm.editedItem,
                                          "password",
                                          $$v
                                        )
                                      },
                                      expression: "editedItem.password",
                                    },
                                  }),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                { attrs: { cols: "12", sm: "12" } },
                                [
                                  _c("v-text-field", {
                                    attrs: {
                                      type: "password",
                                      color: "primary",
                                      disabled: !_vm.password_disabled,
                                      label: "Retype Password",
                                      rules: [
                                        _vm.rules.required,
                                        _vm.rules.min,
                                        _vm.passwordmatch,
                                      ],
                                    },
                                    model: {
                                      value: _vm.editedItem.rpassword,
                                      callback: function ($$v) {
                                        _vm.$set(
                                          _vm.editedItem,
                                          "rpassword",
                                          $$v
                                        )
                                      },
                                      expression: "editedItem.rpassword",
                                    },
                                  }),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("v-divider"),
                  _vm._v(" "),
                  _c(
                    "v-card-actions",
                    [
                      _c("v-checkbox", {
                        attrs: { label: "Change Password" },
                        model: {
                          value: _vm.password_disabled,
                          callback: function ($$v) {
                            _vm.password_disabled = $$v
                          },
                          expression: "password_disabled",
                        },
                      }),
                      _vm._v(" "),
                      _c("v-spacer"),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: {
                            color: "blue darken-1",
                            text: "",
                            type: "submit",
                            disabled: !_vm.valid,
                          },
                          on: {
                            click: function ($event) {
                              $event.preventDefault()
                              return _vm.updatePassword.apply(null, arguments)
                            },
                          },
                        },
                        [
                          _vm._v(
                            "\n                    Save\n                  "
                          ),
                        ]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-snackbar",
        {
          attrs: {
            color: _vm.snackbarColor,
            right: "",
            timeout: "5000",
            outlined: "",
            top: "",
            width: "50",
          },
          scopedSlots: _vm._u([
            {
              key: "action",
              fn: function (ref) {
                var attrs = ref.attrs
                return [
                  _c(
                    "v-btn",
                    _vm._b(
                      {
                        attrs: { color: _vm.snackbarColor, text: "" },
                        on: {
                          click: function ($event) {
                            _vm.snackbar = false
                          },
                        },
                      },
                      "v-btn",
                      attrs,
                      false
                    ),
                    [
                      _c("v-icon", { attrs: { dark: "", left: "" } }, [
                        _vm._v("\n        mdi-close\n      "),
                      ]),
                      _vm._v("close\n    "),
                    ],
                    1
                  ),
                ]
              },
            },
          ]),
          model: {
            value: _vm.snackbar,
            callback: function ($$v) {
              _vm.snackbar = $$v
            },
            expression: "snackbar",
          },
        },
        [
          _c("v-icon", { attrs: { left: "" } }, [
            _vm._v("\n        mdi-error\n      "),
          ]),
          _vm._v(_vm._s(_vm.text) + "\n\n    "),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/StudentListComponent.vue?vue&type=template&id=4986d26f&":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/StudentListComponent.vue?vue&type=template&id=4986d26f& ***!
  \***********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "10" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 mb-2" }, [
                                    _vm._v("mdi-account-plus-outline"),
                                  ]),
                                  _vm._v(
                                    "\n                Add Student\n                "
                                  ),
                                  _c(
                                    "v-dialog",
                                    {
                                      attrs: { width: "390" },
                                      scopedSlots: _vm._u([
                                        {
                                          key: "activator",
                                          fn: function (ref) {
                                            var on = ref.on
                                            var attrs = ref.attrs
                                            return [
                                              _c(
                                                "v-btn",
                                                _vm._g(
                                                  _vm._b(
                                                    {
                                                      staticClass:
                                                        "float-right success white--text ml-2",
                                                      attrs: {
                                                        dark: "",
                                                        small: "",
                                                        icon: "",
                                                      },
                                                    },
                                                    "v-btn",
                                                    attrs,
                                                    false
                                                  ),
                                                  on
                                                ),
                                                [
                                                  _c(
                                                    "v-icon",
                                                    { attrs: { small: "" } },
                                                    [_vm._v("mdi-file-excel")]
                                                  ),
                                                ],
                                                1
                                              ),
                                            ]
                                          },
                                        },
                                      ]),
                                      model: {
                                        value: _vm.exportDialog,
                                        callback: function ($$v) {
                                          _vm.exportDialog = $$v
                                        },
                                        expression: "exportDialog",
                                      },
                                    },
                                    [
                                      _vm._v(" "),
                                      _c(
                                        "v-card",
                                        [
                                          _c(
                                            "v-card-title",
                                            { staticClass: "text-lg-caption" },
                                            [
                                              _vm._v(
                                                "\n                      Export Students Activation Code\n                    "
                                              ),
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "v-card-text",
                                            [
                                              _c(
                                                "v-form",
                                                {
                                                  ref: "entryForm",
                                                  attrs: {
                                                    method: "post",
                                                    "lazy-validation": "",
                                                  },
                                                  on: {
                                                    submit: function ($event) {
                                                      $event.stopPropagation()
                                                      $event.preventDefault()
                                                      return _vm.save.apply(
                                                        null,
                                                        arguments
                                                      )
                                                    },
                                                  },
                                                },
                                                [
                                                  _c("v-select", {
                                                    attrs: {
                                                      items:
                                                        _vm.export_campuses,
                                                      "item-text": "name",
                                                      label: "Select Campus",
                                                      clearable: "",
                                                      "item-value": "id",
                                                      "item-key": "id",
                                                      color: "primary",
                                                      chips: "",
                                                    },
                                                    on: {
                                                      change: function (
                                                        $event
                                                      ) {
                                                        return _vm.exportcampusListener(
                                                          $event
                                                        )
                                                      },
                                                    },
                                                    scopedSlots: _vm._u([
                                                      {
                                                        key: "selection",
                                                        fn: function (ref) {
                                                          var attr = ref.attr
                                                          var on = ref.on
                                                          var item = ref.item
                                                          var selected =
                                                            ref.selected
                                                          return [
                                                            _c(
                                                              "v-chip",
                                                              _vm._g(
                                                                _vm._b(
                                                                  {
                                                                    staticClass:
                                                                      "white--text",
                                                                    attrs: {
                                                                      "input-value":
                                                                        selected,
                                                                      color:
                                                                        "purple",
                                                                    },
                                                                  },
                                                                  "v-chip",
                                                                  attr,
                                                                  false
                                                                ),
                                                                on
                                                              ),
                                                              [
                                                                _c("span", {
                                                                  domProps: {
                                                                    textContent:
                                                                      _vm._s(
                                                                        item.name
                                                                      ),
                                                                  },
                                                                }),
                                                              ]
                                                            ),
                                                          ]
                                                        },
                                                      },
                                                    ]),
                                                    model: {
                                                      value:
                                                        _vm.editedItem
                                                          .export_campus_id,
                                                      callback: function ($$v) {
                                                        _vm.$set(
                                                          _vm.editedItem,
                                                          "export_campus_id",
                                                          $$v
                                                        )
                                                      },
                                                      expression:
                                                        "editedItem.export_campus_id",
                                                    },
                                                  }),
                                                  _vm._v(" "),
                                                  _c("v-autocomplete", {
                                                    attrs: {
                                                      items:
                                                        _vm.export_programs,
                                                      loading: _vm.isLoading,
                                                      "search-input":
                                                        _vm.search,
                                                      chips: "",
                                                      clearable: "",
                                                      "item-text": "name",
                                                      "item-value": "id",
                                                      "item-key": "id",
                                                      label:
                                                        "Search Program...",
                                                    },
                                                    on: {
                                                      "update:searchInput":
                                                        function ($event) {
                                                          _vm.search = $event
                                                        },
                                                      "update:search-input":
                                                        function ($event) {
                                                          _vm.search = $event
                                                        },
                                                    },
                                                    scopedSlots: _vm._u([
                                                      {
                                                        key: "no-data",
                                                        fn: function () {
                                                          return [
                                                            _c(
                                                              "v-list-item",
                                                              [
                                                                _c(
                                                                  "v-list-item-title",
                                                                  [
                                                                    _vm._v(
                                                                      "\n                            Search Program\n                          "
                                                                    ),
                                                                  ]
                                                                ),
                                                              ],
                                                              1
                                                            ),
                                                          ]
                                                        },
                                                        proxy: true,
                                                      },
                                                      {
                                                        key: "selection",
                                                        fn: function (ref) {
                                                          var attr = ref.attr
                                                          var on = ref.on
                                                          var item = ref.item
                                                          var selected =
                                                            ref.selected
                                                          return [
                                                            _c(
                                                              "v-chip",
                                                              _vm._g(
                                                                _vm._b(
                                                                  {
                                                                    staticClass:
                                                                      "white--text",
                                                                    attrs: {
                                                                      "input-value":
                                                                        selected,
                                                                      color:
                                                                        "purple",
                                                                    },
                                                                  },
                                                                  "v-chip",
                                                                  attr,
                                                                  false
                                                                ),
                                                                on
                                                              ),
                                                              [
                                                                _c("span", {
                                                                  domProps: {
                                                                    textContent:
                                                                      _vm._s(
                                                                        item.name
                                                                      ),
                                                                  },
                                                                }),
                                                              ]
                                                            ),
                                                          ]
                                                        },
                                                      },
                                                      {
                                                        key: "item",
                                                        fn: function (ref) {
                                                          var item = ref.item
                                                          return [
                                                            _c(
                                                              "v-list-item-content",
                                                              [
                                                                _c(
                                                                  "v-list-item-title",
                                                                  {
                                                                    domProps: {
                                                                      textContent:
                                                                        _vm._s(
                                                                          item.name
                                                                        ),
                                                                    },
                                                                  }
                                                                ),
                                                              ],
                                                              1
                                                            ),
                                                          ]
                                                        },
                                                      },
                                                    ]),
                                                    model: {
                                                      value:
                                                        _vm.editedItem
                                                          .export_program_id,
                                                      callback: function ($$v) {
                                                        _vm.$set(
                                                          _vm.editedItem,
                                                          "export_program_id",
                                                          $$v
                                                        )
                                                      },
                                                      expression:
                                                        "editedItem.export_program_id",
                                                    },
                                                  }),
                                                  _vm._v(" "),
                                                  _c("v-divider"),
                                                ],
                                                1
                                              ),
                                            ],
                                            1
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "v-card-actions",
                                            [
                                              _c("v-spacer"),
                                              _vm._v(" "),
                                              _c(
                                                "v-btn",
                                                {
                                                  attrs: {
                                                    block: "",
                                                    color: "blue darken-1",
                                                    shaped: "",
                                                    elevation: "0",
                                                    dark: "",
                                                    type: "submit",
                                                  },
                                                  on: {
                                                    click: function ($event) {
                                                      $event.preventDefault()
                                                      return _vm.exportActivationCode.apply(
                                                        null,
                                                        arguments
                                                      )
                                                    },
                                                  },
                                                },
                                                [
                                                  _vm._v(
                                                    "\n                        Export\n                      "
                                                  ),
                                                ]
                                              ),
                                            ],
                                            1
                                          ),
                                        ],
                                        1
                                      ),
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "v-dialog",
                                    {
                                      attrs: { width: "390" },
                                      scopedSlots: _vm._u([
                                        {
                                          key: "activator",
                                          fn: function (ref) {
                                            var on = ref.on
                                            var attrs = ref.attrs
                                            return [
                                              _c(
                                                "v-btn",
                                                _vm._g(
                                                  _vm._b(
                                                    {
                                                      staticClass:
                                                        "float-right info white--text",
                                                      attrs: {
                                                        dark: "",
                                                        small: "",
                                                        icon: "",
                                                      },
                                                    },
                                                    "v-btn",
                                                    attrs,
                                                    false
                                                  ),
                                                  on
                                                ),
                                                [
                                                  _c(
                                                    "v-icon",
                                                    { attrs: { small: "" } },
                                                    [
                                                      _vm._v(
                                                        "mdi-cloud-upload-outline"
                                                      ),
                                                    ]
                                                  ),
                                                ],
                                                1
                                              ),
                                            ]
                                          },
                                        },
                                      ]),
                                      model: {
                                        value: _vm.uploadDialog,
                                        callback: function ($$v) {
                                          _vm.uploadDialog = $$v
                                        },
                                        expression: "uploadDialog",
                                      },
                                    },
                                    [
                                      _vm._v(" "),
                                      _c(
                                        "v-card",
                                        [
                                          _c(
                                            "v-card-title",
                                            { staticClass: "text-sm-h6" },
                                            [
                                              _vm._v(
                                                "\n                      Upload File\n                    "
                                              ),
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "v-card-text",
                                            [
                                              _c("v-file-input", {
                                                ref: "import_file",
                                                class: {
                                                  " is-invalid":
                                                    _vm.error.message,
                                                },
                                                attrs: {
                                                  label:
                                                    "Select a XLSX file...",
                                                  color: "deep-purple accent-4",
                                                  counter: "",
                                                  accept: ".xlsx",
                                                  id: "input-file-import",
                                                  name: "file_import",
                                                  size: "5",
                                                  placeholder:
                                                    "Select your files",
                                                  "prepend-icon":
                                                    "mdi-paperclip",
                                                  "error-messages":
                                                    _vm.error.message,
                                                  outlined: "",
                                                  "show-size": 1000,
                                                },
                                                on: {
                                                  change: _vm.onFileChange,
                                                },
                                                scopedSlots: _vm._u([
                                                  {
                                                    key: "selection",
                                                    fn: function (ref) {
                                                      var index = ref.index
                                                      var text = ref.text
                                                      return [
                                                        index < 2
                                                          ? _c(
                                                              "v-chip",
                                                              {
                                                                attrs: {
                                                                  color:
                                                                    "deep-purple accent-4",
                                                                  dark: "",
                                                                  label: "",
                                                                  small: "",
                                                                },
                                                              },
                                                              [
                                                                _vm._v(
                                                                  "\n                            " +
                                                                    _vm._s(
                                                                      text
                                                                    ) +
                                                                    "\n                          "
                                                                ),
                                                              ]
                                                            )
                                                          : index === 2
                                                          ? _c(
                                                              "span",
                                                              {
                                                                staticClass:
                                                                  "\n                              text-overline\n                              grey--text\n                              text--darken-3\n                              mx-2\n                            ",
                                                              },
                                                              [
                                                                _vm._v(
                                                                  "\n                            +" +
                                                                    _vm._s(
                                                                      _vm.ffile
                                                                        .length -
                                                                        2
                                                                    ) +
                                                                    " File(s)\n                          "
                                                                ),
                                                              ]
                                                            )
                                                          : _vm._e(),
                                                      ]
                                                    },
                                                  },
                                                ]),
                                                model: {
                                                  value: _vm.ffile,
                                                  callback: function ($$v) {
                                                    _vm.ffile = $$v
                                                  },
                                                  expression: "ffile",
                                                },
                                              }),
                                            ],
                                            1
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "v-card-actions",
                                            [
                                              _c("v-spacer"),
                                              _vm._v(" "),
                                              _c(
                                                "v-btn",
                                                {
                                                  staticClass: "primary mb-4",
                                                  attrs: { text: "" },
                                                  on: {
                                                    click: _vm.proceedAction,
                                                  },
                                                },
                                                [
                                                  _vm._v(
                                                    "\n                        Submit\n                      "
                                                  ),
                                                ]
                                              ),
                                            ],
                                            1
                                          ),
                                        ],
                                        1
                                      ),
                                    ],
                                    1
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3" },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Student Number",
                                            rules: [_vm.rules.required],
                                            name: "student_number",
                                            type: "number",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value:
                                              _vm.editedItem.student_number,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "student_number",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.student_number",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            dense: "",
                                            type: "text",
                                            label: "Full Name",
                                            rules: [
                                              _vm.rules.required,
                                              _vm.rules.min,
                                            ],
                                            hint: "(Surname, First name MI)",
                                            color: "teal accent-4",
                                          },
                                          model: {
                                            value: _vm.editedItem.name,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "name",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.name",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-select", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            items: _vm.campuses,
                                            "item-text": "name",
                                            label: "Select Campus",
                                            "item-value": "id",
                                            color: "primary",
                                            rules: [_vm.rules.required],
                                            dense: "",
                                            chip: "",
                                          },
                                          on: { change: _vm.campusListener },
                                          model: {
                                            value: _vm.editedItem.campus_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "campus_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.campus_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-select", {
                                          staticClass: "mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            items: _vm.programs,
                                            label: "Select Program",
                                            "item-value": "id",
                                            "item-text": "name",
                                            color: "primary",
                                            rules: [_vm.rules.required],
                                            wrap: "",
                                            dense: "",
                                            chip: "",
                                          },
                                          on: { change: _vm.programListener },
                                          model: {
                                            value: _vm.editedItem.program_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "program_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.program_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-select", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            items: _vm.years,
                                            label: "Select Year Level",
                                            "item-value": "id",
                                            "item-text": "name",
                                            color: "primary",
                                            rules: [_vm.rules.required],
                                            dense: "",
                                            chip: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.year,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "year",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.year",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                },
                                                on: { click: _vm.close },
                                              },
                                              [
                                                _vm._v(
                                                  "\n                        Cancel\n                      "
                                                ),
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled: !_vm.valid,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n                        Save\n                      "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    {
                      staticClass: "elevation-2 white",
                      attrs: { cols: "12", lg: "8" },
                    },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-0 pr-2 pl-2",
                        attrs: {
                          "item-key": "id",
                          dense: "",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          page: _vm.page + 1,
                          pageCount: _vm.numberOfPages,
                          items: _vm.students.data,
                          options: _vm.options,
                          "server-items-length": _vm.totalStudents,
                          "items-per-page": 10,
                          "footer-props": {
                            itemsPerPageOptions: [5, 10, 15],
                            itemsPerPageText: "Student Per Page",
                            "show-current-page": true,
                            "show-first-last-page": true,
                          },
                        },
                        on: {
                          "update:options": function ($event) {
                            _vm.options = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "top",
                            fn: function () {
                              return [
                                _c("v-text-field", {
                                  attrs: {
                                    "append-icon": "mdi-magnify",
                                    label: "Search",
                                  },
                                  on: { input: _vm.searchIt },
                                  model: {
                                    value: _vm.searchItem,
                                    callback: function ($$v) {
                                      _vm.searchItem = $$v
                                    },
                                    expression: "searchItem",
                                  },
                                }),
                              ]
                            },
                            proxy: true,
                          },
                          {
                            key: "item.id",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c("td", [
                                  _vm._v(
                                    _vm._s(_vm.students.data.indexOf(item) + 1)
                                  ),
                                ]),
                              ]
                            },
                          },
                          {
                            key: "item.student_number",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "td",
                                  [
                                    item.stat == "1"
                                      ? _c("v-badge", {
                                          staticClass: "mr-4",
                                          attrs: {
                                            dot: "",
                                            small: "",
                                            bordered: "",
                                            color: "success",
                                          },
                                        })
                                      : _c("v-badge", {
                                          staticClass: "mr-4",
                                          attrs: {
                                            dot: "",
                                            small: "",
                                            bordered: "",
                                            color: "red",
                                          },
                                        }),
                                    _vm._v(
                                      "\n                " +
                                        _vm._s(item.student_number) +
                                        "\n              "
                                    ),
                                  ],
                                  1
                                ),
                              ]
                            },
                          },
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-pencil\n              "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-delete-forever "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    directives: [
                                      {
                                        name: "clipboard",
                                        rawName: "v-clipboard",
                                        value: item.code,
                                        expression: "item.code",
                                      },
                                    ],
                                    staticClass: "mr-2 primary--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.copyToClipBoard(item.code)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-qrcode\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c("div", { staticClass: "row" }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v(" mdi-close "),
                              ]),
                              _vm._v("close\n          "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v(" mdi-error "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n        "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SubmittedClearancesComponent.vue?vue&type=template&id=eda91954&":
/*!*******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/SubmittedClearancesComponent.vue?vue&type=template&id=eda91954& ***!
  \*******************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _c(
        "v-card",
        [
          _c(
            "v-card-subtitle",
            {
              staticClass: "white--text text-uppercase elevation-2 mb-0 pb-1",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("span", { staticClass: "text-h6" }, [
                _vm._v(" Submitted Clearances "),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2 mb-0 pb-6 mt-0 pt-2",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c(
                "v-row",
                [
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "4" },
                    },
                    [
                      _c("v-select", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          label: "Select Semester",
                          "item-value": "id",
                          "item-text": "semester",
                          items: _vm.semesters,
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        on: {
                          change: function ($event) {
                            return _vm.semesterChange(_vm.searchItem)
                          },
                        },
                        model: {
                          value: _vm.semester_id,
                          callback: function ($$v) {
                            _vm.semester_id = $$v
                          },
                          expression: "semester_id",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "4" },
                    },
                    [
                      _c("v-text-field", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          "append-icon": "mdi-magnify",
                          label: "Search",
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        on: { input: _vm.searchIt },
                        model: {
                          value: _vm.searchItem,
                          callback: function ($$v) {
                            _vm.searchItem = $$v
                          },
                          expression: "searchItem",
                        },
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c("v-data-table", {
            staticClass: "px-6 pb-6  mt-4",
            attrs: {
              "item-key": "id",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              page: _vm.page,
              pageCount: _vm.numberOfPages,
              items: _vm.submittedclearances.data,
              options: _vm.options,
              "server-items-length": _vm.totalsubmittedclearances,
              "items-per-page": 10,
              "footer-props": {
                itemsPerPageOptions: [5, 10, 15],
                itemsPerPageText: "Clearance Request Per Page",
                "show-current-page": true,
                "show-first-last-page": true,
              },
            },
            on: {
              "update:options": function ($event) {
                _vm.options = $event
              },
            },
            scopedSlots: _vm._u([
              {
                key: "item.datesubmitted",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c(
                      "v-chip",
                      {
                        attrs: {
                          "text-color": "white",
                          color: "success",
                          small: "",
                        },
                      },
                      [
                        _vm._v(
                          "\n           \n            " +
                            _vm._s(item.datesubmitted) +
                            "\n        "
                        ),
                      ]
                    ),
                  ]
                },
              },
              {
                key: "item.actions",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    [
                      _c(
                        "v-btn",
                        {
                          staticClass: "elevation-0 error lighten-1 ml-2",
                          attrs: {
                            loading: _vm.downloadLoading,
                            small: "",
                            dark: "",
                          },
                          on: {
                            click: function ($event) {
                              return _vm.generatePDF(item)
                            },
                          },
                        },
                        [
                          _c("v-icon", { attrs: { "x-small": "" } }, [
                            _vm._v("mdi-file-pdf"),
                          ]),
                          _vm._v("\n                  Download"),
                        ],
                        1
                      ),
                    ],
                  ]
                },
              },
            ]),
          }),
          _vm._v(" "),
          _c(
            "v-snackbar",
            {
              attrs: {
                color: _vm.snackbarColor,
                right: "",
                timeout: "5000",
                outlined: "",
                top: "",
                width: "50",
              },
              scopedSlots: _vm._u([
                {
                  key: "action",
                  fn: function (ref) {
                    var attrs = ref.attrs
                    return [
                      _c(
                        "v-btn",
                        _vm._b(
                          {
                            attrs: { color: _vm.snackbarColor, text: "" },
                            on: {
                              click: function ($event) {
                                _vm.snackbar = false
                              },
                            },
                          },
                          "v-btn",
                          attrs,
                          false
                        ),
                        [
                          _c("v-icon", { attrs: { dark: "", left: "" } }, [
                            _vm._v("\n          mdi-close\n        "),
                          ]),
                          _vm._v("close\n      "),
                        ],
                        1
                      ),
                    ]
                  },
                },
              ]),
              model: {
                value: _vm.snackbar,
                callback: function ($$v) {
                  _vm.snackbar = $$v
                },
                expression: "snackbar",
              },
            },
            [
              _c("v-icon", { attrs: { left: "" } }, [
                _vm._v("\n          mdi-error\n        "),
              ]),
              _vm._v(_vm._s(_vm.text) + "\n\n      "),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/CampusesComponent.vue?vue&type=template&id=07118655&":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/CampusesComponent.vue?vue&type=template&id=07118655& ***!
  \**************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "10" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 mb-2" }, [
                                    _vm._v("mdi-account-plus-outline"),
                                  ]),
                                  _vm._v(
                                    "\r\n                        Add Campus\r\n      \r\n                      "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3 " },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Campus Name",
                                            name: "campus",
                                            type: "text",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.name,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "name",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.name",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Short Name",
                                            name: "short_name",
                                            type: "text",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.short_name,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "short_name",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.short_name",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled:
                                                    _vm.editedItem.name == "" ||
                                                    _vm.editedItem.short_name ==
                                                      ""
                                                      ? true
                                                      : false,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\r\n                      Save\r\n                    "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          items: _vm.campuses,
                          "items-per-page": 7,
                          color: "error",
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [_vm._v(" mdi-pencil ")]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\r\n                mdi-delete-forever\r\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\r\n          mdi-close\r\n        "),
                              ]),
                              _vm._v("close\r\n      "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\r\n          mdi-error\r\n        "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\r\n\r\n      "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/CollegesComponent.vue?vue&type=template&id=34850ec6&":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/CollegesComponent.vue?vue&type=template&id=34850ec6& ***!
  \**************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "10" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 mb-2" }, [
                                    _vm._v("mdi-account-plus-outline"),
                                  ]),
                                  _vm._v(
                                    "\r\n                        Add College\r\n      \r\n                      "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3 " },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "College Name",
                                            name: "campus",
                                            type: "text",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.name,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "name",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.name",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Short Name",
                                            name: "short_name",
                                            type: "text",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.short_name,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "short_name",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.short_name",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-select", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            items: _vm.campuses,
                                            "item-text": "name",
                                            label: "Select Campus",
                                            "item-value": "id",
                                            color: "primary",
                                            dense: "",
                                            "solo-inverted": "",
                                          },
                                          model: {
                                            value: _vm.editedItem.campus_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "campus_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.campus_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled:
                                                    _vm.editedItem.name == "" ||
                                                    _vm.editedItem.short_name ==
                                                      ""
                                                      ? true
                                                      : false,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\r\n                      Save\r\n                    "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          items: _vm.colleges,
                          "items-per-page": 7,
                          color: "error",
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [_vm._v(" mdi-pencil ")]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\r\n                mdi-delete-forever\r\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\r\n          mdi-close\r\n        "),
                              ]),
                              _vm._v("close\r\n      "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\r\n          mdi-error\r\n        "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\r\n\r\n      "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/DashboardComponent.vue?vue&type=template&id=6522ea74&":
/*!***************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/DashboardComponent.vue?vue&type=template&id=6522ea74& ***!
  \***************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-row",
    [
      _c(
        "v-col",
        { attrs: { cols: "12", sm: "12", md: "8" } },
        [
          _c(
            "v-card",
            {
              staticClass: "transparent rounded-lg pa-0",
              attrs: { elevation: "2" },
            },
            [
              _c(
                "v-sheet",
                {
                  staticClass:
                    "transparent\n                grey--text\n                text--darken-2\n                \n                ",
                },
                [
                  _c(
                    "v-card-title",
                    { staticClass: " align-self-start" },
                    [
                      _c(
                        "v-list-item",
                        { attrs: { "two-line": "" } },
                        [
                          _c(
                            "v-list-item-content",
                            [
                              _c(
                                "v-list-item-title",
                                { staticClass: " font-semibold" },
                                [
                                  _c(
                                    "span",
                                    { staticClass: " font-semibold" },
                                    [_vm._v("Clearance Requests Status")]
                                  ),
                                ]
                              ),
                              _vm._v(" "),
                              _c("v-list-item-subtitle", [
                                _vm._v(_vm._s(_vm.semester)),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-card-text",
                    [
                      _c(
                        "v-row",
                        [
                          _c(
                            "v-col",
                            { attrs: { sm: "6", cols: "12" } },
                            [
                              _c("Apex", {
                                attrs: {
                                  datas: [_vm.pendingRequest],
                                  pendingR: [_vm.pendingRequest],
                                },
                              }),
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "v-col",
                            {
                              staticClass:
                                " d-flex flex-column justify-center pl-8",
                              attrs: { sm: "6", cols: "12" },
                            },
                            [
                              _c(
                                "div",
                                { staticClass: "d-flex align-center" },
                                [
                                  _c(
                                    "v-avatar",
                                    {
                                      staticClass: "rounded font-bold",
                                      staticStyle: {
                                        background: "rgba(145, 85, 253, .05)",
                                      },
                                    },
                                    [
                                      _c(
                                        "v-icon",
                                        {
                                          staticClass:
                                            "deep-purple--text text--darken-3 text--accent-2 font-bold",
                                        },
                                        [_vm._v("mdi-note-text")]
                                      ),
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "div",
                                    { staticClass: "ms-4 d-flex flex-column" },
                                    [
                                      _c(
                                        "p",
                                        {
                                          staticClass:
                                            "grey--text text--darken-1 mb-0 text-base",
                                        },
                                        [_vm._v(" Total Clearance Request ")]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "span",
                                        {
                                          staticClass:
                                            "grey--text text--darken-3 font-semibold text-xl",
                                        },
                                        [
                                          _vm._v(
                                            _vm._s(
                                              Number(
                                                _vm.pendingRequest +
                                                  _vm.approvedRequest
                                              ).toLocaleString()
                                            )
                                          ),
                                        ]
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c("v-divider", {
                                staticClass: "ma-4",
                                attrs: { dark: "" },
                              }),
                              _vm._v(" "),
                              _c("table", [
                                _c("tr", [
                                  _c("td", { staticClass: "pb-4" }, [
                                    _c("div", { staticClass: "mb-0" }, [
                                      _c("div", {
                                        staticClass:
                                          "pa-1 d-inline-block rounded-circle me-2",
                                        staticStyle: { background: "#2E7D32" },
                                      }),
                                      _vm._v(" "),
                                      _c(
                                        "span",
                                        {
                                          staticClass:
                                            "grey--text text--darken-1",
                                        },
                                        [_vm._v("Approved Requests")]
                                      ),
                                    ]),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      {
                                        staticClass:
                                          " text-base grey--text text--darken-3 font-semibold ms-4",
                                      },
                                      [
                                        _vm._v(
                                          _vm._s(
                                            Number(
                                              _vm.approvedRequest
                                            ).toLocaleString()
                                          )
                                        ),
                                      ]
                                    ),
                                  ]),
                                  _vm._v(" "),
                                  _c("td", { staticClass: "pb-4" }, [
                                    _c("div", { staticClass: "mb-0" }, [
                                      _c("div", {
                                        staticClass:
                                          "pa-1 d-inline-block rounded-circle me-2",
                                        staticStyle: {
                                          background: "rgba(255,180,0,1)",
                                        },
                                      }),
                                      _vm._v(" "),
                                      _c(
                                        "span",
                                        {
                                          staticClass:
                                            "grey--text text--darken-1",
                                        },
                                        [_vm._v("Pending Requests")]
                                      ),
                                    ]),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      {
                                        staticClass:
                                          " text-base grey--text text--darken-3 font-semibold ms-4",
                                      },
                                      [
                                        _vm._v(
                                          _vm._s(
                                            Number(
                                              _vm.pendingRequest
                                            ).toLocaleString()
                                          )
                                        ),
                                      ]
                                    ),
                                  ]),
                                ]),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-col",
        { attrs: { lg: "6", sm: "6", cols: "12" } },
        [
          _c(
            "v-card",
            { staticClass: "mx-1 mb-1" },
            [
              _c(
                "v-card-title",
                { staticClass: "pa-4 pb-0" },
                [
                  _c(
                    "v-list-item",
                    { attrs: { "two-line": "" } },
                    [
                      _c(
                        "v-list-item-content",
                        [
                          _c("v-list-item-title", { staticClass: "headline" }, [
                            _vm._v(
                              "\n                   Completed Clearances\n                "
                            ),
                          ]),
                          _vm._v(" "),
                          _c("v-list-item-subtitle", [
                            _vm._v(_vm._s(_vm.semester)),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-card-text",
                { staticClass: "pa-4 pt-0" },
                [
                  _c(
                    "v-row",
                    { attrs: { "no-gutters": "" } },
                    [
                      _c(
                        "v-col",
                        { staticClass: "my-auto", attrs: { cols: "6" } },
                        [
                          _c(
                            "span",
                            {
                              staticClass: "ml-4",
                              staticStyle: { "font-size": "42px" },
                            },
                            [
                              _vm._v(
                                _vm._s(_vm.completed) + " \n                "
                              ),
                            ]
                          ),
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "v-col",
                        { staticClass: "pr-8", attrs: { cols: "6" } },
                        [
                          _c("v-sparkline", {
                            staticClass: "pb-2",
                            attrs: {
                              value: _vm.value,
                              gradient: _vm.gradient,
                              smooth: _vm.radius || false,
                              padding: _vm.padding,
                              "line-width": _vm.width,
                              "stroke-linecap": _vm.lineCap,
                              "gradient-direction": _vm.gradientDirection,
                              fill: _vm.fill,
                              type: _vm.type,
                              "auto-line-width": _vm.autoLineWidth,
                              "auto-draw": "",
                            },
                          }),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-row",
                    {
                      staticClass: "justify-space-between",
                      attrs: { "no-gutters": "" },
                    },
                    [
                      _c(
                        "v-col",
                        {
                          staticClass: "text-center ma-2",
                          attrs: { cols: "12", lg: "3" },
                        },
                        [
                          _c(
                            "div",
                            { staticClass: "subtext" },
                            [
                              _vm._v(
                                "\n                  " +
                                  _vm._s(_vm.pendingRequest) +
                                  "  "
                              ),
                              _c("v-icon", { attrs: { color: "warning" } }, [
                                _vm._v(" mdi-account-clock"),
                              ]),
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c("div", { staticClass: "subtext-index" }, [
                            _vm._v("Pending Request(s)"),
                          ]),
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "v-col",
                        {
                          staticClass: "text-center ma-2",
                          attrs: { cols: "12", lg: "3" },
                        },
                        [
                          _c(
                            "div",
                            { staticClass: "subtext" },
                            [
                              _vm._v(
                                "\n                  " +
                                  _vm._s(_vm.approvedRequest) +
                                  " "
                              ),
                              _c("v-icon", { attrs: { color: "success" } }, [
                                _vm._v(" mdi-check-decagram"),
                              ]),
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c("div", { staticClass: "subtext-index" }, [
                            _vm._v("Approved Request(s)"),
                          ]),
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "v-col",
                        {
                          staticClass: "text-center ma-2",
                          attrs: { cols: "12", lg: "3" },
                        },
                        [
                          _c(
                            "div",
                            { staticClass: "subtext" },
                            [
                              _vm._v(
                                "\n                  " +
                                  _vm._s(_vm.totalClearanceRequest) +
                                  " "
                              ),
                              _c("v-icon", { attrs: { color: "primary" } }, [
                                _vm._v(" mdi-list-status"),
                              ]),
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c("div", { staticClass: "subtext-index" }, [
                            _vm._v("Total Request(s)"),
                          ]),
                        ]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-col",
        { attrs: { lg: "3", sm: "3", cols: "12" } },
        [
          _c(
            "v-card",
            { staticClass: "mx-auto " },
            [
              _c(
                "v-card-title",
                { staticClass: "pa-4 pb-0" },
                [
                  _c(
                    "v-list-item",
                    { attrs: { "two-line": "" } },
                    [
                      _c(
                        "v-list-item-content",
                        [
                          _c("v-list-item-title", { staticClass: "headline" }, [
                            _vm._v(
                              "\n                   Active Account(s)\n                "
                            ),
                          ]),
                          _vm._v(" "),
                          _c("v-list-item-subtitle", [
                            _vm._v(_vm._s(_vm.semester)),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-card-text",
                { staticClass: "pa-4 pt-0" },
                [
                  _c(
                    "v-row",
                    { attrs: { "no-gutters": "" } },
                    [
                      _c(
                        "v-col",
                        {
                          staticClass: "my-auto text-center",
                          attrs: { cols: "12" },
                        },
                        [
                          _c(
                            "span",
                            {
                              staticClass: "success--text",
                              staticStyle: { "font-size": "42px" },
                            },
                            [
                              _vm._v(
                                _vm._s(_vm.totalActivatedAccount) +
                                  " \n                "
                              ),
                            ]
                          ),
                        ]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-col",
        { attrs: { lg: "3", sm: "3", cols: "12" } },
        [
          _c(
            "v-card",
            { staticClass: "mx-auto " },
            [
              _c(
                "v-card-title",
                { staticClass: "pa-4 pb-0" },
                [
                  _c(
                    "v-list-item",
                    { attrs: { "two-line": "" } },
                    [
                      _c(
                        "v-list-item-content",
                        [
                          _c("v-list-item-title", { staticClass: "headline" }, [
                            _vm._v(
                              "\n                   Total Student(s)\n                "
                            ),
                          ]),
                          _vm._v(" "),
                          _c("v-list-item-subtitle", [
                            _vm._v(_vm._s(_vm.semester)),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-card-text",
                { staticClass: "pa-4 pt-0" },
                [
                  _c(
                    "v-row",
                    { attrs: { "no-gutters": "" } },
                    [
                      _c(
                        "v-col",
                        {
                          staticClass: "my-auto text-center",
                          attrs: { cols: "12" },
                        },
                        [
                          _c(
                            "span",
                            {
                              staticClass: "success--text",
                              staticStyle: { "font-size": "42px" },
                            },
                            [
                              _vm._v(
                                _vm._s(_vm.totalStudent) + " \n                "
                              ),
                            ]
                          ),
                        ]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-col",
        { attrs: { cols: "12", md: "12" } },
        [
          _c("v-data-table", {
            staticClass: "elevation-1",
            attrs: {
              "item-key": "name",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              items: _vm.offices,
              "sort-by": "calories",
              color: "error",
            },
            scopedSlots: _vm._u([
              {
                key: "top",
                fn: function () {
                  return [
                    _c(
                      "v-toolbar",
                      {
                        staticClass: "white--text",
                        attrs: {
                          flat: "",
                          color: "blue-grey darken-4",
                          height: "40",
                        },
                      },
                      [
                        _c(
                          "v-toolbar-title",
                          [
                            _c(
                              "v-icon",
                              {
                                staticClass: "mr-1 white--text",
                                attrs: { small: "" },
                              },
                              [_vm._v(" mdi-city ")]
                            ),
                            _vm._v(" "),
                            _c("span", { staticClass: "caption" }, [
                              _vm._v("Clearance Request Status by Office"),
                            ]),
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c("v-spacer"),
                      ],
                      1
                    ),
                  ]
                },
                proxy: true,
              },
            ]),
          }),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/DashboardComponentt.vue?vue&type=template&id=42f41cb0&":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/DashboardComponentt.vue?vue&type=template&id=42f41cb0& ***!
  \****************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    { attrs: { id: "dashboard", fluid: "", tag: "section" } },
    [
      _c(
        "v-row",
        [
          _c(
            "v-col",
            { attrs: { cols: "12", lg: "4" } },
            [
              _c(
                "base-material-chart-card",
                {
                  attrs: {
                    data: _vm.emailsSubscriptionChart.data,
                    options: _vm.emailsSubscriptionChart.options,
                    "responsive-options":
                      _vm.emailsSubscriptionChart.responsiveOptions,
                    color: "#E91E63",
                    "hover-reveal": "",
                    type: "Bar",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "reveal-actions",
                      fn: function () {
                        return [
                          _c(
                            "v-tooltip",
                            {
                              attrs: { bottom: "" },
                              scopedSlots: _vm._u([
                                {
                                  key: "activator",
                                  fn: function (ref) {
                                    var attrs = ref.attrs
                                    var on = ref.on
                                    return [
                                      _c(
                                        "v-btn",
                                        _vm._g(
                                          _vm._b(
                                            {
                                              attrs: {
                                                color: "info",
                                                icon: "",
                                              },
                                            },
                                            "v-btn",
                                            attrs,
                                            false
                                          ),
                                          on
                                        ),
                                        [
                                          _c(
                                            "v-icon",
                                            { attrs: { color: "info" } },
                                            [
                                              _vm._v(
                                                "\n                  mdi-refresh\n                "
                                              ),
                                            ]
                                          ),
                                        ],
                                        1
                                      ),
                                    ]
                                  },
                                },
                              ]),
                            },
                            [_vm._v(" "), _c("span", [_vm._v("Refresh")])]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-tooltip",
                            {
                              attrs: { bottom: "" },
                              scopedSlots: _vm._u([
                                {
                                  key: "activator",
                                  fn: function (ref) {
                                    var attrs = ref.attrs
                                    var on = ref.on
                                    return [
                                      _c(
                                        "v-btn",
                                        _vm._g(
                                          _vm._b(
                                            { attrs: { light: "", icon: "" } },
                                            "v-btn",
                                            attrs,
                                            false
                                          ),
                                          on
                                        ),
                                        [_c("v-icon", [_vm._v("mdi-pencil")])],
                                        1
                                      ),
                                    ]
                                  },
                                },
                              ]),
                            },
                            [_vm._v(" "), _c("span", [_vm._v("Change Date")])]
                          ),
                        ]
                      },
                      proxy: true,
                    },
                    {
                      key: "actions",
                      fn: function () {
                        return [
                          _c(
                            "v-icon",
                            { staticClass: "mr-1", attrs: { small: "" } },
                            [
                              _vm._v(
                                "\n            mdi-clock-outline\n          "
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              staticClass:
                                "caption grey--text font-weight-light",
                            },
                            [_vm._v("updated 10 minutes ago")]
                          ),
                        ]
                      },
                      proxy: true,
                    },
                  ]),
                },
                [
                  _vm._v(" "),
                  _c(
                    "h4",
                    { staticClass: "card-title font-weight-light mt-2 ml-2" },
                    [_vm._v("\n          Website Views\n        ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "p",
                    {
                      staticClass: "d-inline-flex font-weight-light ml-2 mt-1",
                    },
                    [_vm._v("\n          Last Campaign Performance\n        ")]
                  ),
                ]
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-col",
            { attrs: { cols: "12", lg: "4" } },
            [
              _c(
                "base-material-chart-card",
                {
                  attrs: {
                    data: _vm.dailySalesChart.data,
                    options: _vm.dailySalesChart.options,
                    color: "success",
                    "hover-reveal": "",
                    type: "Line",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "reveal-actions",
                      fn: function () {
                        return [
                          _c(
                            "v-tooltip",
                            {
                              attrs: { bottom: "" },
                              scopedSlots: _vm._u([
                                {
                                  key: "activator",
                                  fn: function (ref) {
                                    var attrs = ref.attrs
                                    var on = ref.on
                                    return [
                                      _c(
                                        "v-btn",
                                        _vm._g(
                                          _vm._b(
                                            {
                                              attrs: {
                                                color: "info",
                                                icon: "",
                                              },
                                            },
                                            "v-btn",
                                            attrs,
                                            false
                                          ),
                                          on
                                        ),
                                        [
                                          _c(
                                            "v-icon",
                                            { attrs: { color: "info" } },
                                            [
                                              _vm._v(
                                                "\n                  mdi-refresh\n                "
                                              ),
                                            ]
                                          ),
                                        ],
                                        1
                                      ),
                                    ]
                                  },
                                },
                              ]),
                            },
                            [_vm._v(" "), _c("span", [_vm._v("Refresh")])]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-tooltip",
                            {
                              attrs: { bottom: "" },
                              scopedSlots: _vm._u([
                                {
                                  key: "activator",
                                  fn: function (ref) {
                                    var attrs = ref.attrs
                                    var on = ref.on
                                    return [
                                      _c(
                                        "v-btn",
                                        _vm._g(
                                          _vm._b(
                                            { attrs: { light: "", icon: "" } },
                                            "v-btn",
                                            attrs,
                                            false
                                          ),
                                          on
                                        ),
                                        [_c("v-icon", [_vm._v("mdi-pencil")])],
                                        1
                                      ),
                                    ]
                                  },
                                },
                              ]),
                            },
                            [_vm._v(" "), _c("span", [_vm._v("Change Date")])]
                          ),
                        ]
                      },
                      proxy: true,
                    },
                    {
                      key: "actions",
                      fn: function () {
                        return [
                          _c(
                            "v-icon",
                            { staticClass: "mr-1", attrs: { small: "" } },
                            [
                              _vm._v(
                                "\n            mdi-clock-outline\n          "
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              staticClass:
                                "caption grey--text font-weight-light",
                            },
                            [_vm._v("updated 4 minutes ago")]
                          ),
                        ]
                      },
                      proxy: true,
                    },
                  ]),
                },
                [
                  _vm._v(" "),
                  _c(
                    "h4",
                    { staticClass: "card-title font-weight-light mt-2 ml-2" },
                    [_vm._v("\n          Daily Sales\n        ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "p",
                    {
                      staticClass: "d-inline-flex font-weight-light ml-2 mt-1",
                    },
                    [
                      _c("v-icon", { attrs: { color: "green", small: "" } }, [
                        _vm._v("\n            mdi-arrow-up\n          "),
                      ]),
                      _vm._v(" "),
                      _c("span", { staticClass: "green--text" }, [
                        _vm._v("55%"),
                      ]),
                      _vm._v(
                        " \n          increase in today's sales\n        "
                      ),
                    ],
                    1
                  ),
                ]
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-col",
            { attrs: { cols: "12", lg: "4" } },
            [
              _c(
                "base-material-chart-card",
                {
                  attrs: {
                    data: _vm.dataCompletedTasksChart.data,
                    options: _vm.dataCompletedTasksChart.options,
                    "hover-reveal": "",
                    color: "info",
                    type: "Line",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "reveal-actions",
                      fn: function () {
                        return [
                          _c(
                            "v-tooltip",
                            {
                              attrs: { bottom: "" },
                              scopedSlots: _vm._u([
                                {
                                  key: "activator",
                                  fn: function (ref) {
                                    var attrs = ref.attrs
                                    var on = ref.on
                                    return [
                                      _c(
                                        "v-btn",
                                        _vm._g(
                                          _vm._b(
                                            {
                                              attrs: {
                                                color: "info",
                                                icon: "",
                                              },
                                            },
                                            "v-btn",
                                            attrs,
                                            false
                                          ),
                                          on
                                        ),
                                        [
                                          _c(
                                            "v-icon",
                                            { attrs: { color: "info" } },
                                            [
                                              _vm._v(
                                                "\n                  mdi-refresh\n                "
                                              ),
                                            ]
                                          ),
                                        ],
                                        1
                                      ),
                                    ]
                                  },
                                },
                              ]),
                            },
                            [_vm._v(" "), _c("span", [_vm._v("Refresh")])]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-tooltip",
                            {
                              attrs: { bottom: "" },
                              scopedSlots: _vm._u([
                                {
                                  key: "activator",
                                  fn: function (ref) {
                                    var attrs = ref.attrs
                                    var on = ref.on
                                    return [
                                      _c(
                                        "v-btn",
                                        _vm._g(
                                          _vm._b(
                                            { attrs: { light: "", icon: "" } },
                                            "v-btn",
                                            attrs,
                                            false
                                          ),
                                          on
                                        ),
                                        [_c("v-icon", [_vm._v("mdi-pencil")])],
                                        1
                                      ),
                                    ]
                                  },
                                },
                              ]),
                            },
                            [_vm._v(" "), _c("span", [_vm._v("Change Date")])]
                          ),
                        ]
                      },
                      proxy: true,
                    },
                    {
                      key: "actions",
                      fn: function () {
                        return [
                          _c(
                            "v-icon",
                            { staticClass: "mr-1", attrs: { small: "" } },
                            [
                              _vm._v(
                                "\n            mdi-clock-outline\n          "
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              staticClass:
                                "caption grey--text font-weight-light",
                            },
                            [_vm._v("campaign sent 26 minutes ago")]
                          ),
                        ]
                      },
                      proxy: true,
                    },
                  ]),
                },
                [
                  _vm._v(" "),
                  _c(
                    "h3",
                    { staticClass: "card-title font-weight-light mt-2 ml-2" },
                    [_vm._v("\n          Completed Tasks\n        ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "p",
                    {
                      staticClass: "d-inline-flex font-weight-light ml-2 mt-1",
                    },
                    [
                      _vm._v(
                        "\n          Last Last Campaign Performance\n        "
                      ),
                    ]
                  ),
                ]
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-col",
            { attrs: { cols: "12", sm: "6", lg: "3" } },
            [
              _c("base-material-stats-card", {
                attrs: {
                  color: "info",
                  icon: "mdi-twitter",
                  title: "Followers",
                  value: "+245",
                  "sub-icon": "mdi-clock",
                  "sub-text": "Just Updated",
                },
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-col",
            { attrs: { cols: "12", sm: "6", lg: "3" } },
            [
              _c("base-material-stats-card", {
                attrs: {
                  color: "primary",
                  icon: "mdi-poll",
                  title: "Website Visits",
                  value: "75.521",
                  "sub-icon": "mdi-tag",
                  "sub-text": "Tracked from Google Analytics",
                },
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-col",
            { attrs: { cols: "12", sm: "6", lg: "3" } },
            [
              _c("base-material-stats-card", {
                attrs: {
                  color: "success",
                  icon: "mdi-store",
                  title: "Revenue",
                  value: "$ 34,245",
                  "sub-icon": "mdi-calendar",
                  "sub-text": "Last 24 Hours",
                },
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-col",
            { attrs: { cols: "12", sm: "6", lg: "3" } },
            [
              _c("base-material-stats-card", {
                attrs: {
                  color: "orange",
                  icon: "mdi-sofa",
                  title: "Bookings",
                  value: "184",
                  "sub-icon": "mdi-alert",
                  "sub-icon-color": "red",
                  "sub-text": "Get More Space...",
                },
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-col",
            { attrs: { cols: "12", md: "6" } },
            [
              _c(
                "base-material-card",
                {
                  staticClass: "px-5 py-3",
                  attrs: { color: "warning" },
                  scopedSlots: _vm._u([
                    {
                      key: "heading",
                      fn: function () {
                        return [
                          _c(
                            "div",
                            { staticClass: "display-2 font-weight-light" },
                            [
                              _vm._v(
                                "\n            Employees Stats\n          "
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "div",
                            { staticClass: "subtitle-1 font-weight-light" },
                            [
                              _vm._v(
                                "\n            New employees on 15th September, 2016\n          "
                              ),
                            ]
                          ),
                        ]
                      },
                      proxy: true,
                    },
                  ]),
                },
                [
                  _vm._v(" "),
                  _c(
                    "v-card-text",
                    [
                      _c("v-data-table", {
                        attrs: { headers: _vm.headers, items: _vm.items },
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-col",
            { attrs: { cols: "12", md: "6" } },
            [
              _c(
                "base-material-card",
                {
                  staticClass: "px-5 py-3",
                  scopedSlots: _vm._u([
                    {
                      key: "heading",
                      fn: function () {
                        return [
                          _c(
                            "v-tabs",
                            {
                              attrs: {
                                "background-color": "transparent",
                                "slider-color": "white",
                              },
                              model: {
                                value: _vm.tabs,
                                callback: function ($$v) {
                                  _vm.tabs = $$v
                                },
                                expression: "tabs",
                              },
                            },
                            [
                              _c(
                                "span",
                                {
                                  staticClass:
                                    "subheading font-weight-light mx-3",
                                  staticStyle: { "align-self": "center" },
                                },
                                [_vm._v("Tasks:")]
                              ),
                              _vm._v(" "),
                              _c(
                                "v-tab",
                                { staticClass: "mr-3" },
                                [
                                  _c("v-icon", { staticClass: "mr-2" }, [
                                    _vm._v(
                                      "\n                mdi-bug\n              "
                                    ),
                                  ]),
                                  _vm._v("\n              Bugs\n            "),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-tab",
                                { staticClass: "mr-3" },
                                [
                                  _c("v-icon", { staticClass: "mr-2" }, [
                                    _vm._v(
                                      "\n                mdi-code-tags\n              "
                                    ),
                                  ]),
                                  _vm._v(
                                    "\n              Website\n            "
                                  ),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-tab",
                                [
                                  _c("v-icon", { staticClass: "mr-2" }, [
                                    _vm._v(
                                      "\n                mdi-cloud\n              "
                                    ),
                                  ]),
                                  _vm._v(
                                    "\n              Server\n            "
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ]
                      },
                      proxy: true,
                    },
                  ]),
                },
                [
                  _vm._v(" "),
                  _c(
                    "v-tabs-items",
                    {
                      staticClass: "transparent",
                      model: {
                        value: _vm.tabs,
                        callback: function ($$v) {
                          _vm.tabs = $$v
                        },
                        expression: "tabs",
                      },
                    },
                    _vm._l(3, function (n) {
                      return _c(
                        "v-tab-item",
                        { key: n },
                        [
                          _c(
                            "v-card-text",
                            [
                              _vm._l(_vm.tasks[_vm.tabs], function (task, i) {
                                return [
                                  _c(
                                    "v-row",
                                    { key: i, attrs: { align: "center" } },
                                    [
                                      _c(
                                        "v-col",
                                        { attrs: { cols: "1" } },
                                        [
                                          _c(
                                            "v-list-item-action",
                                            [
                                              _c("v-checkbox", {
                                                attrs: { color: "secondary" },
                                                model: {
                                                  value: task.value,
                                                  callback: function ($$v) {
                                                    _vm.$set(task, "value", $$v)
                                                  },
                                                  expression: "task.value",
                                                },
                                              }),
                                            ],
                                            1
                                          ),
                                        ],
                                        1
                                      ),
                                      _vm._v(" "),
                                      _c("v-col", { attrs: { cols: "9" } }, [
                                        _c("div", {
                                          staticClass: "font-weight-light",
                                          domProps: {
                                            textContent: _vm._s(task.text),
                                          },
                                        }),
                                      ]),
                                      _vm._v(" "),
                                      _c(
                                        "v-col",
                                        {
                                          staticClass: "text-right",
                                          attrs: { cols: "2" },
                                        },
                                        [
                                          _c(
                                            "v-icon",
                                            { staticClass: "mx-1" },
                                            [
                                              _vm._v(
                                                "\n                      mdi-pencil\n                    "
                                              ),
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "v-icon",
                                            {
                                              staticClass: "mx-1",
                                              attrs: { color: "error" },
                                            },
                                            [
                                              _vm._v(
                                                "\n                      mdi-close\n                    "
                                              ),
                                            ]
                                          ),
                                        ],
                                        1
                                      ),
                                    ],
                                    1
                                  ),
                                ]
                              }),
                            ],
                            2
                          ),
                        ],
                        1
                      )
                    }),
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/GraduationsComponent.vue?vue&type=template&id=cf088dba&":
/*!*****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/GraduationsComponent.vue?vue&type=template&id=cf088dba& ***!
  \*****************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "10" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 mb-2" }, [
                                    _vm._v("mdi-account-plus-outline"),
                                  ]),
                                  _vm._v(
                                    "\r\n                        Add Graduation\r\n      \r\n                      "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3 " },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Graduation Name",
                                            name: "graduation",
                                            type: "text",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.graduation,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "graduation",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.graduation",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled:
                                                    _vm.editedItem.name == "" ||
                                                    _vm.editedItem.short_name ==
                                                      ""
                                                      ? true
                                                      : false,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\r\n                      Save\r\n                    "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          items: _vm.graduations,
                          "items-per-page": 5,
                          color: "error",
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [_vm._v(" mdi-pencil ")]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\r\n                mdi-delete-forever\r\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\r\n          mdi-close\r\n        "),
                              ]),
                              _vm._v("close\r\n      "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\r\n          mdi-error\r\n        "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\r\n\r\n      "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/ProgramsComponent.vue?vue&type=template&id=8135ae1a&":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/ProgramsComponent.vue?vue&type=template&id=8135ae1a& ***!
  \**************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "10" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 mb-2" }, [
                                    _vm._v("mdi-account-plus-outline"),
                                  ]),
                                  _vm._v(
                                    "\r\n                        Add Program\r\n      \r\n                      "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3 " },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Program Name",
                                            name: "program",
                                            type: "text",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.name,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "name",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.name",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Short Name",
                                            name: "short_name",
                                            type: "text",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.short_name,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "short_name",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.short_name",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-select", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            items: _vm.campuses,
                                            "item-text": "name",
                                            label: "Select Campus",
                                            "item-value": "id",
                                            color: "primary",
                                            dense: "",
                                            "solo-inverted": "",
                                          },
                                          model: {
                                            value: _vm.editedItem.campus_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "campus_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.campus_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-select", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            items: _vm.colleges,
                                            "item-text": "name",
                                            label: "Select College",
                                            "item-value": "id",
                                            color: "primary",
                                            dense: "",
                                            "solo-inverted": "",
                                          },
                                          model: {
                                            value: _vm.editedItem.college_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "college_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.college_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled:
                                                    _vm.editedItem.name == "" ||
                                                    _vm.editedItem.short_name ==
                                                      ""
                                                      ? true
                                                      : false,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\r\n                      Save\r\n                    "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          items: _vm.programs,
                          "items-per-page": 5,
                          color: "error",
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [_vm._v(" mdi-pencil ")]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\r\n                mdi-delete-forever\r\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                          {
                            key: "item.college.short_name",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c("span", { staticClass: "text-uppercase" }, [
                                  _vm._v(_vm._s(item.college.short_name)),
                                ]),
                              ]
                            },
                          },
                          {
                            key: "item.campus.short_name",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c("span", { staticClass: "text-uppercase" }, [
                                  _vm._v(_vm._s(item.campus.short_name)),
                                ]),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\r\n          mdi-close\r\n        "),
                              ]),
                              _vm._v("close\r\n      "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\r\n          mdi-error\r\n        "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\r\n\r\n      "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/PurposesComponent.vue?vue&type=template&id=38591be6&":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/PurposesComponent.vue?vue&type=template&id=38591be6& ***!
  \**************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "10" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 mb-2" }, [
                                    _vm._v("mdi-account-plus-outline"),
                                  ]),
                                  _vm._v(
                                    "\r\n                        Add Semester\r\n      \r\n                      "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3 " },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Code",
                                            name: "code",
                                            type: "text",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.code,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "code",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.code",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Purpose Name",
                                            name: "purpose",
                                            type: "text",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.purpose,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "purpose",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.purpose",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled:
                                                    _vm.editedItem.name == "" ||
                                                    _vm.editedItem.short_name ==
                                                      ""
                                                      ? true
                                                      : false,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\r\n                      Save\r\n                    "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          items: _vm.purposes,
                          "items-per-page": 5,
                          color: "error",
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [_vm._v(" mdi-pencil ")]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\r\n                mdi-delete-forever\r\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\r\n          mdi-close\r\n        "),
                              ]),
                              _vm._v("close\r\n      "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\r\n          mdi-error\r\n        "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\r\n\r\n      "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SectionsComponent.vue?vue&type=template&id=5340cb94&":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/SectionsComponent.vue?vue&type=template&id=5340cb94& ***!
  \**************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("v-data-table", {
    staticClass: "elevation-1",
    attrs: {
      "item-key": "name",
      loading: _vm.loading,
      "loading-text": "Loading... Please wait",
      headers: _vm.headers,
      items: _vm.sections,
      "sort-by": "calories",
      color: "error",
    },
    scopedSlots: _vm._u([
      {
        key: "top",
        fn: function () {
          return [
            _c(
              "v-toolbar",
              { attrs: { flat: "", color: "white" } },
              [
                _c("v-toolbar-title", [_vm._v("Sections")]),
                _vm._v(" "),
                _c("v-spacer"),
                _vm._v(" "),
                _c(
                  "v-dialog",
                  {
                    attrs: { "max-width": "500px" },
                    scopedSlots: _vm._u([
                      {
                        key: "activator",
                        fn: function (ref) {
                          var on = ref.on
                          var attrs = ref.attrs
                          return [
                            _c(
                              "v-btn",
                              _vm._g(
                                _vm._b(
                                  {
                                    staticClass: "mb-2",
                                    attrs: { color: "primary", dark: "" },
                                  },
                                  "v-btn",
                                  attrs,
                                  false
                                ),
                                on
                              ),
                              [_vm._v("\n            New Item\n          ")]
                            ),
                          ]
                        },
                      },
                    ]),
                    model: {
                      value: _vm.dialog,
                      callback: function ($$v) {
                        _vm.dialog = $$v
                      },
                      expression: "dialog",
                    },
                  },
                  [
                    _vm._v(" "),
                    _c(
                      "v-card",
                      [
                        _c("v-card-title", [
                          _c("span", { staticClass: "headline" }, [
                            _vm._v(_vm._s(_vm.formTitle)),
                          ]),
                        ]),
                        _vm._v(" "),
                        _c(
                          "v-card-text",
                          [
                            _c(
                              "v-container",
                              { attrs: { fluid: "" } },
                              [
                                _c(
                                  "v-row",
                                  [
                                    _c(
                                      "v-col",
                                      {
                                        attrs: {
                                          cols: "12",
                                          sm: "12",
                                          md: "12",
                                        },
                                      },
                                      [
                                        _c("v-text-field", {
                                          attrs: { label: "College Name" },
                                          model: {
                                            value: _vm.editedItem.name,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "name",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.name",
                                          },
                                        }),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-col",
                                      {
                                        attrs: {
                                          cols: "12",
                                          sm: "12",
                                          md: "12",
                                        },
                                      },
                                      [
                                        _c("v-text-field", {
                                          attrs: { label: "Campus" },
                                          model: {
                                            value: _vm.editedItem.campus.name,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem.campus,
                                                "name",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.campus.name",
                                          },
                                        }),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "v-card-actions",
                          [
                            _c("v-spacer"),
                            _vm._v(" "),
                            _c(
                              "v-btn",
                              {
                                attrs: { color: "blue darken-1", text: "" },
                                on: { click: _vm.close },
                              },
                              [_vm._v("\n              Cancel\n            ")]
                            ),
                            _vm._v(" "),
                            _c(
                              "v-btn",
                              {
                                attrs: { color: "blue darken-1", text: "" },
                                on: { click: _vm.save },
                              },
                              [_vm._v("\n              Save\n            ")]
                            ),
                          ],
                          1
                        ),
                      ],
                      1
                    ),
                  ],
                  1
                ),
              ],
              1
            ),
          ]
        },
        proxy: true,
      },
      {
        key: "item.actions",
        fn: function (ref) {
          var item = ref.item
          return [
            _c(
              "v-icon",
              {
                staticClass: "mr-2",
                attrs: { small: "" },
                on: {
                  click: function ($event) {
                    return _vm.editItem(item)
                  },
                },
              },
              [_vm._v("\n      mdi-pencil\n    ")]
            ),
          ]
        },
      },
      {
        key: "no-data",
        fn: function () {
          return [
            _c(
              "v-btn",
              { attrs: { color: "primary" }, on: { click: _vm.initialize } },
              [_vm._v("\n      Reset\n    ")]
            ),
          ]
        },
        proxy: true,
      },
    ]),
  })
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SemestersComponent.vue?vue&type=template&id=05da262d&":
/*!***************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/SemestersComponent.vue?vue&type=template&id=05da262d& ***!
  \***************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "10" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 mb-2" }, [
                                    _vm._v("mdi-account-plus-outline"),
                                  ]),
                                  _vm._v(
                                    "\r\n                        Add Semester\r\n      \r\n                      "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3 " },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Code",
                                            name: "code",
                                            type: "text",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.code,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "code",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.code",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Semester Name",
                                            name: "semester",
                                            type: "text",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.semester,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "semester",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.semester",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "From",
                                            name: "from",
                                            type: "date",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.from,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "from",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.from",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "To",
                                            name: "to",
                                            type: "date",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.to,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "to",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.to",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled:
                                                    _vm.editedItem.name == "" ||
                                                    _vm.editedItem.short_name ==
                                                      ""
                                                      ? true
                                                      : false,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\r\n                      Save\r\n                    "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          items: _vm.semesters,
                          "items-per-page": 5,
                          color: "error",
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [_vm._v(" mdi-pencil ")]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\r\n                mdi-delete-forever\r\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\r\n          mdi-close\r\n        "),
                              ]),
                              _vm._v("close\r\n      "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\r\n          mdi-error\r\n        "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\r\n\r\n      "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=template&id=3b4eadc0&":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=template&id=3b4eadc0& ***!
  \********************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-card",
    [
      _c(
        "v-container",
        [
          _c("v-data-table", {
            staticClass: "elevation-0",
            attrs: {
              "item-key": "id",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              page: _vm.page + 1,
              pageCount: _vm.numberOfPages,
              items: _vm.users.data,
              options: _vm.options,
              "server-items-length": _vm.totalUsers,
              "items-per-page": 10,
              "footer-props": {
                itemsPerPageOptions: [5, 10, 15],
                itemsPerPageText: "Users Per Page",
                "show-current-page": true,
                "show-first-last-page": true,
              },
            },
            on: {
              "update:options": function ($event) {
                _vm.options = $event
              },
            },
            scopedSlots: _vm._u([
              {
                key: "top",
                fn: function () {
                  return [
                    _c("v-text-field", {
                      attrs: { "append-icon": "mdi-magnify", label: "Search" },
                      on: { input: _vm.searchIt },
                    }),
                    _vm._v(" "),
                    _c(
                      "v-toolbar",
                      { attrs: { flat: "", color: "white" } },
                      [
                        _c("v-toolbar-title", [_vm._v("User Account List")]),
                        _vm._v(" "),
                        _c("v-spacer"),
                        _vm._v(" "),
                        _c(
                          "v-dialog",
                          {
                            attrs: { "max-width": "500px" },
                            scopedSlots: _vm._u([
                              {
                                key: "activator",
                                fn: function (ref) {
                                  var on = ref.on
                                  var attrs = ref.attrs
                                  return undefined
                                },
                              },
                            ]),
                            model: {
                              value: _vm.dialog,
                              callback: function ($$v) {
                                _vm.dialog = $$v
                              },
                              expression: "dialog",
                            },
                          },
                          [
                            _vm._v(" "),
                            _c(
                              "v-card",
                              [
                                _c(
                                  "v-card-title",
                                  { staticClass: "primary white--text" },
                                  [
                                    _c(
                                      "v-icon",
                                      {
                                        staticClass: "white--text",
                                        staticStyle: { "padding-right": "8px" },
                                      },
                                      [_vm._v(_vm._s(_vm.formIcon))]
                                    ),
                                    _vm._v(" "),
                                    _c("span", { staticClass: "headline" }, [
                                      _vm._v(_vm._s(_vm.formTitle)),
                                    ]),
                                  ],
                                  1
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-form",
                                  {
                                    attrs: { method: "post" },
                                    on: {
                                      submit: function ($event) {
                                        $event.stopPropagation()
                                        $event.preventDefault()
                                        return _vm.save.apply(null, arguments)
                                      },
                                    },
                                    model: {
                                      value: _vm.valid,
                                      callback: function ($$v) {
                                        _vm.valid = $$v
                                      },
                                      expression: "valid",
                                    },
                                  },
                                  [
                                    _c(
                                      "v-card-text",
                                      [
                                        _c(
                                          "v-container",
                                          [
                                            _c(
                                              "v-row",
                                              [
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-text-field", {
                                                      attrs: {
                                                        label: "Name",
                                                        rules: [
                                                          _vm.rules.required,
                                                          _vm.rules.min,
                                                        ],
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.editedItem.name,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.editedItem,
                                                            "name",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "editedItem.name",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                                _vm._v(" "),
                                                _vm.editedIndex == -1
                                                  ? _c(
                                                      "v-col",
                                                      {
                                                        attrs: {
                                                          cols: "12",
                                                          sm: "12",
                                                        },
                                                      },
                                                      [
                                                        _c("v-text-field", {
                                                          attrs: {
                                                            type: "password",
                                                            color: "primary",
                                                            label:
                                                              "Type Password",
                                                          },
                                                          model: {
                                                            value:
                                                              _vm.editedItem
                                                                .password,
                                                            callback: function (
                                                              $$v
                                                            ) {
                                                              _vm.$set(
                                                                _vm.editedItem,
                                                                "password",
                                                                $$v
                                                              )
                                                            },
                                                            expression:
                                                              "editedItem.password",
                                                          },
                                                        }),
                                                      ],
                                                      1
                                                    )
                                                  : _vm._e(),
                                                _vm._v(" "),
                                                _vm.editedIndex > -1
                                                  ? _c(
                                                      "v-col",
                                                      {
                                                        attrs: {
                                                          cols: "12",
                                                          sm: "12",
                                                        },
                                                      },
                                                      [
                                                        _c("v-text-field", {
                                                          attrs: {
                                                            type: "password",
                                                            color: "primary",
                                                            label:
                                                              "Type Password",
                                                            rules: [
                                                              _vm.rules
                                                                .required,
                                                              _vm.rules.min,
                                                            ],
                                                          },
                                                          model: {
                                                            value:
                                                              _vm.editedItem
                                                                .password,
                                                            callback: function (
                                                              $$v
                                                            ) {
                                                              _vm.$set(
                                                                _vm.editedItem,
                                                                "password",
                                                                $$v
                                                              )
                                                            },
                                                            expression:
                                                              "editedItem.password",
                                                          },
                                                        }),
                                                      ],
                                                      1
                                                    )
                                                  : _vm._e(),
                                                _vm._v(" "),
                                                _vm.editedIndex == -1
                                                  ? _c(
                                                      "v-col",
                                                      {
                                                        attrs: {
                                                          cols: "12",
                                                          sm: "12",
                                                        },
                                                      },
                                                      [
                                                        _c("v-text-field", {
                                                          attrs: {
                                                            type: "password",
                                                            color: "primary",
                                                            label:
                                                              "Retype Password",
                                                            rules: [
                                                              _vm.rules
                                                                .required,
                                                              _vm.rules.min,
                                                              _vm.passwordmatch,
                                                            ],
                                                          },
                                                          model: {
                                                            value:
                                                              _vm.editedItem
                                                                .rpassword,
                                                            callback: function (
                                                              $$v
                                                            ) {
                                                              _vm.$set(
                                                                _vm.editedItem,
                                                                "rpassword",
                                                                $$v
                                                              )
                                                            },
                                                            expression:
                                                              "editedItem.rpassword",
                                                          },
                                                        }),
                                                      ],
                                                      1
                                                    )
                                                  : _vm._e(),
                                                _vm._v(" "),
                                                _vm.editedIndex == -1
                                                  ? _c(
                                                      "v-col",
                                                      {
                                                        attrs: {
                                                          cols: "12",
                                                          sm: "12",
                                                        },
                                                      },
                                                      [
                                                        _c("v-text-field", {
                                                          attrs: {
                                                            type: "email",
                                                            "success-messages":
                                                              _vm.success,
                                                            "error-messages":
                                                              _vm.error,
                                                            blur: _vm.checkEmail,
                                                            label: "Email",
                                                            rules: [
                                                              _vm.rules
                                                                .required,
                                                              _vm.rules
                                                                .validEmail,
                                                            ],
                                                          },
                                                          model: {
                                                            value:
                                                              _vm.editedItem
                                                                .email,
                                                            callback: function (
                                                              $$v
                                                            ) {
                                                              _vm.$set(
                                                                _vm.editedItem,
                                                                "email",
                                                                $$v
                                                              )
                                                            },
                                                            expression:
                                                              "editedItem.email",
                                                          },
                                                        }),
                                                      ],
                                                      1
                                                    )
                                                  : _vm._e(),
                                                _vm._v(" "),
                                                _vm.editedIndex > -1
                                                  ? _c(
                                                      "v-col",
                                                      {
                                                        attrs: {
                                                          cols: "12",
                                                          sm: "12",
                                                        },
                                                      },
                                                      [
                                                        _c("v-text-field", {
                                                          attrs: {
                                                            type: "email",
                                                            label: "Email",
                                                            rules: [
                                                              _vm.rules
                                                                .required,
                                                              _vm.rules
                                                                .validEmail,
                                                            ],
                                                          },
                                                          model: {
                                                            value:
                                                              _vm.editedItem
                                                                .email,
                                                            callback: function (
                                                              $$v
                                                            ) {
                                                              _vm.$set(
                                                                _vm.editedItem,
                                                                "email",
                                                                $$v
                                                              )
                                                            },
                                                            expression:
                                                              "editedItem.email",
                                                          },
                                                        }),
                                                      ],
                                                      1
                                                    )
                                                  : _vm._e(),
                                                _vm._v(" "),
                                                _c(
                                                  "v-col",
                                                  {
                                                    staticStyle: {
                                                      margin: "0",
                                                    },
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-select", {
                                                      attrs: {
                                                        items: _vm.roles,
                                                        label: "Select Role",
                                                        value:
                                                          "editedItem.role",
                                                        color: "primary",
                                                        rules: [
                                                          _vm.rules.required,
                                                        ],
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.editedItem.role,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.editedItem,
                                                            "role",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "editedItem.role",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                              ],
                                              1
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-actions",
                                      [
                                        _c("v-spacer"),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: { click: _vm.close },
                                          },
                                          [
                                            _vm._v(
                                              "\n                  Cancel\n                "
                                            ),
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                              type: "submit",
                                              disabled: !_vm.valid,
                                            },
                                            on: {
                                              click: function ($event) {
                                                $event.preventDefault()
                                                return _vm.save.apply(
                                                  null,
                                                  arguments
                                                )
                                              },
                                            },
                                          },
                                          [
                                            _vm._v(
                                              "\n                  Save\n                "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                      ],
                      1
                    ),
                  ]
                },
                proxy: true,
              },
              {
                key: "item.id",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c("td", [
                      _vm._v(_vm._s(_vm.users.data.indexOf(item) + 1)),
                    ]),
                  ]
                },
              },
              {
                key: "item.role",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c(
                      "v-edit-dialog",
                      {
                        attrs: {
                          large: "",
                          block: "",
                          persistent: "",
                          "return-value": item.role,
                        },
                        on: {
                          "update:returnValue": function ($event) {
                            return _vm.$set(item, "role", $event)
                          },
                          "update:return-value": function ($event) {
                            return _vm.$set(item, "role", $event)
                          },
                          save: function ($event) {
                            return _vm.updateRole(item)
                          },
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "input",
                              fn: function () {
                                return [
                                  _c("v-select", {
                                    attrs: {
                                      items: _vm.roles,
                                      label: "Select Role",
                                      value: "editedItem.role",
                                      color: "primary",
                                      rules: [_vm.rules.required],
                                    },
                                    model: {
                                      value: item.role,
                                      callback: function ($$v) {
                                        _vm.$set(item, "role", $$v)
                                      },
                                      expression: "item.role",
                                    },
                                  }),
                                ]
                              },
                              proxy: true,
                            },
                          ],
                          null,
                          true
                        ),
                      },
                      [_vm._v("\n        " + _vm._s(item.role) + "\n        ")]
                    ),
                  ]
                },
              },
              {
                key: "item.actions",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c(
                      "v-icon",
                      {
                        staticClass: "mr-2",
                        attrs: { small: "" },
                        on: {
                          click: function ($event) {
                            return _vm.editItem(item)
                          },
                        },
                      },
                      [_vm._v(" mdi-pencil ")]
                    ),
                  ]
                },
              },
              {
                key: "no-data",
                fn: function () {
                  return [
                    _c(
                      "v-btn",
                      {
                        attrs: { color: "primary" },
                        on: { click: _vm.initialize },
                      },
                      [_vm._v(" Reset ")]
                    ),
                  ]
                },
                proxy: true,
              },
            ]),
          }),
          _vm._v(" "),
          _c(
            "v-snackbar",
            {
              attrs: { bottom: "" },
              model: {
                value: _vm.snackbar,
                callback: function ($$v) {
                  _vm.snackbar = $$v
                },
                expression: "snackbar",
              },
            },
            [
              _vm._v("\n    " + _vm._s(_vm.text) + "\n\n    "),
              _c(
                "v-btn",
                {
                  attrs: { color: "pink", text: "" },
                  on: {
                    click: function ($event) {
                      _vm.snackbar = false
                    },
                  },
                },
                [_vm._v(" Close ")]
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/UsersComponent.vue?vue&type=template&id=896b7600&":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/UsersComponent.vue?vue&type=template&id=896b7600& ***!
  \***********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-card",
    [
      _c(
        "v-container",
        [
          _c("v-data-table", {
            staticClass: "elevation-0",
            attrs: {
              "item-key": "id",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              page: _vm.page + 1,
              pageCount: _vm.numberOfPages,
              items: _vm.users.data,
              options: _vm.options,
              "server-items-length": _vm.totalUsers,
              "items-per-page": 10,
              "show-select": "",
              "footer-props": {
                itemsPerPageOptions: [5, 10, 15],
                itemsPerPageText: "Users Per Page",
                "show-current-page": true,
                "show-first-last-page": true,
              },
            },
            on: {
              "update:options": function ($event) {
                _vm.options = $event
              },
            },
            scopedSlots: _vm._u([
              {
                key: "top",
                fn: function () {
                  return [
                    _c("v-text-field", {
                      attrs: { "append-icon": "mdi-magnify", label: "Search" },
                      on: { input: _vm.searchIt },
                    }),
                    _vm._v(" "),
                    _c(
                      "v-toolbar",
                      { attrs: { flat: "", color: "white" } },
                      [
                        _c("v-toolbar-title", [_vm._v("User Account List")]),
                        _vm._v(" "),
                        _c("v-spacer"),
                        _vm._v(" "),
                        _c(
                          "v-dialog",
                          {
                            attrs: { "max-width": "500px" },
                            scopedSlots: _vm._u([
                              {
                                key: "activator",
                                fn: function (ref) {
                                  var on = ref.on
                                  var attrs = ref.attrs
                                  return [
                                    _c(
                                      "v-btn",
                                      _vm._g(
                                        _vm._b(
                                          {
                                            staticClass: "mb-2",
                                            attrs: {
                                              color: "primary",
                                              dark: "",
                                            },
                                          },
                                          "v-btn",
                                          attrs,
                                          false
                                        ),
                                        on
                                      ),
                                      [
                                        _vm._v(
                                          "\n              New User\n            "
                                        ),
                                      ]
                                    ),
                                  ]
                                },
                              },
                            ]),
                            model: {
                              value: _vm.dialog,
                              callback: function ($$v) {
                                _vm.dialog = $$v
                              },
                              expression: "dialog",
                            },
                          },
                          [
                            _vm._v(" "),
                            _c(
                              "v-card",
                              [
                                _c(
                                  "v-card-title",
                                  { staticClass: "primary white--text" },
                                  [
                                    _c(
                                      "v-icon",
                                      {
                                        staticClass: "white--text",
                                        staticStyle: { "padding-right": "8px" },
                                      },
                                      [_vm._v(_vm._s(_vm.formIcon))]
                                    ),
                                    _vm._v(" "),
                                    _c("span", { staticClass: "headline" }, [
                                      _vm._v(_vm._s(_vm.formTitle)),
                                    ]),
                                  ],
                                  1
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-form",
                                  {
                                    attrs: { method: "post" },
                                    on: {
                                      submit: function ($event) {
                                        $event.stopPropagation()
                                        $event.preventDefault()
                                        return _vm.save.apply(null, arguments)
                                      },
                                    },
                                    model: {
                                      value: _vm.valid,
                                      callback: function ($$v) {
                                        _vm.valid = $$v
                                      },
                                      expression: "valid",
                                    },
                                  },
                                  [
                                    _c(
                                      "v-card-text",
                                      [
                                        _c(
                                          "v-container",
                                          [
                                            _c(
                                              "v-row",
                                              [
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-text-field", {
                                                      attrs: {
                                                        label: "Name",
                                                        rules: [
                                                          _vm.rules.required,
                                                          _vm.rules.min,
                                                        ],
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.editedItem.name,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.editedItem,
                                                            "name",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "editedItem.name",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                                _vm._v(" "),
                                                _vm.editedIndex == -1
                                                  ? _c(
                                                      "v-col",
                                                      {
                                                        attrs: {
                                                          cols: "12",
                                                          sm: "12",
                                                        },
                                                      },
                                                      [
                                                        _c("v-text-field", {
                                                          attrs: {
                                                            type: "password",
                                                            color: "primary",
                                                            label:
                                                              "Type Password",
                                                          },
                                                          model: {
                                                            value:
                                                              _vm.editedItem
                                                                .password,
                                                            callback: function (
                                                              $$v
                                                            ) {
                                                              _vm.$set(
                                                                _vm.editedItem,
                                                                "password",
                                                                $$v
                                                              )
                                                            },
                                                            expression:
                                                              "editedItem.password",
                                                          },
                                                        }),
                                                      ],
                                                      1
                                                    )
                                                  : _vm._e(),
                                                _vm._v(" "),
                                                _vm.editedIndex > -1
                                                  ? _c(
                                                      "v-col",
                                                      {
                                                        attrs: {
                                                          cols: "12",
                                                          sm: "12",
                                                        },
                                                      },
                                                      [
                                                        _c("v-text-field", {
                                                          attrs: {
                                                            type: "password",
                                                            color: "primary",
                                                            label:
                                                              "Type Password",
                                                            rules: [
                                                              _vm.rules
                                                                .required,
                                                              _vm.rules.min,
                                                            ],
                                                          },
                                                          model: {
                                                            value:
                                                              _vm.editedItem
                                                                .password,
                                                            callback: function (
                                                              $$v
                                                            ) {
                                                              _vm.$set(
                                                                _vm.editedItem,
                                                                "password",
                                                                $$v
                                                              )
                                                            },
                                                            expression:
                                                              "editedItem.password",
                                                          },
                                                        }),
                                                      ],
                                                      1
                                                    )
                                                  : _vm._e(),
                                                _vm._v(" "),
                                                _vm.editedIndex == -1
                                                  ? _c(
                                                      "v-col",
                                                      {
                                                        attrs: {
                                                          cols: "12",
                                                          sm: "12",
                                                        },
                                                      },
                                                      [
                                                        _c("v-text-field", {
                                                          attrs: {
                                                            type: "password",
                                                            color: "primary",
                                                            label:
                                                              "Retype Password",
                                                            rules: [
                                                              _vm.rules
                                                                .required,
                                                              _vm.rules.min,
                                                              _vm.passwordmatch,
                                                            ],
                                                          },
                                                          model: {
                                                            value:
                                                              _vm.editedItem
                                                                .rpassword,
                                                            callback: function (
                                                              $$v
                                                            ) {
                                                              _vm.$set(
                                                                _vm.editedItem,
                                                                "rpassword",
                                                                $$v
                                                              )
                                                            },
                                                            expression:
                                                              "editedItem.rpassword",
                                                          },
                                                        }),
                                                      ],
                                                      1
                                                    )
                                                  : _vm._e(),
                                                _vm._v(" "),
                                                _vm.editedIndex == -1
                                                  ? _c(
                                                      "v-col",
                                                      {
                                                        attrs: {
                                                          cols: "12",
                                                          sm: "12",
                                                        },
                                                      },
                                                      [
                                                        _c("v-text-field", {
                                                          attrs: {
                                                            type: "email",
                                                            "success-messages":
                                                              _vm.success,
                                                            "error-messages":
                                                              _vm.error,
                                                            blur: _vm.checkEmail,
                                                            label: "Email",
                                                            rules: [
                                                              _vm.rules
                                                                .required,
                                                              _vm.rules
                                                                .validEmail,
                                                            ],
                                                          },
                                                          model: {
                                                            value:
                                                              _vm.editedItem
                                                                .email,
                                                            callback: function (
                                                              $$v
                                                            ) {
                                                              _vm.$set(
                                                                _vm.editedItem,
                                                                "email",
                                                                $$v
                                                              )
                                                            },
                                                            expression:
                                                              "editedItem.email",
                                                          },
                                                        }),
                                                      ],
                                                      1
                                                    )
                                                  : _vm._e(),
                                                _vm._v(" "),
                                                _vm.editedIndex > -1
                                                  ? _c(
                                                      "v-col",
                                                      {
                                                        attrs: {
                                                          cols: "12",
                                                          sm: "12",
                                                        },
                                                      },
                                                      [
                                                        _c("v-text-field", {
                                                          attrs: {
                                                            type: "email",
                                                            label: "Email",
                                                            rules: [
                                                              _vm.rules
                                                                .required,
                                                              _vm.rules
                                                                .validEmail,
                                                            ],
                                                          },
                                                          model: {
                                                            value:
                                                              _vm.editedItem
                                                                .email,
                                                            callback: function (
                                                              $$v
                                                            ) {
                                                              _vm.$set(
                                                                _vm.editedItem,
                                                                "email",
                                                                $$v
                                                              )
                                                            },
                                                            expression:
                                                              "editedItem.email",
                                                          },
                                                        }),
                                                      ],
                                                      1
                                                    )
                                                  : _vm._e(),
                                                _vm._v(" "),
                                                _c(
                                                  "v-col",
                                                  {
                                                    staticStyle: {
                                                      margin: "0",
                                                    },
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-select", {
                                                      attrs: {
                                                        items: _vm.roles,
                                                        label: "Select Role",
                                                        value:
                                                          "editedItem.role",
                                                        color: "primary",
                                                        rules: [
                                                          _vm.rules.required,
                                                        ],
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.editedItem.role,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.editedItem,
                                                            "role",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "editedItem.role",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                              ],
                                              1
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-actions",
                                      [
                                        _c("v-spacer"),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: { click: _vm.close },
                                          },
                                          [
                                            _vm._v(
                                              "\n                  Cancel\n                "
                                            ),
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                              type: "submit",
                                              disabled: !_vm.valid,
                                            },
                                            on: {
                                              click: function ($event) {
                                                $event.preventDefault()
                                                return _vm.save.apply(
                                                  null,
                                                  arguments
                                                )
                                              },
                                            },
                                          },
                                          [
                                            _vm._v(
                                              "\n                  Save\n                "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                      ],
                      1
                    ),
                  ]
                },
                proxy: true,
              },
              {
                key: "item.id",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c("td", [
                      _vm._v(_vm._s(_vm.users.data.indexOf(item) + 1)),
                    ]),
                  ]
                },
              },
              {
                key: "item.role",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c(
                      "v-edit-dialog",
                      {
                        attrs: {
                          large: "",
                          block: "",
                          persistent: "",
                          "return-value": item.role,
                        },
                        on: {
                          "update:returnValue": function ($event) {
                            return _vm.$set(item, "role", $event)
                          },
                          "update:return-value": function ($event) {
                            return _vm.$set(item, "role", $event)
                          },
                          save: function ($event) {
                            return _vm.updateRole(item)
                          },
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "input",
                              fn: function () {
                                return [
                                  _c("v-select", {
                                    attrs: {
                                      items: _vm.roles,
                                      label: "Select Role",
                                      value: "editedItem.role",
                                      color: "primary",
                                      rules: [_vm.rules.required],
                                    },
                                    model: {
                                      value: item.role,
                                      callback: function ($$v) {
                                        _vm.$set(item, "role", $$v)
                                      },
                                      expression: "item.role",
                                    },
                                  }),
                                ]
                              },
                              proxy: true,
                            },
                          ],
                          null,
                          true
                        ),
                      },
                      [_vm._v("\n        " + _vm._s(item.role) + "\n        ")]
                    ),
                  ]
                },
              },
              {
                key: "item.actions",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c(
                      "v-icon",
                      {
                        staticClass: "mr-2",
                        attrs: { small: "" },
                        on: {
                          click: function ($event) {
                            return _vm.editItem(item)
                          },
                        },
                      },
                      [_vm._v(" mdi-pencil ")]
                    ),
                    _vm._v(" "),
                    _c(
                      "v-icon",
                      {
                        staticClass: "mr-2",
                        attrs: { small: "" },
                        on: {
                          click: function ($event) {
                            return _vm.deleteItem(item)
                          },
                        },
                      },
                      [_vm._v("\n        mdi-delete-forever\n      ")]
                    ),
                  ]
                },
              },
              {
                key: "no-data",
                fn: function () {
                  return [
                    _c(
                      "v-btn",
                      {
                        attrs: { color: "primary" },
                        on: { click: _vm.initialize },
                      },
                      [_vm._v(" Reset ")]
                    ),
                  ]
                },
                proxy: true,
              },
            ]),
          }),
          _vm._v(" "),
          _c(
            "v-snackbar",
            {
              attrs: { bottom: "" },
              model: {
                value: _vm.snackbar,
                callback: function ($$v) {
                  _vm.snackbar = $$v
                },
                expression: "snackbar",
              },
            },
            [
              _vm._v("\n    " + _vm._s(_vm.text) + "\n\n    "),
              _c(
                "v-btn",
                {
                  attrs: { color: "pink", text: "" },
                  on: {
                    click: function ($event) {
                      _vm.snackbar = false
                    },
                  },
                },
                [_vm._v(" Close ")]
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=template&id=420aa864&":
/*!***********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=template&id=420aa864& ***!
  \***********************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "0" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 pb-2" }, [
                                    _vm._v(_vm._s(_vm.formIcon)),
                                  ]),
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(_vm.formTitle) +
                                      " Cashier\n              "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3" },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.user_staff,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "user.name",
                                            "item-value": "user.id",
                                            "item-key": "user.id",
                                            label: "Search User...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search user\n                      "
                                                        ),
                                                        _c("strong", [
                                                          _vm._v("Staff"),
                                                        ]),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c(
                                                        "v-icon",
                                                        { attrs: { left: "" } },
                                                        [
                                                          _vm._v(
                                                            "\n                      mdi-badge-account\n                    "
                                                          ),
                                                        ]
                                                      ),
                                                      _vm._v(" "),
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-avatar",
                                                    {
                                                      staticClass:
                                                        "caption font-weight-light white--text",
                                                      attrs: {
                                                        color: "indigo",
                                                      },
                                                    },
                                                    [
                                                      _vm._v(
                                                        "\n                    " +
                                                          _vm._s(
                                                            item.user.name[0]
                                                          ) +
                                                          "\n                  "
                                                      ),
                                                    ]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.user_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "user_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.user_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.designations,
                                            loading: _vm.isLoading,
                                            "search-input":
                                              _vm.searchDesignation,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Designation...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.searchDesignation = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.searchDesignation = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search Designation \n                    "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.designee_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "designee_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.designee_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.campuses,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Campus...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search Campus \n                    "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.campus_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "campus_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.campus_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.semesters,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "semester",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Semester...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search Semester\n                    "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.semester_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "semester_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.semester_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled:
                                                    _vm.editedItem.name == "" ||
                                                    _vm.editedItem.short_name ==
                                                      ""
                                                      ? true
                                                      : false,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n                    Save\n                  "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          page: _vm.page + 1,
                          pageCount: _vm.numberOfPages,
                          items: _vm.cashiers.data,
                          options: _vm.options,
                          "server-items-length": _vm.totalCashiers,
                          "items-per-page": 5,
                          "footer-props": {
                            itemsPerPageOptions: [5, 10, 15],
                            itemsPerPageText: "Cashier Per Page",
                            "show-current-page": true,
                            "show-first-last-page": true,
                          },
                        },
                        on: {
                          "update:options": function ($event) {
                            _vm.options = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "top",
                            fn: function () {
                              return [
                                _c("v-text-field", {
                                  attrs: {
                                    "append-icon": "mdi-magnify",
                                    label: "Search",
                                  },
                                  on: { input: _vm.searchIt },
                                  model: {
                                    value: _vm.searchItem,
                                    callback: function ($$v) {
                                      _vm.searchItem = $$v
                                    },
                                    expression: "searchItem",
                                  },
                                }),
                              ]
                            },
                            proxy: true,
                          },
                          {
                            key: "item.name",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-edit-dialog",
                                  {
                                    attrs: {
                                      large: "",
                                      block: "",
                                      persistent: "",
                                      "return-value": item.name,
                                    },
                                    on: {
                                      "update:returnValue": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      "update:return-value": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      save: function ($event) {
                                        return _vm.updatePD(item)
                                      },
                                    },
                                    scopedSlots: _vm._u(
                                      [
                                        {
                                          key: "input",
                                          fn: function () {
                                            return [
                                              _c("v-select", {
                                                attrs: {
                                                  items: _vm.user_staff,
                                                  label: "Select PD",
                                                  "item-value": "user.id",
                                                  "item-text": "user.name",
                                                  color: "primary",
                                                  rules: [_vm.rules.required],
                                                },
                                                model: {
                                                  value: item.user_id,
                                                  callback: function ($$v) {
                                                    _vm.$set(
                                                      item,
                                                      "user_id",
                                                      $$v
                                                    )
                                                  },
                                                  expression: "item.user_id",
                                                },
                                              }),
                                            ]
                                          },
                                          proxy: true,
                                        },
                                      ],
                                      null,
                                      true
                                    ),
                                  },
                                  [
                                    _vm._v(
                                      "\n                " +
                                        _vm._s(item.name) +
                                        "\n                "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                          {
                            key: "item.college",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c("span", { staticClass: "text-uppercase" }, [
                                  _vm._v(_vm._s(item.college)),
                                ]),
                              ]
                            },
                          },
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-pencil\n              "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-delete-forever\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v(" mdi-close "),
                              ]),
                              _vm._v("close\n          "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v(" mdi-error "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n        "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=template&id=a2871fea&":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=template&id=a2871fea& ***!
  \********************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "0" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 pb-2" }, [
                                    _vm._v(_vm._s(_vm.formIcon)),
                                  ]),
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(_vm.formTitle) +
                                      " Dean\n              "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3" },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.user_staff,
                                            loading: _vm.isLoading,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "user.name",
                                            "item-value": "user.id",
                                            "item-key": "user.id",
                                            label: "Search User...",
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                            Search user\n                            "
                                                        ),
                                                        _c("strong", [
                                                          _vm._v("Staff"),
                                                        ]),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c(
                                                        "v-icon",
                                                        { attrs: { left: "" } },
                                                        [
                                                          _vm._v(
                                                            " mdi-badge-account "
                                                          ),
                                                        ]
                                                      ),
                                                      _vm._v(" "),
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-avatar",
                                                    {
                                                      staticClass:
                                                        "caption font-weight-light white--text",
                                                      attrs: {
                                                        color: "indigo",
                                                      },
                                                    },
                                                    [
                                                      _vm._v(
                                                        "\n                          " +
                                                          _vm._s(
                                                            item.user.name[0]
                                                          ) +
                                                          "\n                        "
                                                      ),
                                                    ]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.user_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "user_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.user_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.colleges,
                                            loading: _vm.isLoading,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search College...",
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                            Search College\n                          "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.college_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "college_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.college_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.semesters,
                                            loading: _vm.isLoading,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "semester",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Semester...",
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                            Search Semester\n                          "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.semester_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "semester_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.semester_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n                        Save\n                      "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          page: _vm.page + 1,
                          pageCount: _vm.numberOfPages,
                          items: _vm.deans.data,
                          options: _vm.options,
                          "server-items-length": _vm.totalDeans,
                          "items-per-page": 5,
                          "footer-props": {
                            itemsPerPageOptions: [5, 10, 15],
                            itemsPerPageText: "Stcouncil Per Page",
                            "show-current-page": true,
                            "show-first-last-page": true,
                          },
                        },
                        on: {
                          "update:options": function ($event) {
                            _vm.options = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "top",
                            fn: function () {
                              return [
                                _c("v-text-field", {
                                  attrs: {
                                    "append-icon": "mdi-magnify",
                                    label: "Search",
                                  },
                                  on: { input: _vm.searchIt },
                                  model: {
                                    value: _vm.searchItem,
                                    callback: function ($$v) {
                                      _vm.searchItem = $$v
                                    },
                                    expression: "searchItem",
                                  },
                                }),
                              ]
                            },
                            proxy: true,
                          },
                          {
                            key: "item.name",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-edit-dialog",
                                  {
                                    attrs: {
                                      large: "",
                                      block: "",
                                      persistent: "",
                                      "return-value": item.name,
                                    },
                                    on: {
                                      "update:returnValue": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      "update:return-value": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      save: function ($event) {
                                        return _vm.updatePD(item)
                                      },
                                    },
                                    scopedSlots: _vm._u(
                                      [
                                        {
                                          key: "input",
                                          fn: function () {
                                            return [
                                              _c("v-select", {
                                                attrs: {
                                                  items: _vm.user_staff,
                                                  label: "Select PD",
                                                  "item-value": "user.id",
                                                  "item-text": "user.name",
                                                  color: "primary",
                                                  rules: [_vm.rules.required],
                                                },
                                                model: {
                                                  value: item.user_id,
                                                  callback: function ($$v) {
                                                    _vm.$set(
                                                      item,
                                                      "user_id",
                                                      $$v
                                                    )
                                                  },
                                                  expression: "item.user_id",
                                                },
                                              }),
                                            ]
                                          },
                                          proxy: true,
                                        },
                                      ],
                                      null,
                                      true
                                    ),
                                  },
                                  [
                                    _vm._v(
                                      "\n                " +
                                        _vm._s(item.name) +
                                        "\n                "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                          {
                            key: "item.college",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c("span", { staticClass: "text-uppercase" }, [
                                  _vm._v(_vm._s(item.college)),
                                ]),
                              ]
                            },
                          },
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-pencil\n              "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-delete-forever\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v(" mdi-close "),
                              ]),
                              _vm._v("close\n          "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v(" mdi-error "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n        "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=template&id=3a96e4d6&":
/*!***********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=template&id=3a96e4d6& ***!
  \***********************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "0" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 pb-2" }, [
                                    _vm._v(_vm._s(_vm.formIcon)),
                                  ]),
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(_vm.formTitle) +
                                      " Cashier\n              "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3" },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.user_staff,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "user.name",
                                            "item-value": "user.id",
                                            "item-key": "user.id",
                                            label: "Search User...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search user\n                      "
                                                        ),
                                                        _c("strong", [
                                                          _vm._v("Staff"),
                                                        ]),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c(
                                                        "v-icon",
                                                        { attrs: { left: "" } },
                                                        [
                                                          _vm._v(
                                                            "\n                      mdi-badge-account\n                    "
                                                          ),
                                                        ]
                                                      ),
                                                      _vm._v(" "),
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-avatar",
                                                    {
                                                      staticClass:
                                                        "caption font-weight-light white--text",
                                                      attrs: {
                                                        color: "indigo",
                                                      },
                                                    },
                                                    [
                                                      _vm._v(
                                                        "\n                    " +
                                                          _vm._s(
                                                            item.user.name[0]
                                                          ) +
                                                          "\n                  "
                                                      ),
                                                    ]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.user_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "user_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.user_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.designations,
                                            loading: _vm.isLoading,
                                            "search-input":
                                              _vm.searchDesignation,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Designation...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.searchDesignation = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.searchDesignation = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search Designation \n                    "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.designee_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "designee_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.designee_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.campuses,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Campus...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search Campus \n                    "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.campus_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "campus_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.campus_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.semesters,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "semester",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Semester...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search Semester\n                    "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.semester_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "semester_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.semester_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled:
                                                    _vm.editedItem.name == "" ||
                                                    _vm.editedItem.short_name ==
                                                      ""
                                                      ? true
                                                      : false,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n                    Save\n                  "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          page: _vm.page + 1,
                          pageCount: _vm.numberOfPages,
                          items: _vm.librarys.data,
                          options: _vm.options,
                          "server-items-length": _vm.totalLibrarys,
                          "items-per-page": 5,
                          "footer-props": {
                            itemsPerPageOptions: [5, 10, 15],
                            itemsPerPageText: "Librarian Per Page",
                            "show-current-page": true,
                            "show-first-last-page": true,
                          },
                        },
                        on: {
                          "update:options": function ($event) {
                            _vm.options = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "top",
                            fn: function () {
                              return [
                                _c("v-text-field", {
                                  attrs: {
                                    "append-icon": "mdi-magnify",
                                    label: "Search",
                                  },
                                  on: { input: _vm.searchIt },
                                  model: {
                                    value: _vm.searchItem,
                                    callback: function ($$v) {
                                      _vm.searchItem = $$v
                                    },
                                    expression: "searchItem",
                                  },
                                }),
                              ]
                            },
                            proxy: true,
                          },
                          {
                            key: "item.name",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-edit-dialog",
                                  {
                                    attrs: {
                                      large: "",
                                      block: "",
                                      persistent: "",
                                      "return-value": item.name,
                                    },
                                    on: {
                                      "update:returnValue": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      "update:return-value": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      save: function ($event) {
                                        return _vm.updatePD(item)
                                      },
                                    },
                                    scopedSlots: _vm._u(
                                      [
                                        {
                                          key: "input",
                                          fn: function () {
                                            return [
                                              _c("v-select", {
                                                attrs: {
                                                  items: _vm.user_staff,
                                                  label: "Select PD",
                                                  "item-value": "user.id",
                                                  "item-text": "user.name",
                                                  color: "primary",
                                                  rules: [_vm.rules.required],
                                                },
                                                model: {
                                                  value: item.user_id,
                                                  callback: function ($$v) {
                                                    _vm.$set(
                                                      item,
                                                      "user_id",
                                                      $$v
                                                    )
                                                  },
                                                  expression: "item.user_id",
                                                },
                                              }),
                                            ]
                                          },
                                          proxy: true,
                                        },
                                      ],
                                      null,
                                      true
                                    ),
                                  },
                                  [
                                    _vm._v(
                                      "\n                " +
                                        _vm._s(item.name) +
                                        "\n                "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                          {
                            key: "item.college",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c("span", { staticClass: "text-uppercase" }, [
                                  _vm._v(_vm._s(item.college)),
                                ]),
                              ]
                            },
                          },
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-pencil\n              "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-delete-forever\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v(" mdi-close "),
                              ]),
                              _vm._v("close\n          "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v(" mdi-error "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n        "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=template&id=3bf5d483&":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=template&id=3bf5d483& ***!
  \********************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "0" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 pb-2" }, [
                                    _vm._v(_vm._s(_vm.formIcon)),
                                  ]),
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(_vm.formTitle) +
                                      " OSAS\n              "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3" },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.user_staff,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "user.name",
                                            "item-value": "user.id",
                                            "item-key": "user.id",
                                            label: "Search User...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search user\n                      "
                                                        ),
                                                        _c("strong", [
                                                          _vm._v("Staff"),
                                                        ]),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c(
                                                        "v-icon",
                                                        { attrs: { left: "" } },
                                                        [
                                                          _vm._v(
                                                            "\n                      mdi-badge-account\n                    "
                                                          ),
                                                        ]
                                                      ),
                                                      _vm._v(" "),
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-avatar",
                                                    {
                                                      staticClass:
                                                        "caption font-weight-light white--text",
                                                      attrs: {
                                                        color: "indigo",
                                                      },
                                                    },
                                                    [
                                                      _vm._v(
                                                        "\n                    " +
                                                          _vm._s(
                                                            item.user.name[0]
                                                          ) +
                                                          "\n                  "
                                                      ),
                                                    ]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.user_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "user_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.user_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.designations,
                                            loading: _vm.isLoading,
                                            "search-input":
                                              _vm.searchDesignation,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Designation...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.searchDesignation = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.searchDesignation = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search Designation \n                    "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.designee_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "designee_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.designee_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.campuses,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Campus...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search Campus \n                    "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.campus_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "campus_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.campus_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.semesters,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "semester",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Semester...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search Semester\n                    "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.semester_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "semester_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.semester_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled:
                                                    _vm.editedItem.name == "" ||
                                                    _vm.editedItem.short_name ==
                                                      ""
                                                      ? true
                                                      : false,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n                    Save\n                  "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          page: _vm.page + 1,
                          pageCount: _vm.numberOfPages,
                          items: _vm.osass.data,
                          options: _vm.options,
                          "server-items-length": _vm.totalOSASs,
                          "items-per-page": 5,
                          "footer-props": {
                            itemsPerPageOptions: [5, 10, 15],
                            itemsPerPageText: "OSAS Per Page",
                            "show-current-page": true,
                            "show-first-last-page": true,
                          },
                        },
                        on: {
                          "update:options": function ($event) {
                            _vm.options = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "top",
                            fn: function () {
                              return [
                                _c("v-text-field", {
                                  attrs: {
                                    "append-icon": "mdi-magnify",
                                    label: "Search",
                                  },
                                  on: { input: _vm.searchIt },
                                  model: {
                                    value: _vm.searchItem,
                                    callback: function ($$v) {
                                      _vm.searchItem = $$v
                                    },
                                    expression: "searchItem",
                                  },
                                }),
                              ]
                            },
                            proxy: true,
                          },
                          {
                            key: "item.name",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-edit-dialog",
                                  {
                                    attrs: {
                                      large: "",
                                      block: "",
                                      persistent: "",
                                      "return-value": item.name,
                                    },
                                    on: {
                                      "update:returnValue": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      "update:return-value": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      save: function ($event) {
                                        return _vm.updatePD(item)
                                      },
                                    },
                                    scopedSlots: _vm._u(
                                      [
                                        {
                                          key: "input",
                                          fn: function () {
                                            return [
                                              _c("v-select", {
                                                attrs: {
                                                  items: _vm.user_staff,
                                                  label: "Select PD",
                                                  "item-value": "user.id",
                                                  "item-text": "user.name",
                                                  color: "primary",
                                                  rules: [_vm.rules.required],
                                                },
                                                model: {
                                                  value: item.user_id,
                                                  callback: function ($$v) {
                                                    _vm.$set(
                                                      item,
                                                      "user_id",
                                                      $$v
                                                    )
                                                  },
                                                  expression: "item.user_id",
                                                },
                                              }),
                                            ]
                                          },
                                          proxy: true,
                                        },
                                      ],
                                      null,
                                      true
                                    ),
                                  },
                                  [
                                    _vm._v(
                                      "\n                " +
                                        _vm._s(item.name) +
                                        "\n                "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                          {
                            key: "item.college",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c("span", { staticClass: "text-uppercase" }, [
                                  _vm._v(_vm._s(item.college)),
                                ]),
                              ]
                            },
                          },
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-pencil\n              "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-delete-forever\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v(" mdi-close "),
                              ]),
                              _vm._v("close\n          "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v(" mdi-error "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n        "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=template&id=1ec07cfe&":
/*!*******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=template&id=1ec07cfe& ***!
  \*******************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "0" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 pb-2" }, [
                                    _vm._v(_vm._s(_vm.formIcon)),
                                  ]),
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(_vm.formTitle) +
                                      " Program Director\n              "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3" },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.user_staff,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "user.name",
                                            "item-value": "user.id",
                                            "item-key": "user.id",
                                            label: "Search User...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                            Search user\n                            "
                                                        ),
                                                        _c("strong", [
                                                          _vm._v("Staff"),
                                                        ]),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c(
                                                        "v-icon",
                                                        { attrs: { left: "" } },
                                                        [
                                                          _vm._v(
                                                            " mdi-badge-account "
                                                          ),
                                                        ]
                                                      ),
                                                      _vm._v(" "),
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-avatar",
                                                    {
                                                      staticClass:
                                                        "caption font-weight-light white--text",
                                                      attrs: {
                                                        color: "indigo",
                                                      },
                                                    },
                                                    [
                                                      _vm._v(
                                                        "\n                          " +
                                                          _vm._s(
                                                            item.user.name[0]
                                                          ) +
                                                          "\n                        "
                                                      ),
                                                    ]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.user_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "user_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.user_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-select", {
                                          attrs: {
                                            items: _vm.campuses,
                                            "item-text": "name",
                                            label: "Select Campus",
                                            "item-value": "id",
                                            "item-key": "id",
                                            color: "primary",
                                            chips: "",
                                          },
                                          on: { change: _vm.campusListener },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.campus_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "campus_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.campus_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.programs,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Program...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            change: _vm.campusListenerNew,
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                            Search Program\n                          "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.program_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "program_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.program_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.semesters,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "semester",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Semester...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                            Search Semester\n                          "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.semester_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "semester_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.semester_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n                        Save\n                      "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          page: _vm.page + 1,
                          pageCount: _vm.numberOfPages,
                          items: _vm.programdirectors.data,
                          options: _vm.options,
                          "server-items-length": _vm.totalProgramDirectors,
                          "items-per-page": 5,
                          "footer-props": {
                            itemsPerPageOptions: [5, 10, 15],
                            itemsPerPageText: "Stcouncil Per Page",
                            "show-current-page": true,
                            "show-first-last-page": true,
                          },
                        },
                        on: {
                          "update:options": function ($event) {
                            _vm.options = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "top",
                            fn: function () {
                              return [
                                _c("v-text-field", {
                                  attrs: {
                                    "append-icon": "mdi-magnify",
                                    label: "Search",
                                  },
                                  on: { input: _vm.searchIt },
                                  model: {
                                    value: _vm.searchItem,
                                    callback: function ($$v) {
                                      _vm.searchItem = $$v
                                    },
                                    expression: "searchItem",
                                  },
                                }),
                              ]
                            },
                            proxy: true,
                          },
                          {
                            key: "item.name",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-edit-dialog",
                                  {
                                    attrs: {
                                      large: "",
                                      block: "",
                                      persistent: "",
                                      "return-value": item.name,
                                    },
                                    on: {
                                      "update:returnValue": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      "update:return-value": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      save: function ($event) {
                                        return _vm.updatePD(item)
                                      },
                                    },
                                    scopedSlots: _vm._u(
                                      [
                                        {
                                          key: "input",
                                          fn: function () {
                                            return [
                                              _c("v-select", {
                                                attrs: {
                                                  items: _vm.user_staff,
                                                  label: "Select PD",
                                                  "item-value": "user.id",
                                                  "item-text": "user.name",
                                                  color: "primary",
                                                  rules: [_vm.rules.required],
                                                },
                                                model: {
                                                  value: item.user_id,
                                                  callback: function ($$v) {
                                                    _vm.$set(
                                                      item,
                                                      "user_id",
                                                      $$v
                                                    )
                                                  },
                                                  expression: "item.user_id",
                                                },
                                              }),
                                            ]
                                          },
                                          proxy: true,
                                        },
                                      ],
                                      null,
                                      true
                                    ),
                                  },
                                  [
                                    _vm._v(
                                      "\n                " +
                                        _vm._s(item.name) +
                                        "\n                "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                          {
                            key: "item.college",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c("span", { staticClass: "text-uppercase" }, [
                                  _vm._v(_vm._s(item.college)),
                                ]),
                              ]
                            },
                          },
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-pencil\n              "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-delete-forever\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v(" mdi-close "),
                              ]),
                              _vm._v("close\n          "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v(" mdi-error "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n        "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=template&id=5a0556e4&":
/*!*************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=template&id=5a0556e4& ***!
  \*************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "0" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 pb-2" }, [
                                    _vm._v(_vm._s(_vm.formIcon)),
                                  ]),
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(_vm.formTitle) +
                                      " Registrar\n              "
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3" },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.user_staff,
                                            loading: _vm.isLoading,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "user.name",
                                            "item-value": "user.id",
                                            "item-key": "user.id",
                                            label: "Search User...",
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                            Search user\n                            "
                                                        ),
                                                        _c("strong", [
                                                          _vm._v("Staff"),
                                                        ]),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c(
                                                        "v-icon",
                                                        { attrs: { left: "" } },
                                                        [
                                                          _vm._v(
                                                            " mdi-badge-account "
                                                          ),
                                                        ]
                                                      ),
                                                      _vm._v(" "),
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-avatar",
                                                    {
                                                      staticClass:
                                                        "caption font-weight-light white--text",
                                                      attrs: {
                                                        color: "indigo",
                                                      },
                                                    },
                                                    [
                                                      _vm._v(
                                                        "\n                          " +
                                                          _vm._s(
                                                            item.user.name[0]
                                                          ) +
                                                          "\n                        "
                                                      ),
                                                    ]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.user_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "user_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.user_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.programs,
                                            "auto-select-first": "",
                                            chips: "",
                                            clearable: "",
                                            "deletable-chips": "",
                                            multiple: "",
                                            "small-chips": "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Program...",
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                            Search College\n                          "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                            close: "",
                                                          },
                                                          on: {
                                                            "click:close":
                                                              function (
                                                                $event
                                                              ) {
                                                                return _vm.remove(
                                                                  item
                                                                )
                                                              },
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.short_name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.program_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "program_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.program_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.semesters,
                                            loading: _vm.isLoading,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "semester",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Semester...",
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                            Search Semester\n                          "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.semester_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "semester_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.semester_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-left" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n                        Save\n                      "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          page: _vm.page + 1,
                          pageCount: _vm.numberOfPages,
                          items: _vm.registrars.data,
                          options: _vm.options,
                          "server-items-length": _vm.totalRegistrars,
                          "items-per-page": 5,
                          "footer-props": {
                            itemsPerPageOptions: [5, 10, 15],
                            itemsPerPageText: "Stcouncil Per Page",
                            "show-current-page": true,
                            "show-first-last-page": true,
                          },
                        },
                        on: {
                          "update:options": function ($event) {
                            _vm.options = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "top",
                            fn: function () {
                              return [
                                _c("v-text-field", {
                                  attrs: {
                                    "append-icon": "mdi-magnify",
                                    label: "Search",
                                  },
                                  on: { input: _vm.searchIt },
                                  model: {
                                    value: _vm.searchItem,
                                    callback: function ($$v) {
                                      _vm.searchItem = $$v
                                    },
                                    expression: "searchItem",
                                  },
                                }),
                              ]
                            },
                            proxy: true,
                          },
                          {
                            key: "item.name",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-edit-dialog",
                                  {
                                    attrs: {
                                      large: "",
                                      block: "",
                                      persistent: "",
                                      "return-value": item.name,
                                    },
                                    on: {
                                      "update:returnValue": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      "update:return-value": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      save: function ($event) {
                                        return _vm.updatePD(item)
                                      },
                                    },
                                    scopedSlots: _vm._u(
                                      [
                                        {
                                          key: "input",
                                          fn: function () {
                                            return [
                                              _c("v-select", {
                                                attrs: {
                                                  items: _vm.user_staff,
                                                  label: "Select PD",
                                                  "item-value": "user.id",
                                                  "item-text": "user.name",
                                                  color: "primary",
                                                  rules: [_vm.rules.required],
                                                },
                                                model: {
                                                  value: item.user_id,
                                                  callback: function ($$v) {
                                                    _vm.$set(
                                                      item,
                                                      "user_id",
                                                      $$v
                                                    )
                                                  },
                                                  expression: "item.user_id",
                                                },
                                              }),
                                            ]
                                          },
                                          proxy: true,
                                        },
                                      ],
                                      null,
                                      true
                                    ),
                                  },
                                  [
                                    _vm._v(
                                      "\n                " +
                                        _vm._s(item.name) +
                                        "\n                "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                          {
                            key: "item.college",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c("span", { staticClass: "text-uppercase" }, [
                                  _vm._v(_vm._s(item.college)),
                                ]),
                              ]
                            },
                          },
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-pencil\n              "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-delete-forever\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v(" mdi-close "),
                              ]),
                              _vm._v("close\n          "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v(" mdi-error "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n        "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=template&id=18d629d1&":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=template&id=18d629d1& ***!
  \*********************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "0" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 " }, [
                                    _vm._v("mdi-account-plus-outline"),
                                  ]),
                                  _vm._v(
                                    "\r\n                        Add Staff\r\n                        "
                                  ),
                                  _c(
                                    "v-dialog",
                                    {
                                      attrs: { width: "390" },
                                      scopedSlots: _vm._u([
                                        {
                                          key: "activator",
                                          fn: function (ref) {
                                            var on = ref.on
                                            var attrs = ref.attrs
                                            return [
                                              _c(
                                                "v-btn",
                                                _vm._g(
                                                  _vm._b(
                                                    {
                                                      staticClass:
                                                        "float-right success white--text ml-2",
                                                      attrs: {
                                                        dark: "",
                                                        small: "",
                                                        icon: "",
                                                      },
                                                    },
                                                    "v-btn",
                                                    attrs,
                                                    false
                                                  ),
                                                  on
                                                ),
                                                [
                                                  _c(
                                                    "v-icon",
                                                    { attrs: { small: "" } },
                                                    [
                                                      _vm._v(
                                                        "mdi-content-duplicate"
                                                      ),
                                                    ]
                                                  ),
                                                ],
                                                1
                                              ),
                                            ]
                                          },
                                        },
                                      ]),
                                      model: {
                                        value: _vm.copyDialog,
                                        callback: function ($$v) {
                                          _vm.copyDialog = $$v
                                        },
                                        expression: "copyDialog",
                                      },
                                    },
                                    [
                                      _vm._v(" "),
                                      _c(
                                        "v-card",
                                        [
                                          _c(
                                            "v-card-title",
                                            { staticClass: "overline pa-4" },
                                            [
                                              _vm._v(
                                                "\r\n                        Copy Staff List from Previous Semester\r\n                           \r\n                 "
                                              ),
                                              _c("v-autocomplete", {
                                                attrs: {
                                                  items: _vm.semesters,
                                                  loading: _vm.isLoading,
                                                  "search-input": _vm.search,
                                                  chips: "",
                                                  clearable: "",
                                                  "item-text": "semester",
                                                  "item-value": "id",
                                                  "item-key": "id",
                                                  label:
                                                    "Search New Semester...",
                                                },
                                                on: {
                                                  "update:searchInput":
                                                    function ($event) {
                                                      _vm.search = $event
                                                    },
                                                  "update:search-input":
                                                    function ($event) {
                                                      _vm.search = $event
                                                    },
                                                },
                                                scopedSlots: _vm._u([
                                                  {
                                                    key: "no-data",
                                                    fn: function () {
                                                      return [
                                                        _c(
                                                          "v-list-item",
                                                          [
                                                            _c(
                                                              "v-list-item-title",
                                                              [
                                                                _vm._v(
                                                                  "\r\n                        Search Semester\r\n                      "
                                                                ),
                                                              ]
                                                            ),
                                                          ],
                                                          1
                                                        ),
                                                      ]
                                                    },
                                                    proxy: true,
                                                  },
                                                  {
                                                    key: "selection",
                                                    fn: function (ref) {
                                                      var attr = ref.attr
                                                      var on = ref.on
                                                      var item = ref.item
                                                      var selected =
                                                        ref.selected
                                                      return [
                                                        _c(
                                                          "v-chip",
                                                          _vm._g(
                                                            _vm._b(
                                                              {
                                                                staticClass:
                                                                  "white--text",
                                                                attrs: {
                                                                  "input-value":
                                                                    selected,
                                                                  color:
                                                                    "purple",
                                                                },
                                                              },
                                                              "v-chip",
                                                              attr,
                                                              false
                                                            ),
                                                            on
                                                          ),
                                                          [
                                                            _c("span", {
                                                              domProps: {
                                                                textContent:
                                                                  _vm._s(
                                                                    item.semester
                                                                  ),
                                                              },
                                                            }),
                                                          ]
                                                        ),
                                                      ]
                                                    },
                                                  },
                                                  {
                                                    key: "item",
                                                    fn: function (ref) {
                                                      var item = ref.item
                                                      return [
                                                        _c(
                                                          "v-list-item-content",
                                                          [
                                                            _c(
                                                              "v-list-item-title",
                                                              {
                                                                domProps: {
                                                                  textContent:
                                                                    _vm._s(
                                                                      item.semester
                                                                    ),
                                                                },
                                                              }
                                                            ),
                                                          ],
                                                          1
                                                        ),
                                                      ]
                                                    },
                                                  },
                                                ]),
                                                model: {
                                                  value:
                                                    _vm.editedItem
                                                      .new_semester_id,
                                                  callback: function ($$v) {
                                                    _vm.$set(
                                                      _vm.editedItem,
                                                      "new_semester_id",
                                                      $$v
                                                    )
                                                  },
                                                  expression:
                                                    "editedItem.new_semester_id",
                                                },
                                              }),
                                              _vm._v(" "),
                                              _c(
                                                "v-btn",
                                                {
                                                  staticClass: "success",
                                                  attrs: {
                                                    disabled:
                                                      _vm.editedItem
                                                        .new_semester_id ==
                                                      null,
                                                    block: "",
                                                    rounded: "",
                                                  },
                                                  on: {
                                                    click: _vm.copyPrevStaff,
                                                  },
                                                },
                                                [_vm._v("Copy")]
                                              ),
                                            ],
                                            1
                                          ),
                                        ],
                                        1
                                      ),
                                    ],
                                    1
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3 " },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.user_staff,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "user.name",
                                            "item-value": "user.id",
                                            "item-key": "user.id",
                                            label: "Search User...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\r\n                        Search user\r\n                        "
                                                        ),
                                                        _c("strong", [
                                                          _vm._v("Staff"),
                                                        ]),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c(
                                                        "v-icon",
                                                        { attrs: { left: "" } },
                                                        [
                                                          _vm._v(
                                                            "\r\n                        mdi-badge-account\r\n                      "
                                                          ),
                                                        ]
                                                      ),
                                                      _vm._v(" "),
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-avatar",
                                                    {
                                                      staticClass:
                                                        "caption font-weight-light white--text",
                                                      attrs: {
                                                        color: "indigo",
                                                      },
                                                    },
                                                    [
                                                      _vm._v(
                                                        "\r\n                      " +
                                                          _vm._s(
                                                            item.user.name[0]
                                                          ) +
                                                          "\r\n                    "
                                                      ),
                                                    ]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.user_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "user_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.user_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.designations,
                                            loading: _vm.isLoading,
                                            "search-input":
                                              _vm.searchDesignation,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Designation...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.searchDesignation = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.searchDesignation = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\r\n                        Search Designation \r\n                      "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.designee_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "designee_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.designee_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.campuses,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Campus...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\r\n                        Search Campus \r\n                      "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.campus_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "campus_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.campus_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.semesters,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "semester",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Semester...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\r\n                        Search Semester\r\n                      "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.semester_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "semester_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.semester_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled:
                                                    _vm.editedItem.name == "" ||
                                                    _vm.editedItem.short_name ==
                                                      ""
                                                      ? true
                                                      : false,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\r\n                      Save\r\n                    "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          page: _vm.page + 1,
                          pageCount: _vm.numberOfPages,
                          items: _vm.staffs.data,
                          options: _vm.options,
                          "server-items-length": _vm.totalStaffs,
                          "items-per-page": 5,
                          "footer-props": {
                            itemsPerPageOptions: [5, 10, 15],
                            itemsPerPageText: "Staff Per Page",
                            "show-current-page": true,
                            "show-first-last-page": true,
                          },
                        },
                        on: {
                          "update:options": function ($event) {
                            _vm.options = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "top",
                            fn: function () {
                              return [
                                _c("v-text-field", {
                                  attrs: {
                                    "append-icon": "mdi-magnify",
                                    label: "Search",
                                  },
                                  on: { input: _vm.searchIt },
                                  model: {
                                    value: _vm.searchItem,
                                    callback: function ($$v) {
                                      _vm.searchItem = $$v
                                    },
                                    expression: "searchItem",
                                  },
                                }),
                              ]
                            },
                            proxy: true,
                          },
                          {
                            key: "item.name",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-edit-dialog",
                                  {
                                    attrs: {
                                      large: "",
                                      block: "",
                                      persistent: "",
                                      "return-value": item.name,
                                    },
                                    on: {
                                      "update:returnValue": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      "update:return-value": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      save: function ($event) {
                                        return _vm.updatePD(item)
                                      },
                                    },
                                    scopedSlots: _vm._u(
                                      [
                                        {
                                          key: "input",
                                          fn: function () {
                                            return [
                                              _c("v-select", {
                                                attrs: {
                                                  items: _vm.user_staff,
                                                  label: "Select PD",
                                                  "item-value": "user.id",
                                                  "item-text": "user.name",
                                                  color: "primary",
                                                  rules: [_vm.rules.required],
                                                },
                                                model: {
                                                  value: item.user_id,
                                                  callback: function ($$v) {
                                                    _vm.$set(
                                                      item,
                                                      "user_id",
                                                      $$v
                                                    )
                                                  },
                                                  expression: "item.user_id",
                                                },
                                              }),
                                            ]
                                          },
                                          proxy: true,
                                        },
                                      ],
                                      null,
                                      true
                                    ),
                                  },
                                  [
                                    _vm._v(
                                      "\r\n          " +
                                        _vm._s(item.name) +
                                        "\r\n          "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [_vm._v(" mdi-pencil ")]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\r\n                mdi-delete-forever\r\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\r\n          mdi-close\r\n        "),
                              ]),
                              _vm._v("close\r\n      "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\r\n          mdi-error\r\n        "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\r\n\r\n      "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=template&id=e39c32da&":
/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=template&id=e39c32da& ***!
  \******************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "0" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 pb-2" }, [
                                    _vm._v("mdi-account-plus-outline"),
                                  ]),
                                  _vm._v(
                                    "\n                Add Student Council\n                "
                                  ),
                                  _c(
                                    "v-dialog",
                                    {
                                      attrs: { width: "390" },
                                      scopedSlots: _vm._u([
                                        {
                                          key: "activator",
                                          fn: function (ref) {
                                            var on = ref.on
                                            var attrs = ref.attrs
                                            return [
                                              _c(
                                                "v-btn",
                                                _vm._g(
                                                  _vm._b(
                                                    {
                                                      staticClass:
                                                        "float-right success white--text ml-2",
                                                      attrs: {
                                                        dark: "",
                                                        small: "",
                                                        icon: "",
                                                      },
                                                    },
                                                    "v-btn",
                                                    attrs,
                                                    false
                                                  ),
                                                  on
                                                ),
                                                [
                                                  _c(
                                                    "v-icon",
                                                    { attrs: { small: "" } },
                                                    [
                                                      _vm._v(
                                                        "mdi-content-duplicate"
                                                      ),
                                                    ]
                                                  ),
                                                ],
                                                1
                                              ),
                                            ]
                                          },
                                        },
                                      ]),
                                      model: {
                                        value: _vm.copyDialog,
                                        callback: function ($$v) {
                                          _vm.copyDialog = $$v
                                        },
                                        expression: "copyDialog",
                                      },
                                    },
                                    [
                                      _vm._v(" "),
                                      _c(
                                        "v-card",
                                        [
                                          _c(
                                            "v-card-title",
                                            { staticClass: "overline pa-4" },
                                            [
                                              _vm._v(
                                                "\n                      Copy Stcouncil List from Previous Semester\n\n                      "
                                              ),
                                              _c("v-autocomplete", {
                                                attrs: {
                                                  items: _vm.semesters,
                                                  loading: _vm.isLoading,
                                                  "search-input": _vm.search,
                                                  chips: "",
                                                  clearable: "",
                                                  "item-text": "semester",
                                                  "item-value": "id",
                                                  "item-key": "id",
                                                  label:
                                                    "Search New Semester...",
                                                },
                                                on: {
                                                  "update:searchInput":
                                                    function ($event) {
                                                      _vm.search = $event
                                                    },
                                                  "update:search-input":
                                                    function ($event) {
                                                      _vm.search = $event
                                                    },
                                                },
                                                scopedSlots: _vm._u([
                                                  {
                                                    key: "no-data",
                                                    fn: function () {
                                                      return [
                                                        _c(
                                                          "v-list-item",
                                                          [
                                                            _c(
                                                              "v-list-item-title",
                                                              [
                                                                _vm._v(
                                                                  "\n                              Search Semester\n                            "
                                                                ),
                                                              ]
                                                            ),
                                                          ],
                                                          1
                                                        ),
                                                      ]
                                                    },
                                                    proxy: true,
                                                  },
                                                  {
                                                    key: "selection",
                                                    fn: function (ref) {
                                                      var attr = ref.attr
                                                      var on = ref.on
                                                      var item = ref.item
                                                      var selected =
                                                        ref.selected
                                                      return [
                                                        _c(
                                                          "v-chip",
                                                          _vm._g(
                                                            _vm._b(
                                                              {
                                                                staticClass:
                                                                  "white--text",
                                                                attrs: {
                                                                  "input-value":
                                                                    selected,
                                                                  color:
                                                                    "purple",
                                                                },
                                                              },
                                                              "v-chip",
                                                              attr,
                                                              false
                                                            ),
                                                            on
                                                          ),
                                                          [
                                                            _c("span", {
                                                              domProps: {
                                                                textContent:
                                                                  _vm._s(
                                                                    item.semester
                                                                  ),
                                                              },
                                                            }),
                                                          ]
                                                        ),
                                                      ]
                                                    },
                                                  },
                                                  {
                                                    key: "item",
                                                    fn: function (ref) {
                                                      var item = ref.item
                                                      return [
                                                        _c(
                                                          "v-list-item-content",
                                                          [
                                                            _c(
                                                              "v-list-item-title",
                                                              {
                                                                domProps: {
                                                                  textContent:
                                                                    _vm._s(
                                                                      item.semester
                                                                    ),
                                                                },
                                                              }
                                                            ),
                                                          ],
                                                          1
                                                        ),
                                                      ]
                                                    },
                                                  },
                                                ]),
                                                model: {
                                                  value:
                                                    _vm.editedItem
                                                      .new_semester_id,
                                                  callback: function ($$v) {
                                                    _vm.$set(
                                                      _vm.editedItem,
                                                      "new_semester_id",
                                                      $$v
                                                    )
                                                  },
                                                  expression:
                                                    "editedItem.new_semester_id",
                                                },
                                              }),
                                              _vm._v(" "),
                                              _c(
                                                "v-btn",
                                                {
                                                  staticClass: "success",
                                                  attrs: {
                                                    disabled:
                                                      _vm.editedItem
                                                        .new_semester_id ==
                                                      null,
                                                    block: "",
                                                    rounded: "",
                                                  },
                                                  on: {
                                                    click:
                                                      _vm.copyPrevStcouncil,
                                                  },
                                                },
                                                [_vm._v("Copy")]
                                              ),
                                            ],
                                            1
                                          ),
                                        ],
                                        1
                                      ),
                                    ],
                                    1
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3" },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.user_staff,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "user.name",
                                            "item-value": "user.id",
                                            "item-key": "user.id",
                                            label: "Search User...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                      Search user\n                      "
                                                        ),
                                                        _c("strong", [
                                                          _vm._v("Staff"),
                                                        ]),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c(
                                                        "v-icon",
                                                        { attrs: { left: "" } },
                                                        [
                                                          _vm._v(
                                                            "\n                      mdi-badge-account\n                    "
                                                          ),
                                                        ]
                                                      ),
                                                      _vm._v(" "),
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-avatar",
                                                    {
                                                      staticClass:
                                                        "caption font-weight-light white--text",
                                                      attrs: {
                                                        color: "indigo",
                                                      },
                                                    },
                                                    [
                                                      _vm._v(
                                                        "\n                    " +
                                                          _vm._s(
                                                            item.user.name[0]
                                                          ) +
                                                          "\n                  "
                                                      ),
                                                    ]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.user.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.user_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "user_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.user_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.colleges,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "name",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search College...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                            Search College\n                          "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.name
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.college_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "college_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.college_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-autocomplete", {
                                          attrs: {
                                            items: _vm.semesters,
                                            loading: _vm.isLoading,
                                            "search-input": _vm.search,
                                            chips: "",
                                            clearable: "",
                                            "item-text": "semester",
                                            "item-value": "id",
                                            "item-key": "id",
                                            label: "Search Semester...",
                                          },
                                          on: {
                                            "update:searchInput": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                            "update:search-input": function (
                                              $event
                                            ) {
                                              _vm.search = $event
                                            },
                                          },
                                          scopedSlots: _vm._u([
                                            {
                                              key: "no-data",
                                              fn: function () {
                                                return [
                                                  _c(
                                                    "v-list-item",
                                                    [
                                                      _c("v-list-item-title", [
                                                        _vm._v(
                                                          "\n                            Search Semester\n                          "
                                                        ),
                                                      ]),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                              proxy: true,
                                            },
                                            {
                                              key: "selection",
                                              fn: function (ref) {
                                                var attr = ref.attr
                                                var on = ref.on
                                                var item = ref.item
                                                var selected = ref.selected
                                                return [
                                                  _c(
                                                    "v-chip",
                                                    _vm._g(
                                                      _vm._b(
                                                        {
                                                          staticClass:
                                                            "white--text",
                                                          attrs: {
                                                            "input-value":
                                                              selected,
                                                            color: "purple",
                                                          },
                                                        },
                                                        "v-chip",
                                                        attr,
                                                        false
                                                      ),
                                                      on
                                                    ),
                                                    [
                                                      _c("span", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ]
                                                  ),
                                                ]
                                              },
                                            },
                                            {
                                              key: "item",
                                              fn: function (ref) {
                                                var item = ref.item
                                                return [
                                                  _c(
                                                    "v-list-item-content",
                                                    [
                                                      _c("v-list-item-title", {
                                                        domProps: {
                                                          textContent: _vm._s(
                                                            item.semester
                                                          ),
                                                        },
                                                      }),
                                                    ],
                                                    1
                                                  ),
                                                ]
                                              },
                                            },
                                          ]),
                                          model: {
                                            value: _vm.editedItem.semester_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "semester_id",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.semester_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2 float-right" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled:
                                                    _vm.editedItem.name == "" ||
                                                    _vm.editedItem.short_name ==
                                                      ""
                                                      ? true
                                                      : false,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n                        Save\n                      "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c("v-data-table", {
                        staticClass: "elevation-1 pa-6",
                        attrs: {
                          "item-key": "id",
                          loading: _vm.loading,
                          "loading-text": "Loading... Please wait",
                          headers: _vm.headers,
                          page: _vm.page + 1,
                          pageCount: _vm.numberOfPages,
                          items: _vm.stcouncils.data,
                          options: _vm.options,
                          "server-items-length": _vm.totalStCouncils,
                          "items-per-page": 5,
                          "footer-props": {
                            itemsPerPageOptions: [5, 10, 15],
                            itemsPerPageText: "Stcouncil Per Page",
                            "show-current-page": true,
                            "show-first-last-page": true,
                          },
                        },
                        on: {
                          "update:options": function ($event) {
                            _vm.options = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "top",
                            fn: function () {
                              return [
                                _c("v-text-field", {
                                  attrs: {
                                    "append-icon": "mdi-magnify",
                                    label: "Search",
                                  },
                                  on: { input: _vm.searchIt },
                                  model: {
                                    value: _vm.searchItem,
                                    callback: function ($$v) {
                                      _vm.searchItem = $$v
                                    },
                                    expression: "searchItem",
                                  },
                                }),
                              ]
                            },
                            proxy: true,
                          },
                          {
                            key: "item.name",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-edit-dialog",
                                  {
                                    attrs: {
                                      large: "",
                                      block: "",
                                      persistent: "",
                                      "return-value": item.name,
                                    },
                                    on: {
                                      "update:returnValue": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      "update:return-value": function ($event) {
                                        return _vm.$set(item, "name", $event)
                                      },
                                      save: function ($event) {
                                        return _vm.updatePD(item)
                                      },
                                    },
                                    scopedSlots: _vm._u(
                                      [
                                        {
                                          key: "input",
                                          fn: function () {
                                            return [
                                              _c("v-select", {
                                                attrs: {
                                                  items: _vm.user_staff,
                                                  label: "Select PD",
                                                  "item-value": "user.id",
                                                  "item-text": "user.name",
                                                  color: "primary",
                                                  rules: [_vm.rules.required],
                                                },
                                                model: {
                                                  value: item.user_id,
                                                  callback: function ($$v) {
                                                    _vm.$set(
                                                      item,
                                                      "user_id",
                                                      $$v
                                                    )
                                                  },
                                                  expression: "item.user_id",
                                                },
                                              }),
                                            ]
                                          },
                                          proxy: true,
                                        },
                                      ],
                                      null,
                                      true
                                    ),
                                  },
                                  [
                                    _vm._v(
                                      "\n                " +
                                        _vm._s(item.name) +
                                        "\n                "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                          {
                            key: "item.college",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c("span", { staticClass: "text-uppercase" }, [
                                  _vm._v(_vm._s(item.college)),
                                ]),
                              ]
                            },
                          },
                          {
                            key: "item.actions",
                            fn: function (ref) {
                              var item = ref.item
                              return [
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 warning--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.editItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-pencil\n              "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-icon",
                                  {
                                    staticClass: "mr-2 red--text",
                                    attrs: { small: "" },
                                    on: {
                                      click: function ($event) {
                                        return _vm.deleteItem(item)
                                      },
                                    },
                                  },
                                  [
                                    _vm._v(
                                      "\n                mdi-delete-forever\n              "
                                    ),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v(" mdi-close "),
                              ]),
                              _vm._v("close\n          "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v(" mdi-error "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n        "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/adviser/ADVISERComponent.vue?vue&type=template&id=61a961e3&":
/*!***************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/adviser/ADVISERComponent.vue?vue&type=template&id=61a961e3& ***!
  \***************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-email")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-bell")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-avatar",
                { attrs: { size: "24", item: "" } },
                [
                  _c("v-img", {
                    attrs: { src: "images/psu_logo.png", alt: "parsu_logo" },
                  }),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5 elevation-0" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/cashier/CASHIERComponent.vue?vue&type=template&id=2dbebbb1&":
/*!***************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/cashier/CASHIERComponent.vue?vue&type=template&id=2dbebbb1& ***!
  \***************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-email")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-bell")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-avatar",
                { attrs: { size: "24", item: "" } },
                [
                  _c("v-img", {
                    attrs: { src: "images/psu_logo.png", alt: "parsu_logo" },
                  }),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5 elevation-0" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/dean/DEANComponent.vue?vue&type=template&id=e06f1a4e&":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/dean/DEANComponent.vue?vue&type=template&id=e06f1a4e& ***!
  \*********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-email")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-bell")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-avatar",
                { attrs: { size: "24", item: "" } },
                [
                  _c("v-img", {
                    attrs: { src: "images/psu_logo.png", alt: "parsu_logo" },
                  }),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5 elevation-0" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/library/LIBRARYComponent.vue?vue&type=template&id=67d1a5c1&":
/*!***************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/library/LIBRARYComponent.vue?vue&type=template&id=67d1a5c1& ***!
  \***************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-email")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-bell")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-avatar",
                { attrs: { size: "24", item: "" } },
                [
                  _c("v-img", {
                    attrs: { src: "images/psu_logo.png", alt: "parsu_logo" },
                  }),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5 elevation-0" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/login/LoginComponent.vue?vue&type=template&id=c4ab7a36&":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/login/LoginComponent.vue?vue&type=template&id=c4ab7a36& ***!
  \***********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    {
      staticClass: "elavation-0",
      staticStyle: { background: "transparent" },
      attrs: { id: "inspire" },
    },
    [
      _c(
        "v-card",
        { staticClass: "fill-height", attrs: { color: "transparent" } },
        [
          _c("v-progress-linear", {
            attrs: {
              active: _vm.loading,
              indeterminate: _vm.loading,
              absolute: "",
              top: "",
              color: "blue accent-3",
            },
          }),
          _vm._v(" "),
          _c(
            "v-container",
            {
              staticClass: "fill-height",
              staticStyle: { background: "transparent" },
              attrs: { id: "logo", fluid: "" },
            },
            [
              _c(
                "v-row",
                { attrs: { align: "center", justify: "center" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", sm: "8", md: "8" } },
                    [
                      _c(
                        "v-card",
                        { staticClass: "elevation-0 transparent white" },
                        [
                          _c(
                            "v-row",
                            [
                              _c(
                                "v-col",
                                {
                                  staticClass: "pr-8",
                                  attrs: { cols: "12", lg: "6" },
                                },
                                [
                                  _c(
                                    "v-card-text",
                                    { staticClass: "mt-12 hidden-md-and-down" },
                                    [
                                      _c("div", { staticClass: "  mt-12" }, [
                                        _c(
                                          "div",
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                staticClass: "ma-5",
                                                attrs: {
                                                  text: "",
                                                  icon: "",
                                                  color: "blue lighten-2",
                                                },
                                              },
                                              [
                                                _c(
                                                  "v-avatar",
                                                  {
                                                    staticClass: "elevation-3",
                                                    attrs: { size: "70" },
                                                  },
                                                  [
                                                    _c("img", {
                                                      attrs: {
                                                        src: "images/psu_logo.png",
                                                        alt: "ICTMO",
                                                      },
                                                    }),
                                                  ]
                                                ),
                                              ],
                                              1
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                staticClass: "ma-5",
                                                attrs: {
                                                  text: "",
                                                  icon: "",
                                                  color: "yellow lighten-2",
                                                },
                                              },
                                              [
                                                _c(
                                                  "v-avatar",
                                                  {
                                                    staticClass: "elevation-3",
                                                    attrs: { size: "70" },
                                                  },
                                                  [
                                                    _c("img", {
                                                      attrs: {
                                                        src: "images/ictmo_logo.png",
                                                        alt: "ICTMO",
                                                      },
                                                    }),
                                                  ]
                                                ),
                                              ],
                                              1
                                            ),
                                          ],
                                          1
                                        ),
                                      ]),
                                      _vm._v(" "),
                                      _c(
                                        "h3",
                                        {
                                          staticClass:
                                            " display-2 primary--text text--accent-4 hidden-sm-and-down font-weight-bold",
                                        },
                                        [
                                          _vm._v(
                                            " ParSU OSCS\n                  "
                                          ),
                                          _c("v-divider"),
                                        ],
                                        1
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "h4",
                                        {
                                          staticClass:
                                            " caption primary--text text--accent-4 hidden-sm-and-down",
                                        },
                                        [
                                          _vm._v(
                                            "\n                    Online Student Clearance System\n                  "
                                          ),
                                        ]
                                      ),
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "v-card-text",
                                    {
                                      staticClass: " hidden-md-and-up",
                                      staticStyle: { "padding-bottom": "0" },
                                    },
                                    [
                                      _c("div", { staticClass: " pb-1 " }, [
                                        _c(
                                          "div",
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                staticClass: "ma-3",
                                                attrs: {
                                                  text: "",
                                                  icon: "",
                                                  color: "blue lighten-2",
                                                },
                                              },
                                              [
                                                _c(
                                                  "v-avatar",
                                                  {
                                                    staticClass: "elevation-3",
                                                    attrs: { size: "60" },
                                                  },
                                                  [
                                                    _c("img", {
                                                      attrs: {
                                                        src: "images/psu_logo.png",
                                                        alt: "ICTMO",
                                                      },
                                                    }),
                                                  ]
                                                ),
                                              ],
                                              1
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                staticClass: "ma-3",
                                                attrs: {
                                                  text: "",
                                                  icon: "",
                                                  color: "yellow lighten-2",
                                                },
                                              },
                                              [
                                                _c(
                                                  "v-avatar",
                                                  {
                                                    staticClass: "elevation-3",
                                                    attrs: { size: "60" },
                                                  },
                                                  [
                                                    _c("img", {
                                                      attrs: {
                                                        src: "images/ictmo_logo.png",
                                                        alt: "ICTMO",
                                                      },
                                                    }),
                                                  ]
                                                ),
                                              ],
                                              1
                                            ),
                                          ],
                                          1
                                        ),
                                      ]),
                                      _vm._v(" "),
                                      _c(
                                        "h3",
                                        {
                                          staticClass:
                                            " display-1 primary--text text--accent-4 hidden-md-and-up font-weight-bold",
                                        },
                                        [
                                          _vm._v(
                                            " ParSU OSCS\n                  "
                                          ),
                                          _c("v-divider"),
                                        ],
                                        1
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "h4",
                                        {
                                          staticClass:
                                            " caption primary--text text--accent-4 hidden-md-and-up",
                                        },
                                        [
                                          _vm._v(
                                            "\n                    Online Student Clearance System\n                  "
                                          ),
                                        ]
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                { attrs: { cols: "12", lg: "6" } },
                                [
                                  _vm.regsSuc
                                    ? _c(
                                        "v-alert",
                                        {
                                          staticClass: "overline",
                                          attrs: {
                                            dense: "",
                                            text: "",
                                            type: "success",
                                          },
                                        },
                                        [
                                          _vm._v(
                                            "\n                      " +
                                              _vm._s(_vm.message) +
                                              "\n                    "
                                          ),
                                        ]
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  _c(
                                    "v-card",
                                    {
                                      staticClass: "rounded-xl",
                                      staticStyle: {
                                        "padding-left": "20px",
                                        "padding-right": "20px",
                                        "padding-bottom": "20px",
                                      },
                                      attrs: { elevation: "1", default: "" },
                                    },
                                    [
                                      _c("v-card-text", {}, [
                                        _c(
                                          "h1",
                                          {
                                            staticClass:
                                              "text-center desplay-2 black--text text--accent3",
                                            staticStyle: {
                                              "padding-top": "20px",
                                            },
                                          },
                                          [
                                            _vm._v(
                                              "\n                      Login\n                    "
                                            ),
                                          ]
                                        ),
                                      ]),
                                      _vm._v(" "),
                                      _c(
                                        "v-list-item",
                                        { attrs: { "three-line": "" } },
                                        [
                                          _c("v-list-item-content", [
                                            _c(
                                              "div",
                                              {
                                                staticClass:
                                                  "text-center pb-3 mt-4",
                                              },
                                              [
                                                _c(
                                                  "v-form",
                                                  {
                                                    attrs: { method: "post" },
                                                    on: {
                                                      submit: function (
                                                        $event
                                                      ) {
                                                        $event.stopPropagation()
                                                        $event.preventDefault()
                                                        return _vm.save.apply(
                                                          null,
                                                          arguments
                                                        )
                                                      },
                                                    },
                                                    model: {
                                                      value: _vm.valid,
                                                      callback: function ($$v) {
                                                        _vm.valid = $$v
                                                      },
                                                      expression: "valid",
                                                    },
                                                  },
                                                  [
                                                    _c("v-text-field", {
                                                      attrs: {
                                                        label: "Email",
                                                        name: "Email",
                                                        type: "text",
                                                        color: "teal accent-4",
                                                        rules: [
                                                          _vm.rules.required,
                                                          _vm.rules.validEmail,
                                                        ],
                                                        dense: "",
                                                        filled: "",
                                                        rounded: "",
                                                        autofocus: "",
                                                      },
                                                      model: {
                                                        value: _vm.user.email,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.user,
                                                            "email",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "user.email",
                                                      },
                                                    }),
                                                    _vm._v(" "),
                                                    _c("v-text-field", {
                                                      attrs: {
                                                        dense: "",
                                                        filled: "",
                                                        rounded: "",
                                                        type: _vm.showPassword
                                                          ? "text"
                                                          : "password",
                                                        label: "Password",
                                                        color: "teal accent-4",
                                                        "append-icon":
                                                          _vm.showPassword
                                                            ? "mdi-eye"
                                                            : "mdi-eye-off",
                                                        rules: [
                                                          _vm.rules.required,
                                                        ],
                                                      },
                                                      on: {
                                                        "click:append":
                                                          function ($event) {
                                                            _vm.showPassword =
                                                              !_vm.showPassword
                                                          },
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.user.password,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.user,
                                                            "password",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "user.password",
                                                      },
                                                    }),
                                                    _vm._v(" "),
                                                    _c(
                                                      "div",
                                                      {
                                                        staticClass:
                                                          "text-center mt-3 pb-3",
                                                      },
                                                      [
                                                        _c(
                                                          "v-btn",
                                                          {
                                                            staticClass:
                                                              "white--text",
                                                            attrs: {
                                                              block: "",
                                                              "x-large": "",
                                                              rounded: "",
                                                              color:
                                                                "blue accent-3",
                                                              type: "submit",
                                                              loading:
                                                                _vm.loginloading,
                                                            },
                                                            on: {
                                                              click: function (
                                                                $event
                                                              ) {
                                                                $event.preventDefault()
                                                                return _vm.login.apply(
                                                                  null,
                                                                  arguments
                                                                )
                                                              },
                                                            },
                                                          },
                                                          [_vm._v("SIGN IN")]
                                                        ),
                                                        _vm._v(" "),
                                                        _c(
                                                          "v-btn",
                                                          {
                                                            staticClass:
                                                              "white--text mt-2",
                                                            attrs: {
                                                              block: "",
                                                              "x-large": "",
                                                              rounded: "",
                                                              color:
                                                                "red accent-3",
                                                            },
                                                            on: {
                                                              click: function (
                                                                $event
                                                              ) {
                                                                return _vm.loginG()
                                                              },
                                                            },
                                                          },
                                                          [
                                                            _vm._v(
                                                              " Google Sign In"
                                                            ),
                                                          ]
                                                        ),
                                                        _vm._v(" "),
                                                        _c(
                                                          "div",
                                                          {
                                                            staticClass:
                                                              "text-center mt-0 pb-0",
                                                          },
                                                          [
                                                            _c(
                                                              "v-btn",
                                                              {
                                                                staticClass:
                                                                  "text-center mt-3 primary--text",
                                                                attrs: {
                                                                  text: "",
                                                                  center: "",
                                                                },
                                                                on: {
                                                                  click:
                                                                    _vm.resetPassword,
                                                                },
                                                              },
                                                              [
                                                                _vm._v(
                                                                  "\n                                Forgot your password?\n                              "
                                                                ),
                                                              ]
                                                            ),
                                                          ],
                                                          1
                                                        ),
                                                      ],
                                                      1
                                                    ),
                                                  ],
                                                  1
                                                ),
                                                _vm._v(" "),
                                                _c("v-divider"),
                                              ],
                                              1
                                            ),
                                          ]),
                                        ],
                                        1
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "v-card-actions",
                                        [
                                          _c(
                                            "v-dialog",
                                            {
                                              attrs: {
                                                persistent: "",
                                                width: "400",
                                                "max-width": "800px",
                                              },
                                              scopedSlots: _vm._u([
                                                {
                                                  key: "activator",
                                                  fn: function (ref) {
                                                    var on = ref.on
                                                    var attrs = ref.attrs
                                                    return [
                                                      _c(
                                                        "v-btn",
                                                        _vm._g(
                                                          _vm._b(
                                                            {
                                                              attrs: {
                                                                block: "",
                                                                color:
                                                                  "success",
                                                                "x-large": "",
                                                              },
                                                            },
                                                            "v-btn",
                                                            attrs,
                                                            false
                                                          ),
                                                          on
                                                        ),
                                                        [
                                                          _vm._v(
                                                            "Activate Account"
                                                          ),
                                                        ]
                                                      ),
                                                    ]
                                                  },
                                                },
                                              ]),
                                              model: {
                                                value: _vm.dialog,
                                                callback: function ($$v) {
                                                  _vm.dialog = $$v
                                                },
                                                expression: "dialog",
                                              },
                                            },
                                            [
                                              _vm._v(" "),
                                              _c(
                                                "div",
                                                [
                                                  _c(
                                                    "v-form",
                                                    {
                                                      attrs: { method: "post" },
                                                      model: {
                                                        value: _vm.validRegs,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.validRegs = $$v
                                                        },
                                                        expression: "validRegs",
                                                      },
                                                    },
                                                    [
                                                      _c(
                                                        "v-card",
                                                        [
                                                          _c(
                                                            "v-card-title",
                                                            {
                                                              staticClass:
                                                                "white--text text-uppercase elevation-2 mb-0 pb-1 justify-space-between",
                                                              staticStyle: {
                                                                background:
                                                                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                                                              },
                                                            },
                                                            [
                                                              _c(
                                                                "span",
                                                                {
                                                                  staticClass:
                                                                    "text-h6",
                                                                },
                                                                [
                                                                  _vm._v(
                                                                    "  Activate Account "
                                                                  ),
                                                                ]
                                                              ),
                                                              _vm._v(" "),
                                                              _c(
                                                                "v-btn",
                                                                {
                                                                  attrs: {
                                                                    icon: "",
                                                                    dark: "",
                                                                  },
                                                                  on: {
                                                                    click:
                                                                      function (
                                                                        $event
                                                                      ) {
                                                                        ;(_vm.dialog = false),
                                                                          (_vm.step = 1),
                                                                          (_vm.activationCode =
                                                                            "")
                                                                      },
                                                                  },
                                                                },
                                                                [
                                                                  _c(
                                                                    "v-icon",
                                                                    {
                                                                      attrs: {
                                                                        dark: "",
                                                                      },
                                                                    },
                                                                    [
                                                                      _vm._v(
                                                                        " mdi-close "
                                                                      ),
                                                                    ]
                                                                  ),
                                                                ],
                                                                1
                                                              ),
                                                            ],
                                                            1
                                                          ),
                                                          _vm._v(" "),
                                                          _c("v-divider"),
                                                          _vm._v(" "),
                                                          _c(
                                                            "v-window",
                                                            {
                                                              attrs: {
                                                                touchless: "",
                                                              },
                                                              model: {
                                                                value: _vm.step,
                                                                callback:
                                                                  function (
                                                                    $$v
                                                                  ) {
                                                                    _vm.step =
                                                                      $$v
                                                                  },
                                                                expression:
                                                                  "step",
                                                              },
                                                            },
                                                            [
                                                              _c(
                                                                "v-form",
                                                                {
                                                                  model: {
                                                                    value:
                                                                      _vm.validUserInfo,
                                                                    callback:
                                                                      function (
                                                                        $$v
                                                                      ) {
                                                                        _vm.validUserInfo =
                                                                          $$v
                                                                      },
                                                                    expression:
                                                                      "validUserInfo",
                                                                  },
                                                                },
                                                                [
                                                                  _c(
                                                                    "v-window-item",
                                                                    {
                                                                      attrs: {
                                                                        value: 2,
                                                                      },
                                                                    },
                                                                    [
                                                                      _c(
                                                                        "v-row",
                                                                        {
                                                                          staticClass:
                                                                            "fill-height",
                                                                        },
                                                                        [
                                                                          _c(
                                                                            "v-col",
                                                                            {
                                                                              attrs:
                                                                                {
                                                                                  cols: "12",
                                                                                  md: "12",
                                                                                },
                                                                            },
                                                                            [
                                                                              _c(
                                                                                "v-card-text",
                                                                                {},
                                                                                [
                                                                                  _c(
                                                                                    "h4",
                                                                                    {
                                                                                      staticClass:
                                                                                        "text-center",
                                                                                    },
                                                                                    [
                                                                                      _vm._v(
                                                                                        "\n                                            Ensure your activation code for activation\n                                          "
                                                                                      ),
                                                                                    ]
                                                                                  ),
                                                                                  _vm._v(
                                                                                    " "
                                                                                  ),
                                                                                  _c(
                                                                                    "v-form",
                                                                                    {
                                                                                      on: {
                                                                                        click:
                                                                                          _vm.checkUUID,
                                                                                      },
                                                                                      model:
                                                                                        {
                                                                                          value:
                                                                                            _vm.validRegs,
                                                                                          callback:
                                                                                            function (
                                                                                              $$v
                                                                                            ) {
                                                                                              _vm.validRegs =
                                                                                                $$v
                                                                                            },
                                                                                          expression:
                                                                                            "validRegs",
                                                                                        },
                                                                                    },
                                                                                    [
                                                                                      _c(
                                                                                        "v-text-field",
                                                                                        {
                                                                                          staticClass:
                                                                                            "overline",
                                                                                          attrs:
                                                                                            {
                                                                                              label:
                                                                                                "Activation Code",
                                                                                              name: "ActivationCode",
                                                                                              "prepend-icon":
                                                                                                "mdi-account-details",
                                                                                              type: "text",
                                                                                              color:
                                                                                                "teal accent-4",
                                                                                              autofocus:
                                                                                                "",
                                                                                              "success-messages":
                                                                                                _vm.success,
                                                                                              "error-messages":
                                                                                                _vm.error,
                                                                                              blur: _vm.checkUUID,
                                                                                              rules:
                                                                                                [
                                                                                                  _vm
                                                                                                    .rules
                                                                                                    .required,
                                                                                                ],
                                                                                            },
                                                                                          model:
                                                                                            {
                                                                                              value:
                                                                                                _vm.activationCode,
                                                                                              callback:
                                                                                                function (
                                                                                                  $$v
                                                                                                ) {
                                                                                                  _vm.activationCode =
                                                                                                    $$v
                                                                                                },
                                                                                              expression:
                                                                                                "activationCode",
                                                                                            },
                                                                                        }
                                                                                      ),
                                                                                    ],
                                                                                    1
                                                                                  ),
                                                                                ],
                                                                                1
                                                                              ),
                                                                              _vm._v(
                                                                                " "
                                                                              ),
                                                                              _c(
                                                                                "v-card-actions",
                                                                                [
                                                                                  _c(
                                                                                    "div",
                                                                                    {
                                                                                      staticClass:
                                                                                        "text-center mt-3 pb-3",
                                                                                    }
                                                                                  ),
                                                                                ]
                                                                              ),
                                                                            ],
                                                                            1
                                                                          ),
                                                                        ],
                                                                        1
                                                                      ),
                                                                    ],
                                                                    1
                                                                  ),
                                                                ],
                                                                1
                                                              ),
                                                              _vm._v(" "),
                                                              _c(
                                                                "v-form",
                                                                {
                                                                  model: {
                                                                    value:
                                                                      _vm.validRegs,
                                                                    callback:
                                                                      function (
                                                                        $$v
                                                                      ) {
                                                                        _vm.validRegs =
                                                                          $$v
                                                                      },
                                                                    expression:
                                                                      "validRegs",
                                                                  },
                                                                },
                                                                [
                                                                  _c(
                                                                    "v-window-item",
                                                                    {
                                                                      attrs: {
                                                                        value: 3,
                                                                      },
                                                                    },
                                                                    [
                                                                      _c(
                                                                        "v-row",
                                                                        {
                                                                          staticClass:
                                                                            "fill-height",
                                                                        },
                                                                        [
                                                                          _c(
                                                                            "v-col",
                                                                            {
                                                                              attrs:
                                                                                {
                                                                                  cols: "12",
                                                                                  md: "12",
                                                                                },
                                                                            },
                                                                            [
                                                                              _c(
                                                                                "v-card-text",
                                                                                [
                                                                                  _c(
                                                                                    "h1",
                                                                                    {
                                                                                      staticClass:
                                                                                        "text-center overline primary--text text--accent4",
                                                                                    },
                                                                                    [
                                                                                      _vm._v(
                                                                                        "\n                                          Register Account\n                                        "
                                                                                      ),
                                                                                    ]
                                                                                  ),
                                                                                  _vm._v(
                                                                                    " "
                                                                                  ),
                                                                                  _c(
                                                                                    "h4",
                                                                                    {
                                                                                      staticClass:
                                                                                        "text-center sub-title",
                                                                                    },
                                                                                    [
                                                                                      _vm._v(
                                                                                        "\n                                          Ensure your email for registration\n                                        "
                                                                                      ),
                                                                                    ]
                                                                                  ),
                                                                                  _vm._v(
                                                                                    " "
                                                                                  ),
                                                                                  _c(
                                                                                    "v-form",
                                                                                    {
                                                                                      attrs:
                                                                                        {
                                                                                          method:
                                                                                            "post",
                                                                                        },
                                                                                      on: {
                                                                                        submit:
                                                                                          function (
                                                                                            $event
                                                                                          ) {
                                                                                            $event.stopPropagation()
                                                                                            $event.preventDefault()
                                                                                            return _vm.activate.apply(
                                                                                              null,
                                                                                              arguments
                                                                                            )
                                                                                          },
                                                                                      },
                                                                                      model:
                                                                                        {
                                                                                          value:
                                                                                            _vm.validRegs,
                                                                                          callback:
                                                                                            function (
                                                                                              $$v
                                                                                            ) {
                                                                                              _vm.validRegs =
                                                                                                $$v
                                                                                            },
                                                                                          expression:
                                                                                            "validRegs",
                                                                                        },
                                                                                    },
                                                                                    [
                                                                                      _c(
                                                                                        "v-text-field",
                                                                                        {
                                                                                          attrs:
                                                                                            {
                                                                                              label:
                                                                                                "Student ID Number",
                                                                                              name: "ActivationCode",
                                                                                              "prepend-icon":
                                                                                                "mdi-ticket-account",
                                                                                              type: "text",
                                                                                              color:
                                                                                                "teal accent-4",
                                                                                              disabled:
                                                                                                "",
                                                                                            },
                                                                                          model:
                                                                                            {
                                                                                              value:
                                                                                                _vm
                                                                                                  .student
                                                                                                  .student_number,
                                                                                              callback:
                                                                                                function (
                                                                                                  $$v
                                                                                                ) {
                                                                                                  _vm.$set(
                                                                                                    _vm.student,
                                                                                                    "student_number",
                                                                                                    $$v
                                                                                                  )
                                                                                                },
                                                                                              expression:
                                                                                                "student.student_number",
                                                                                            },
                                                                                        }
                                                                                      ),
                                                                                      _vm._v(
                                                                                        " "
                                                                                      ),
                                                                                      _c(
                                                                                        "v-text-field",
                                                                                        {
                                                                                          attrs:
                                                                                            {
                                                                                              label:
                                                                                                "Name",
                                                                                              name: "name",
                                                                                              "prepend-icon":
                                                                                                "mdi-account",
                                                                                              type: "text",
                                                                                              color:
                                                                                                "teal accent-4",
                                                                                              disabled:
                                                                                                "",
                                                                                            },
                                                                                          model:
                                                                                            {
                                                                                              value:
                                                                                                _vm
                                                                                                  .student
                                                                                                  .name,
                                                                                              callback:
                                                                                                function (
                                                                                                  $$v
                                                                                                ) {
                                                                                                  _vm.$set(
                                                                                                    _vm.student,
                                                                                                    "name",
                                                                                                    $$v
                                                                                                  )
                                                                                                },
                                                                                              expression:
                                                                                                "student.name",
                                                                                            },
                                                                                        }
                                                                                      ),
                                                                                      _vm._v(
                                                                                        " "
                                                                                      ),
                                                                                      _c(
                                                                                        "v-text-field",
                                                                                        {
                                                                                          attrs:
                                                                                            {
                                                                                              label:
                                                                                                "Program",
                                                                                              name: "program",
                                                                                              "prepend-icon":
                                                                                                "mdi-clipboard-list-outline",
                                                                                              type: "text",
                                                                                              color:
                                                                                                "teal accent-4",
                                                                                              disabled:
                                                                                                "",
                                                                                            },
                                                                                          model:
                                                                                            {
                                                                                              value:
                                                                                                _vm.program,
                                                                                              callback:
                                                                                                function (
                                                                                                  $$v
                                                                                                ) {
                                                                                                  _vm.program =
                                                                                                    $$v
                                                                                                },
                                                                                              expression:
                                                                                                "program",
                                                                                            },
                                                                                        }
                                                                                      ),
                                                                                      _vm._v(
                                                                                        " "
                                                                                      ),
                                                                                      _c(
                                                                                        "v-text-field",
                                                                                        {
                                                                                          attrs:
                                                                                            {
                                                                                              type: "email",
                                                                                              "success-messages":
                                                                                                _vm.success,
                                                                                              "error-messages":
                                                                                                _vm.error,
                                                                                              blur: _vm.checkEmail,
                                                                                              label:
                                                                                                "Email",
                                                                                              "prepend-icon":
                                                                                                "mdi-email",
                                                                                              color:
                                                                                                "teal accent-4",
                                                                                              required:
                                                                                                "",
                                                                                              rules:
                                                                                                [
                                                                                                  _vm
                                                                                                    .rules
                                                                                                    .required,
                                                                                                  _vm
                                                                                                    .rules
                                                                                                    .validEmail,
                                                                                                ],
                                                                                            },
                                                                                          on: {
                                                                                            keyup:
                                                                                              _vm.lowercase,
                                                                                          },
                                                                                          model:
                                                                                            {
                                                                                              value:
                                                                                                _vm
                                                                                                  .editedItem
                                                                                                  .email,
                                                                                              callback:
                                                                                                function (
                                                                                                  $$v
                                                                                                ) {
                                                                                                  _vm.$set(
                                                                                                    _vm.editedItem,
                                                                                                    "email",
                                                                                                    $$v
                                                                                                  )
                                                                                                },
                                                                                              expression:
                                                                                                "editedItem.email",
                                                                                            },
                                                                                        }
                                                                                      ),
                                                                                      _vm._v(
                                                                                        " "
                                                                                      ),
                                                                                      _c(
                                                                                        "v-text-field",
                                                                                        {
                                                                                          attrs:
                                                                                            {
                                                                                              type: _vm.showPassword
                                                                                                ? "text"
                                                                                                : "password",
                                                                                              label:
                                                                                                "Password",
                                                                                              color:
                                                                                                "teal accent-4",
                                                                                              rules:
                                                                                                [
                                                                                                  _vm
                                                                                                    .rules
                                                                                                    .required,
                                                                                                  _vm.rules.min(
                                                                                                    5,
                                                                                                    _vm
                                                                                                      .editedItem
                                                                                                      .password
                                                                                                  ),
                                                                                                ],
                                                                                              "prepend-icon":
                                                                                                "mdi-account-lock-outline",
                                                                                              "append-icon":
                                                                                                _vm.showPassword
                                                                                                  ? "mdi-eye"
                                                                                                  : "mdi-eye-off",
                                                                                              required:
                                                                                                "",
                                                                                            },
                                                                                          on: {
                                                                                            "click:append":
                                                                                              function (
                                                                                                $event
                                                                                              ) {
                                                                                                _vm.showPassword =
                                                                                                  !_vm.showPassword
                                                                                              },
                                                                                          },
                                                                                          model:
                                                                                            {
                                                                                              value:
                                                                                                _vm
                                                                                                  .editedItem
                                                                                                  .password,
                                                                                              callback:
                                                                                                function (
                                                                                                  $$v
                                                                                                ) {
                                                                                                  _vm.$set(
                                                                                                    _vm.editedItem,
                                                                                                    "password",
                                                                                                    $$v
                                                                                                  )
                                                                                                },
                                                                                              expression:
                                                                                                "editedItem.password",
                                                                                            },
                                                                                        }
                                                                                      ),
                                                                                      _vm._v(
                                                                                        " "
                                                                                      ),
                                                                                      _c(
                                                                                        "v-text-field",
                                                                                        {
                                                                                          attrs:
                                                                                            {
                                                                                              type: _vm.showPasswordc
                                                                                                ? "text"
                                                                                                : "password",
                                                                                              label:
                                                                                                "Confirm Password",
                                                                                              color:
                                                                                                "teal accent-4",
                                                                                              "prepend-icon":
                                                                                                "mdi-account-lock-outline",
                                                                                              "append-icon":
                                                                                                _vm.showPasswordc
                                                                                                  ? "mdi-eye"
                                                                                                  : "mdi-eye-off",
                                                                                              required:
                                                                                                "",
                                                                                              rules:
                                                                                                [
                                                                                                  _vm
                                                                                                    .rules
                                                                                                    .required,
                                                                                                  _vm.passwordmatch,
                                                                                                ],
                                                                                            },
                                                                                          on: {
                                                                                            "click:append":
                                                                                              function (
                                                                                                $event
                                                                                              ) {
                                                                                                _vm.showPasswordc =
                                                                                                  !_vm.showPasswordc
                                                                                              },
                                                                                          },
                                                                                          model:
                                                                                            {
                                                                                              value:
                                                                                                _vm
                                                                                                  .editedItem
                                                                                                  .rpassword,
                                                                                              callback:
                                                                                                function (
                                                                                                  $$v
                                                                                                ) {
                                                                                                  _vm.$set(
                                                                                                    _vm.editedItem,
                                                                                                    "rpassword",
                                                                                                    $$v
                                                                                                  )
                                                                                                },
                                                                                              expression:
                                                                                                "editedItem.rpassword",
                                                                                            },
                                                                                        }
                                                                                      ),
                                                                                      _vm._v(
                                                                                        " "
                                                                                      ),
                                                                                      _c(
                                                                                        "div",
                                                                                        {
                                                                                          staticClass:
                                                                                            "text-center mt-3 pb-3",
                                                                                        },
                                                                                        [
                                                                                          _c(
                                                                                            "v-btn",
                                                                                            {
                                                                                              attrs:
                                                                                                {
                                                                                                  rounded:
                                                                                                    "",
                                                                                                  color:
                                                                                                    "blue white--text accent-3",
                                                                                                  type: "submit",
                                                                                                  disabled:
                                                                                                    !_vm.validRegs,
                                                                                                },
                                                                                            },
                                                                                            [
                                                                                              _vm._v(
                                                                                                "REGISTER"
                                                                                              ),
                                                                                            ]
                                                                                          ),
                                                                                        ],
                                                                                        1
                                                                                      ),
                                                                                    ],
                                                                                    1
                                                                                  ),
                                                                                ],
                                                                                1
                                                                              ),
                                                                            ],
                                                                            1
                                                                          ),
                                                                        ],
                                                                        1
                                                                      ),
                                                                    ],
                                                                    1
                                                                  ),
                                                                ],
                                                                1
                                                              ),
                                                            ],
                                                            1
                                                          ),
                                                          _vm._v(" "),
                                                          _c("v-divider"),
                                                        ],
                                                        1
                                                      ),
                                                    ],
                                                    1
                                                  ),
                                                ],
                                                1
                                              ),
                                            ]
                                          ),
                                        ],
                                        1
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "div",
                                        {
                                          staticClass:
                                            "text-center font-italic",
                                        },
                                        [
                                          _c("h5", [
                                            _vm._v(
                                              "For Inquiries: oscs.support@parsu.edu.ph"
                                            ),
                                          ]),
                                        ]
                                      ),
                                    ],
                                    1
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-snackbar",
                        {
                          attrs: { top: "" },
                          scopedSlots: _vm._u([
                            {
                              key: "action",
                              fn: function (ref) {
                                var attrs = ref.attrs
                                return [
                                  _c(
                                    "v-btn",
                                    _vm._b(
                                      {
                                        attrs: { color: "pink", text: "" },
                                        on: {
                                          click: function ($event) {
                                            _vm.snackbar = false
                                          },
                                        },
                                      },
                                      "v-btn",
                                      attrs,
                                      false
                                    ),
                                    [
                                      _vm._v(
                                        "\n                Close\n              "
                                      ),
                                    ]
                                  ),
                                ]
                              },
                            },
                          ]),
                          model: {
                            value: _vm.snackbar,
                            callback: function ($$v) {
                              _vm.snackbar = $$v
                            },
                            expression: "snackbar",
                          },
                        },
                        [
                          _vm._v(
                            "\n            " +
                              _vm._s(_vm.text) +
                              "\n\n            "
                          ),
                        ]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c("div", { attrs: { id: "fb-root" } }),
          _vm._v(" "),
          _c("div", {
            staticClass: "fb-customerchat",
            attrs: { attribution: "setup_tool", page_id: "110490564450712" },
          }),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/osas/OSASComponent.vue?vue&type=template&id=42d469d9&":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/osas/OSASComponent.vue?vue&type=template&id=42d469d9& ***!
  \*********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-email")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-bell")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-avatar",
                { attrs: { size: "24", item: "" } },
                [
                  _c("v-img", {
                    attrs: { src: "images/psu_logo.png", alt: "parsu_logo" },
                  }),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5 elevation-0" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=template&id=04e80bfc&":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=template&id=04e80bfc& ***!
  \********************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-email")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-bell")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-avatar",
                { attrs: { size: "24", item: "" } },
                [
                  _c("v-img", {
                    attrs: { src: "images/psu_logo.png", alt: "parsu_logo" },
                  }),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5 elevation-0" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ForgotPassword.vue?vue&type=template&id=78e03cfa&":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/page/ForgotPassword.vue?vue&type=template&id=78e03cfa& ***!
  \**********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-main",
        [
          _c(
            "v-container",
            { staticClass: "fill-height", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { align: "center", justify: "center" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", sm: "6", md: "6" } },
                    [
                      _c(
                        "v-card",
                        { staticClass: "elevation-2" },
                        [
                          _c(
                            "v-row",
                            { staticClass: "fill-height" },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "12", md: "12" } },
                                [
                                  _c(
                                    "v-card-text",
                                    { staticClass: "mt-12" },
                                    [
                                      _c(
                                        "h1",
                                        {
                                          staticClass:
                                            "text-center desplay-2 primary--text text--accent4",
                                        },
                                        [
                                          _vm._v(
                                            "\r\n                          Reset Password\r\n                        "
                                          ),
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "h4",
                                        { staticClass: "text-center mt-4" },
                                        [
                                          _vm._v(
                                            "\r\n                          Enter your registered email \r\n                        "
                                          ),
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "v-form",
                                        {
                                          attrs: {
                                            autocomplete: "off",
                                            method: "post",
                                          },
                                          on: {
                                            submit: function ($event) {
                                              $event.stopPropagation()
                                              $event.preventDefault()
                                              return _vm.requestResetPassword.apply(
                                                null,
                                                arguments
                                              )
                                            },
                                          },
                                          model: {
                                            value: _vm.valid,
                                            callback: function ($$v) {
                                              _vm.valid = $$v
                                            },
                                            expression: "valid",
                                          },
                                        },
                                        [
                                          _c("v-text-field", {
                                            staticClass: "form-control",
                                            attrs: {
                                              label: "Email",
                                              name: "Email",
                                              "prepend-icon": "mdi-email",
                                              color: "teal accent-4",
                                              "success-messages": _vm.success,
                                              "error-messages": _vm.error,
                                              rules: [
                                                _vm.rules.required,
                                                _vm.rules.validEmail,
                                              ],
                                              required: "",
                                              type: "email",
                                              id: "email",
                                              placeholder: "user@example.com",
                                            },
                                            model: {
                                              value: _vm.email,
                                              callback: function ($$v) {
                                                _vm.email = $$v
                                              },
                                              expression: "email",
                                            },
                                          }),
                                          _vm._v(" "),
                                          _c(
                                            "div",
                                            {
                                              staticClass:
                                                "text-center mt-3 pb-3",
                                            },
                                            [
                                              _c(
                                                "v-btn",
                                                {
                                                  attrs: {
                                                    color: "primary",
                                                    depressed: "",
                                                    disabled: !_vm.valid,
                                                    elevation: "0",
                                                    rounded: "",
                                                    type: "submit",
                                                    loading: _vm.loading,
                                                  },
                                                },
                                                [
                                                  _vm._v(
                                                    "Send Password Reset Link"
                                                  ),
                                                ]
                                              ),
                                            ],
                                            1
                                          ),
                                        ],
                                        1
                                      ),
                                    ],
                                    1
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-snackbar",
        {
          attrs: { top: "" },
          scopedSlots: _vm._u([
            {
              key: "action",
              fn: function (ref) {
                var attrs = ref.attrs
                return [
                  _c(
                    "v-btn",
                    _vm._b(
                      {
                        attrs: { color: "pink", text: "" },
                        on: {
                          click: function ($event) {
                            _vm.snackbar = false
                          },
                        },
                      },
                      "v-btn",
                      attrs,
                      false
                    ),
                    [_vm._v("\r\n                  Close\r\n                ")]
                  ),
                ]
              },
            },
          ]),
          model: {
            value: _vm.snackbar,
            callback: function ($$v) {
              _vm.snackbar = $$v
            },
            expression: "snackbar",
          },
        },
        [
          _vm._v(
            "\r\n              " + _vm._s(_vm.text) + "\r\n\r\n              "
          ),
        ]
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ResetEmailForm.vue?vue&type=template&id=05ad1b16&":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/page/ResetEmailForm.vue?vue&type=template&id=05ad1b16& ***!
  \**********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-main",
        [
          _c(
            "v-container",
            { staticClass: "fill-height", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { align: "center", justify: "center" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", sm: "6", md: "6" } },
                    [
                      _c(
                        "v-alert",
                        { attrs: { prominent: "", type: _vm.type } },
                        [
                          _c(
                            "v-row",
                            { attrs: { align: "center" } },
                            [
                              _c("v-col", { staticClass: "grow" }, [
                                _vm._v(
                                  "\r\n         " +
                                    _vm._s(_vm.message) +
                                    "\r\n        "
                                ),
                              ]),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                { staticClass: "shrink" },
                                [
                                  _c(
                                    "v-btn",
                                    {
                                      staticClass: "primary",
                                      on: { click: _vm.login },
                                    },
                                    [_vm._v("Back to Login")]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-snackbar",
        {
          attrs: { top: "" },
          scopedSlots: _vm._u([
            {
              key: "action",
              fn: function (ref) {
                var attrs = ref.attrs
                return [
                  _c(
                    "v-btn",
                    _vm._b(
                      {
                        attrs: { color: "pink", text: "" },
                        on: {
                          click: function ($event) {
                            _vm.snackbar = false
                          },
                        },
                      },
                      "v-btn",
                      attrs,
                      false
                    ),
                    [_vm._v("\r\n                  Close\r\n                ")]
                  ),
                ]
              },
            },
          ]),
          model: {
            value: _vm.snackbar,
            callback: function ($$v) {
              _vm.snackbar = $$v
            },
            expression: "snackbar",
          },
        },
        [
          _vm._v(
            "\r\n              " + _vm._s(_vm.text) + "\r\n\r\n              "
          ),
        ]
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ResetPasswordForm.vue?vue&type=template&id=893c434e&":
/*!*************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/page/ResetPasswordForm.vue?vue&type=template&id=893c434e& ***!
  \*************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-main",
        [
          _c(
            "v-container",
            { staticClass: "fill-height", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { align: "center", justify: "center" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", sm: "6", md: "6" } },
                    [
                      _c(
                        "v-card",
                        { staticClass: "elevation-2" },
                        [
                          _c(
                            "v-row",
                            { staticClass: "fill-height" },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "12", md: "12" } },
                                [
                                  _c(
                                    "v-card-text",
                                    { staticClass: "mt-12" },
                                    [
                                      _c(
                                        "h1",
                                        {
                                          staticClass:
                                            "text-center desplay-2 primary--text text--accent4",
                                        },
                                        [
                                          _vm._v(
                                            "\r\n                          New Password\r\n                        "
                                          ),
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "v-form",
                                        {
                                          attrs: {
                                            autocomplete: "off",
                                            method: "post",
                                          },
                                          on: {
                                            submit: function ($event) {
                                              $event.stopPropagation()
                                              $event.preventDefault()
                                              return _vm.resetPassword.apply(
                                                null,
                                                arguments
                                              )
                                            },
                                          },
                                          model: {
                                            value: _vm.valid,
                                            callback: function ($$v) {
                                              _vm.valid = $$v
                                            },
                                            expression: "valid",
                                          },
                                        },
                                        [
                                          _c("v-text-field", {
                                            staticClass: "form-control",
                                            attrs: {
                                              label: "Email",
                                              name: "Email",
                                              disabled: "",
                                              "prepend-icon": "mdi-email",
                                              color: "teal accent-4",
                                              type: "email",
                                              id: "email",
                                              placeholder: "user@example.com",
                                            },
                                            model: {
                                              value: _vm.email,
                                              callback: function ($$v) {
                                                _vm.email = $$v
                                              },
                                              expression: "email",
                                            },
                                          }),
                                          _vm._v(" "),
                                          _c("v-text-field", {
                                            staticClass: "form-control",
                                            attrs: {
                                              type: _vm.showPassword
                                                ? "text"
                                                : "password",
                                              label: "Password",
                                              color: "teal accent-4",
                                              rules: [
                                                _vm.rules.required,
                                                _vm.rules.min(5, _vm.password),
                                              ],
                                              "prepend-icon":
                                                "mdi-account-lock-outline",
                                              "append-icon": _vm.showPassword
                                                ? "mdi-eye"
                                                : "mdi-eye-off",
                                              id: "password",
                                              placeholder: "",
                                              required: "",
                                            },
                                            on: {
                                              "click:append": function (
                                                $event
                                              ) {
                                                _vm.showPassword =
                                                  !_vm.showPassword
                                              },
                                            },
                                            model: {
                                              value: _vm.password,
                                              callback: function ($$v) {
                                                _vm.password = $$v
                                              },
                                              expression: "password",
                                            },
                                          }),
                                          _vm._v(" "),
                                          _c("v-text-field", {
                                            attrs: {
                                              type: _vm.showPasswordc
                                                ? "text"
                                                : "password",
                                              label: "Confirm Password",
                                              color: "teal accent-4",
                                              "prepend-icon":
                                                "mdi-account-lock-outline",
                                              "append-icon": _vm.showPasswordc
                                                ? "mdi-eye"
                                                : "mdi-eye-off",
                                              id: "password_confirmation",
                                              placeholder: "",
                                              required: "",
                                              rules: [
                                                _vm.rules.required,
                                                _vm.passwordmatch,
                                              ],
                                            },
                                            on: {
                                              "click:append": function (
                                                $event
                                              ) {
                                                _vm.showPasswordc =
                                                  !_vm.showPasswordc
                                              },
                                            },
                                            model: {
                                              value: _vm.password_confirmation,
                                              callback: function ($$v) {
                                                _vm.password_confirmation = $$v
                                              },
                                              expression:
                                                "password_confirmation",
                                            },
                                          }),
                                          _vm._v(" "),
                                          _c(
                                            "div",
                                            {
                                              staticClass:
                                                "text-center mt-3 pb-3",
                                            },
                                            [
                                              _c(
                                                "v-btn",
                                                {
                                                  attrs: {
                                                    color: "primary",
                                                    depressed: "",
                                                    disabled: !_vm.valid,
                                                    elevation: "0",
                                                    rounded: "",
                                                    type: "submit",
                                                    loading: _vm.loading,
                                                  },
                                                },
                                                [_vm._v("Update")]
                                              ),
                                            ],
                                            1
                                          ),
                                        ],
                                        1
                                      ),
                                    ],
                                    1
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-snackbar",
        {
          attrs: { top: "" },
          scopedSlots: _vm._u([
            {
              key: "action",
              fn: function (ref) {
                var attrs = ref.attrs
                return [
                  _c(
                    "v-btn",
                    _vm._b(
                      {
                        attrs: { color: "pink", text: "" },
                        on: {
                          click: function ($event) {
                            _vm.snackbar = false
                          },
                        },
                      },
                      "v-btn",
                      attrs,
                      false
                    ),
                    [_vm._v("\r\n                  Close\r\n                ")]
                  ),
                ]
              },
            },
          ]),
          model: {
            value: _vm.snackbar,
            callback: function ($$v) {
              _vm.snackbar = $$v
            },
            expression: "snackbar",
          },
        },
        [
          _vm._v(
            "\r\n              " + _vm._s(_vm.text) + "\r\n\r\n              "
          ),
        ]
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=template&id=025ad5db&":
/*!*******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=template&id=025ad5db& ***!
  \*******************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-email")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-bell")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-avatar",
                { attrs: { size: "24", item: "" } },
                [
                  _c("v-img", {
                    attrs: { src: "images/psu_logo.png", alt: "parsu_logo" },
                  }),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5 elevation-0" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=template&id=ec10e634&":
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=template&id=ec10e634& ***!
  \************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        [
          _c(
            "v-container",
            [
              _c("v-data-table", {
                staticClass: "elevation-0",
                attrs: {
                  "item-key": "id",
                  loading: _vm.loading,
                  "loading-text": "Loading... Please wait",
                  headers: _vm.headers,
                  page: _vm.page + 1,
                  pageCount: _vm.numberOfPages,
                  items: _vm.clearancerequests.data,
                  options: _vm.options,
                  "server-items-length": _vm.totalclearancerequests,
                  "items-per-page": 10,
                  "sort-by": _vm.actions,
                  "show-select": "",
                  "footer-props": {
                    itemsPerPageOptions: [5, 10, 15],
                    itemsPerPageText: "Clearance Request Per Page",
                    "show-current-page": true,
                    "show-first-last-page": true,
                  },
                },
                on: {
                  "update:options": function ($event) {
                    _vm.options = $event
                  },
                },
                scopedSlots: _vm._u([
                  {
                    key: "top",
                    fn: function () {
                      return [
                        _c("v-text-field", {
                          attrs: {
                            "append-icon": "mdi-magnify",
                            label: "Search",
                          },
                          on: { input: _vm.searchIt },
                        }),
                        _vm._v(" "),
                        _c(
                          "v-toolbar",
                          { attrs: { flat: "", color: "white" } },
                          [
                            _c("div", { staticClass: "overline text-h6" }, [
                              _vm._v(
                                "\n            Clearance Request List\n            "
                              ),
                              _c(
                                "span",
                                { staticClass: "font-italic subtitle-2" },
                                [_vm._v("(2nd Semester A/Y 2020-2021 )")]
                              ),
                            ]),
                            _vm._v(" "),
                            _c("v-spacer"),
                            _vm._v(" "),
                            _vm.editedIndex > -1
                              ? _c(
                                  "v-dialog",
                                  {
                                    attrs: {
                                      persistent: "",
                                      "max-width": "300",
                                    },
                                    model: {
                                      value: _vm.dialog,
                                      callback: function ($$v) {
                                        _vm.dialog = $$v
                                      },
                                      expression: "dialog",
                                    },
                                  },
                                  [
                                    _c(
                                      "v-card",
                                      [
                                        _c(
                                          "v-card-title",
                                          { staticClass: "headline" },
                                          [
                                            _vm._v(
                                              "\n        Approve this Clearance Request?\n      "
                                            ),
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c("v-card-text", [
                                          _vm._v(
                                            "This will certifiy that " +
                                              _vm._s(_vm.studentName) +
                                              " is cleared from any property and money responsibility as of this date."
                                          ),
                                        ]),
                                        _vm._v(" "),
                                        _c(
                                          "v-card-actions",
                                          [
                                            _c("v-spacer"),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "green darken-1",
                                                  text: "",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    _vm.dialog = false
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n          Cancel\n        "
                                                ),
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "green darken-1",
                                                  text: "",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    return _vm.approve()
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n          Approve\n        "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _c(
                              "v-dialog",
                              {
                                attrs: { persistent: "", "max-width": "600px" },
                                model: {
                                  value: _vm.deferDialog,
                                  callback: function ($$v) {
                                    _vm.deferDialog = $$v
                                  },
                                  expression: "deferDialog",
                                },
                              },
                              [
                                _c(
                                  "v-card",
                                  [
                                    _c("v-card-title", [
                                      _c("span", { staticClass: "headline" }, [
                                        _vm._v("Add Deficiency"),
                                      ]),
                                    ]),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-text",
                                      [
                                        _c(
                                          "v-container",
                                          [
                                            _c(
                                              "v-row",
                                              [
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                      md: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-text-field", {
                                                      attrs: {
                                                        label:
                                                          "Item of Deficiency*",
                                                        required: "",
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.deficiency.title,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.deficiency,
                                                            "title",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "deficiency.title",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                                _vm._v(" "),
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                      md: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-textarea", {
                                                      attrs: {
                                                        label:
                                                          "Additional Information",
                                                        hint: "Notes or Instructions for student",
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.deficiency.note,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.deficiency,
                                                            "note",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "deficiency.note",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                              ],
                                              1
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c("small", [
                                          _vm._v("*indicates required field"),
                                        ]),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-actions",
                                      [
                                        _c("v-spacer"),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                _vm.deferDialog = false
                                              },
                                            },
                                          },
                                          [_vm._v("Close")]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                return _vm.deferItem()
                                              },
                                            },
                                          },
                                          [_vm._v("Save")]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                      ]
                    },
                    proxy: true,
                  },
                  {
                    key: "item.id",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        _c("td", [
                          _vm._v(
                            _vm._s(_vm.clearancerequests.data.indexOf(item) + 1)
                          ),
                        ]),
                      ]
                    },
                  },
                  {
                    key: "item.actions",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        [
                          !item.deficiencies.deficiencies_count
                            ? _c(
                                "v-btn",
                                {
                                  staticClass: "ma-2",
                                  attrs: {
                                    color: "success",
                                    depressed: "",
                                    "x-small": "",
                                  },
                                  on: {
                                    click: function ($event) {
                                      return _vm.editItem(item)
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "v-icon",
                                    { attrs: { dark: "", "x-small": "" } },
                                    [
                                      _vm._v(
                                        "\n        mdi-check-circle-outline\n      "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              )
                            : _vm._e(),
                        ],
                        _vm._v(" "),
                        [
                          _c(
                            "v-btn",
                            {
                              staticClass: "ma-2",
                              attrs: {
                                color: "error",
                                depressed: "",
                                "x-small": "",
                              },
                              on: {
                                click: function ($event) {
                                  return _vm.defer(item)
                                },
                              },
                            },
                            [
                              _c(
                                "v-icon",
                                { attrs: { dark: "", "x-small": "" } },
                                [
                                  _vm._v(
                                    "\n        mdi-close-circle-outline\n      "
                                  ),
                                ]
                              ),
                            ],
                            1
                          ),
                        ],
                      ]
                    },
                  },
                ]),
              }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\n        mdi-close\n      "),
                              ]),
                              _vm._v("close\n    "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\n        mdi-error\n      "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n    "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=template&id=a5f27326&":
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=template&id=a5f27326& ***!
  \************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        [
          _c(
            "v-container",
            [
              _c("v-data-table", {
                staticClass: "elevation-0",
                attrs: {
                  "item-key": "id",
                  loading: _vm.loading,
                  "loading-text": "Loading... Please wait",
                  headers: _vm.headers,
                  page: _vm.page + 1,
                  pageCount: _vm.numberOfPages,
                  items: _vm.clearancerequests.data,
                  options: _vm.options,
                  "server-items-length": _vm.totalclearancerequests,
                  "items-per-page": 10,
                  "sort-by": _vm.actions,
                  "show-select": "",
                  "footer-props": {
                    itemsPerPageOptions: [5, 10, 15],
                    itemsPerPageText: "Clearance Request Per Page",
                    "show-current-page": true,
                    "show-first-last-page": true,
                  },
                },
                on: {
                  "update:options": function ($event) {
                    _vm.options = $event
                  },
                },
                scopedSlots: _vm._u([
                  {
                    key: "top",
                    fn: function () {
                      return [
                        _c("v-text-field", {
                          attrs: {
                            "append-icon": "mdi-magnify",
                            label: "Search",
                          },
                          on: { input: _vm.searchIt },
                        }),
                        _vm._v(" "),
                        _c(
                          "v-toolbar",
                          { attrs: { flat: "", color: "white" } },
                          [
                            _c("div", { staticClass: "overline text-h6" }, [
                              _vm._v(
                                "\n            Clearance Request List\n            "
                              ),
                              _c(
                                "span",
                                { staticClass: "font-italic subtitle-2" },
                                [_vm._v("(2nd Semester A/Y 2020-2021 )")]
                              ),
                            ]),
                            _vm._v(" "),
                            _c("v-spacer"),
                            _vm._v(" "),
                            _vm.editedIndex > -1
                              ? _c(
                                  "v-dialog",
                                  {
                                    attrs: {
                                      persistent: "",
                                      "max-width": "300",
                                    },
                                    model: {
                                      value: _vm.dialog,
                                      callback: function ($$v) {
                                        _vm.dialog = $$v
                                      },
                                      expression: "dialog",
                                    },
                                  },
                                  [
                                    _c(
                                      "v-card",
                                      [
                                        _c(
                                          "v-card-title",
                                          { staticClass: "headline" },
                                          [
                                            _vm._v(
                                              "\n        Approve this Clearance Request?\n      "
                                            ),
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c("v-card-text", [
                                          _vm._v(
                                            "This will certifiy that " +
                                              _vm._s(_vm.studentName) +
                                              " is cleared from any property and money responsibility as of this date."
                                          ),
                                        ]),
                                        _vm._v(" "),
                                        _c(
                                          "v-card-actions",
                                          [
                                            _c("v-spacer"),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "green darken-1",
                                                  text: "",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    _vm.dialog = false
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n          Cancel\n        "
                                                ),
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "green darken-1",
                                                  text: "",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    return _vm.approve()
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n          Approve\n        "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _c(
                              "v-dialog",
                              {
                                attrs: { persistent: "", "max-width": "600px" },
                                model: {
                                  value: _vm.deferDialog,
                                  callback: function ($$v) {
                                    _vm.deferDialog = $$v
                                  },
                                  expression: "deferDialog",
                                },
                              },
                              [
                                _c(
                                  "v-card",
                                  [
                                    _c("v-card-title", [
                                      _c("span", { staticClass: "headline" }, [
                                        _vm._v("Add Deficiency"),
                                      ]),
                                    ]),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-text",
                                      [
                                        _c(
                                          "v-container",
                                          [
                                            _c(
                                              "v-row",
                                              [
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                      md: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-text-field", {
                                                      attrs: {
                                                        label:
                                                          "Item of Deficiency*",
                                                        required: "",
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.deficiency.title,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.deficiency,
                                                            "title",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "deficiency.title",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                                _vm._v(" "),
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                      md: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-textarea", {
                                                      attrs: {
                                                        label:
                                                          "Additional Information",
                                                        hint: "Notes or Instructions for student",
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.deficiency.note,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.deficiency,
                                                            "note",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "deficiency.note",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                              ],
                                              1
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c("small", [
                                          _vm._v("*indicates required field"),
                                        ]),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-actions",
                                      [
                                        _c("v-spacer"),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                _vm.deferDialog = false
                                              },
                                            },
                                          },
                                          [_vm._v("Close")]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                return _vm.deferItem()
                                              },
                                            },
                                          },
                                          [_vm._v("Save")]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                      ]
                    },
                    proxy: true,
                  },
                  {
                    key: "item.id",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        _c("td", [
                          _vm._v(
                            _vm._s(_vm.clearancerequests.data.indexOf(item) + 1)
                          ),
                        ]),
                      ]
                    },
                  },
                  {
                    key: "item.actions",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        [
                          !item.deficiencies.deficiencies_count
                            ? _c(
                                "v-btn",
                                {
                                  staticClass: "ma-2",
                                  attrs: {
                                    color: "success",
                                    depressed: "",
                                    "x-small": "",
                                  },
                                  on: {
                                    click: function ($event) {
                                      return _vm.editItem(item)
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "v-icon",
                                    { attrs: { dark: "", "x-small": "" } },
                                    [
                                      _vm._v(
                                        "\n        mdi-check-circle-outline\n      "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              )
                            : _vm._e(),
                        ],
                        _vm._v(" "),
                        [
                          _c(
                            "v-btn",
                            {
                              staticClass: "ma-2",
                              attrs: {
                                color: "error",
                                depressed: "",
                                "x-small": "",
                              },
                              on: {
                                click: function ($event) {
                                  return _vm.defer(item)
                                },
                              },
                            },
                            [
                              _c(
                                "v-icon",
                                { attrs: { dark: "", "x-small": "" } },
                                [
                                  _vm._v(
                                    "\n        mdi-close-circle-outline\n      "
                                  ),
                                ]
                              ),
                            ],
                            1
                          ),
                        ],
                      ]
                    },
                  },
                ]),
              }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\n        mdi-close\n      "),
                              ]),
                              _vm._v("close\n    "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\n        mdi-error\n      "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n    "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=template&id=3943ac89&":
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=template&id=3943ac89& ***!
  \************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        [
          _c(
            "v-container",
            [
              _c("v-data-table", {
                staticClass: "elevation-0",
                attrs: {
                  "item-key": "id",
                  loading: _vm.loading,
                  "loading-text": "Loading... Please wait",
                  headers: _vm.headers,
                  page: _vm.page + 1,
                  pageCount: _vm.numberOfPages,
                  items: _vm.clearancerequests.data,
                  options: _vm.options,
                  "server-items-length": _vm.totalclearancerequests,
                  "items-per-page": 10,
                  "sort-by": _vm.actions,
                  "show-select": "",
                  "footer-props": {
                    itemsPerPageOptions: [5, 10, 15],
                    itemsPerPageText: "Clearance Request Per Page",
                    "show-current-page": true,
                    "show-first-last-page": true,
                  },
                },
                on: {
                  "update:options": function ($event) {
                    _vm.options = $event
                  },
                },
                scopedSlots: _vm._u([
                  {
                    key: "top",
                    fn: function () {
                      return [
                        _c("v-text-field", {
                          attrs: {
                            "append-icon": "mdi-magnify",
                            label: "Search",
                          },
                          on: { input: _vm.searchIt },
                        }),
                        _vm._v(" "),
                        _c(
                          "v-toolbar",
                          { attrs: { flat: "", color: "white" } },
                          [
                            _c("div", { staticClass: "overline text-h6" }, [
                              _vm._v(
                                "\n            Clearance Request List\n            "
                              ),
                              _c(
                                "span",
                                { staticClass: "font-italic subtitle-2" },
                                [_vm._v("(2nd Semester A/Y 2020-2021 )")]
                              ),
                            ]),
                            _vm._v(" "),
                            _c("v-spacer"),
                            _vm._v(" "),
                            _vm.editedIndex > -1
                              ? _c(
                                  "v-dialog",
                                  {
                                    attrs: {
                                      persistent: "",
                                      "max-width": "300",
                                    },
                                    model: {
                                      value: _vm.dialog,
                                      callback: function ($$v) {
                                        _vm.dialog = $$v
                                      },
                                      expression: "dialog",
                                    },
                                  },
                                  [
                                    _c(
                                      "v-card",
                                      [
                                        _c(
                                          "v-card-title",
                                          { staticClass: "headline" },
                                          [
                                            _vm._v(
                                              "\n        Approve this Clearance Request?\n      "
                                            ),
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c("v-card-text", [
                                          _vm._v(
                                            "This will certifiy that " +
                                              _vm._s(_vm.studentName) +
                                              " is cleared from any property and money responsibility as of this date."
                                          ),
                                        ]),
                                        _vm._v(" "),
                                        _c(
                                          "v-card-actions",
                                          [
                                            _c("v-spacer"),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "green darken-1",
                                                  text: "",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    _vm.dialog = false
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n          Cancel\n        "
                                                ),
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "green darken-1",
                                                  text: "",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    return _vm.approve()
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n          Approve\n        "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _c(
                              "v-dialog",
                              {
                                attrs: { persistent: "", "max-width": "600px" },
                                model: {
                                  value: _vm.deferDialog,
                                  callback: function ($$v) {
                                    _vm.deferDialog = $$v
                                  },
                                  expression: "deferDialog",
                                },
                              },
                              [
                                _c(
                                  "v-card",
                                  [
                                    _c("v-card-title", [
                                      _c("span", { staticClass: "headline" }, [
                                        _vm._v("Add Deficiency"),
                                      ]),
                                    ]),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-text",
                                      [
                                        _c(
                                          "v-container",
                                          [
                                            _c(
                                              "v-row",
                                              [
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                      md: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-text-field", {
                                                      attrs: {
                                                        label:
                                                          "Item of Deficiency*",
                                                        required: "",
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.deficiency.title,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.deficiency,
                                                            "title",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "deficiency.title",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                                _vm._v(" "),
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                      md: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-textarea", {
                                                      attrs: {
                                                        label:
                                                          "Additional Information",
                                                        hint: "Notes or Instructions for student",
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.deficiency.note,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.deficiency,
                                                            "note",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "deficiency.note",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                              ],
                                              1
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c("small", [
                                          _vm._v("*indicates required field"),
                                        ]),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-actions",
                                      [
                                        _c("v-spacer"),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                _vm.deferDialog = false
                                              },
                                            },
                                          },
                                          [_vm._v("Close")]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                return _vm.deferItem()
                                              },
                                            },
                                          },
                                          [_vm._v("Save")]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                      ]
                    },
                    proxy: true,
                  },
                  {
                    key: "item.id",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        _c("td", [
                          _vm._v(
                            _vm._s(_vm.clearancerequests.data.indexOf(item) + 1)
                          ),
                        ]),
                      ]
                    },
                  },
                  {
                    key: "item.actions",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        [
                          !item.deficiencies.deficiencies_count
                            ? _c(
                                "v-btn",
                                {
                                  staticClass: "ma-2",
                                  attrs: {
                                    color: "success",
                                    depressed: "",
                                    "x-small": "",
                                  },
                                  on: {
                                    click: function ($event) {
                                      return _vm.editItem(item)
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "v-icon",
                                    { attrs: { dark: "", "x-small": "" } },
                                    [
                                      _vm._v(
                                        "\n        mdi-check-circle-outline\n      "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              )
                            : _vm._e(),
                        ],
                        _vm._v(" "),
                        [
                          _c(
                            "v-btn",
                            {
                              staticClass: "ma-2",
                              attrs: {
                                color: "error",
                                depressed: "",
                                "x-small": "",
                              },
                              on: {
                                click: function ($event) {
                                  return _vm.defer(item)
                                },
                              },
                            },
                            [
                              _c(
                                "v-icon",
                                { attrs: { dark: "", "x-small": "" } },
                                [
                                  _vm._v(
                                    "\n        mdi-close-circle-outline\n      "
                                  ),
                                ]
                              ),
                            ],
                            1
                          ),
                        ],
                      ]
                    },
                  },
                ]),
              }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\n        mdi-close\n      "),
                              ]),
                              _vm._v("close\n    "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\n        mdi-error\n      "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n    "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=template&id=622fedbc&":
/*!*************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=template&id=622fedbc& ***!
  \*************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        [
          _c(
            "v-container",
            [
              _c("v-data-table", {
                staticClass: "elevation-0",
                attrs: {
                  "item-key": "id",
                  loading: _vm.loading,
                  "loading-text": "Loading... Please wait",
                  headers: _vm.headers,
                  page: _vm.page + 1,
                  pageCount: _vm.numberOfPages,
                  items: _vm.clearancerequests.data,
                  options: _vm.options,
                  "server-items-length": _vm.totalclearancerequests,
                  "items-per-page": 10,
                  "sort-by": _vm.actions,
                  "show-select": "",
                  "footer-props": {
                    itemsPerPageOptions: [5, 10, 15],
                    itemsPerPageText: "Clearance Request Per Page",
                    "show-current-page": true,
                    "show-first-last-page": true,
                  },
                },
                on: {
                  "update:options": function ($event) {
                    _vm.options = $event
                  },
                },
                scopedSlots: _vm._u([
                  {
                    key: "top",
                    fn: function () {
                      return [
                        _c("v-text-field", {
                          attrs: {
                            "append-icon": "mdi-magnify",
                            label: "Search",
                          },
                          on: { input: _vm.searchIt },
                        }),
                        _vm._v(" "),
                        _c(
                          "v-toolbar",
                          { attrs: { flat: "", color: "white" } },
                          [
                            _c("div", { staticClass: "overline text-h6" }, [
                              _vm._v(
                                "\n            Clearance Request List\n            "
                              ),
                              _c(
                                "span",
                                { staticClass: "font-italic subtitle-2" },
                                [_vm._v("(2nd Semester A/Y 2020-2021 )")]
                              ),
                            ]),
                            _vm._v(" "),
                            _c("v-spacer"),
                            _vm._v(" "),
                            _vm.editedIndex > -1
                              ? _c(
                                  "v-dialog",
                                  {
                                    attrs: {
                                      persistent: "",
                                      "max-width": "300",
                                    },
                                    model: {
                                      value: _vm.dialog,
                                      callback: function ($$v) {
                                        _vm.dialog = $$v
                                      },
                                      expression: "dialog",
                                    },
                                  },
                                  [
                                    _c(
                                      "v-card",
                                      [
                                        _c(
                                          "v-card-title",
                                          { staticClass: "headline" },
                                          [
                                            _vm._v(
                                              "\n        Approve this Clearance Request?\n      "
                                            ),
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c("v-card-text", [
                                          _vm._v(
                                            "This will certifiy that " +
                                              _vm._s(_vm.studentName) +
                                              " is cleared from any property and money responsibility as of this date."
                                          ),
                                        ]),
                                        _vm._v(" "),
                                        _c(
                                          "v-card-actions",
                                          [
                                            _c("v-spacer"),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "green darken-1",
                                                  text: "",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    _vm.dialog = false
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n          Cancel\n        "
                                                ),
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "green darken-1",
                                                  text: "",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    return _vm.approve()
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n          Approve\n        "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _c(
                              "v-dialog",
                              {
                                attrs: { persistent: "", "max-width": "600px" },
                                model: {
                                  value: _vm.deferDialog,
                                  callback: function ($$v) {
                                    _vm.deferDialog = $$v
                                  },
                                  expression: "deferDialog",
                                },
                              },
                              [
                                _c(
                                  "v-card",
                                  [
                                    _c("v-card-title", [
                                      _c("span", { staticClass: "headline" }, [
                                        _vm._v("Add Deficiency"),
                                      ]),
                                    ]),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-text",
                                      [
                                        _c(
                                          "v-container",
                                          [
                                            _c(
                                              "v-row",
                                              [
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                      md: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-text-field", {
                                                      attrs: {
                                                        label:
                                                          "Item of Deficiency*",
                                                        required: "",
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.deficiency.title,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.deficiency,
                                                            "title",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "deficiency.title",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                                _vm._v(" "),
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                      md: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-textarea", {
                                                      attrs: {
                                                        label:
                                                          "Additional Information",
                                                        hint: "Notes or Instructions for student",
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.deficiency.note,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.deficiency,
                                                            "note",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "deficiency.note",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                              ],
                                              1
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c("small", [
                                          _vm._v("*indicates required field"),
                                        ]),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-actions",
                                      [
                                        _c("v-spacer"),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                _vm.deferDialog = false
                                              },
                                            },
                                          },
                                          [_vm._v("Close")]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                return _vm.deferItem()
                                              },
                                            },
                                          },
                                          [_vm._v("Save")]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                      ]
                    },
                    proxy: true,
                  },
                  {
                    key: "item.id",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        _c("td", [
                          _vm._v(
                            _vm._s(_vm.clearancerequests.data.indexOf(item) + 1)
                          ),
                        ]),
                      ]
                    },
                  },
                  {
                    key: "item.actions",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        [
                          !item.deficiencies.deficiencies_count
                            ? _c(
                                "v-btn",
                                {
                                  staticClass: "ma-2",
                                  attrs: {
                                    color: "success",
                                    depressed: "",
                                    "x-small": "",
                                  },
                                  on: {
                                    click: function ($event) {
                                      return _vm.editItem(item)
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "v-icon",
                                    { attrs: { dark: "", "x-small": "" } },
                                    [
                                      _vm._v(
                                        "\n        mdi-check-circle-outline\n      "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              )
                            : _vm._e(),
                        ],
                        _vm._v(" "),
                        [
                          _c(
                            "v-btn",
                            {
                              staticClass: "ma-2",
                              attrs: {
                                color: "error",
                                depressed: "",
                                "x-small": "",
                              },
                              on: {
                                click: function ($event) {
                                  return _vm.defer(item)
                                },
                              },
                            },
                            [
                              _c(
                                "v-icon",
                                { attrs: { dark: "", "x-small": "" } },
                                [
                                  _vm._v(
                                    "\n        mdi-close-circle-outline\n      "
                                  ),
                                ]
                              ),
                            ],
                            1
                          ),
                        ],
                      ]
                    },
                  },
                ]),
              }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\n        mdi-close\n      "),
                              ]),
                              _vm._v("close\n    "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\n        mdi-error\n      "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n    "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=template&id=b5c85366&":
/*!*****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=template&id=b5c85366& ***!
  \*****************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _c(
        "v-card",
        [
          _c(
            "v-card-subtitle",
            {
              staticClass: "white--text text-uppercase elevation-2 mb-0 pb-1",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("span", { staticClass: "text-h6" }, [
                _vm._v(" Clearance List "),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2 mb-0 pb-0 mt-0 pt-0",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("v-text-field", {
                staticClass: "mb-0 pb-0 mt-0 pt-0",
                attrs: {
                  "append-icon": "mdi-magnify",
                  label: "Search",
                  "solo-inverted": "",
                  flat: "",
                  dark: "",
                  dense: "",
                },
                model: {
                  value: _vm.search,
                  callback: function ($$v) {
                    _vm.search = $$v
                  },
                  expression: "search",
                },
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-container",
            [
              _c("v-data-table", {
                staticClass: "elevation-0",
                attrs: {
                  "item-key": "id",
                  loading: _vm.loading,
                  "loading-text": "Loading... Please wait",
                  headers: _vm.headers,
                  page: _vm.page + 1,
                  pageCount: _vm.numberOfPages,
                  items: _vm.clearances.data,
                  options: _vm.options,
                  "server-items-length": _vm.totalclearances,
                  "items-per-page": 10,
                  "show-select": "",
                  "footer-props": {
                    itemsPerPageOptions: [5, 10, 15],
                    itemsPerPageText: "Clearance Request Per Page",
                    "show-current-page": true,
                    "show-first-last-page": true,
                  },
                },
                on: {
                  "update:options": function ($event) {
                    _vm.options = $event
                  },
                },
                scopedSlots: _vm._u([
                  {
                    key: "top",
                    fn: function () {
                      return [
                        _c("v-text-field", {
                          attrs: {
                            "append-icon": "mdi-magnify",
                            label: "Search",
                          },
                          on: { input: _vm.searchIt },
                        }),
                        _vm._v(" "),
                        _c(
                          "v-toolbar",
                          { attrs: { flat: "", color: "white" } },
                          [
                            _c("div", { staticClass: "overline text-h6" }, [
                              _vm._v(
                                "\n            Clearance List\n            \n          "
                              ),
                            ]),
                            _vm._v(" "),
                            _c("v-spacer"),
                          ],
                          1
                        ),
                      ]
                    },
                    proxy: true,
                  },
                  {
                    key: "item.id",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        _c("td", [
                          _vm._v(_vm._s(_vm.clearances.data.indexOf(item) + 1)),
                        ]),
                      ]
                    },
                  },
                  {
                    key: "item.actions",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        [
                          _c(
                            "v-btn",
                            {
                              staticClass: "ma-2",
                              attrs: {
                                color: "primary",
                                depressed: "",
                                small: "",
                              },
                            },
                            [_vm._v("View")]
                          ),
                        ],
                      ]
                    },
                  },
                ]),
              }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\n        mdi-close\n      "),
                              ]),
                              _vm._v("close\n    "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\n        mdi-error\n      "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n    "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=template&id=927c2c32&":
/*!*********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=template&id=927c2c32& ***!
  \*********************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _vm.editedIndex > -1
        ? _c(
            "v-dialog",
            {
              attrs: { persistent: "", "max-width": "400" },
              model: {
                value: _vm.dialog,
                callback: function ($$v) {
                  _vm.dialog = $$v
                },
                expression: "dialog",
              },
            },
            [
              _c(
                "v-card",
                [
                  _c(
                    "v-card-subtitle",
                    {
                      staticClass:
                        "white--text text-uppercase elevation-2 pt-4",
                      staticStyle: {
                        background:
                          "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                      },
                    },
                    [
                      _c("span", { staticClass: "text-h6" }, [
                        _vm._v(" Approving Request "),
                      ]),
                    ]
                  ),
                  _vm._v(" "),
                  _c("v-card-text", { staticClass: "pt-4" }, [
                    _vm._v(
                      "This will certifiy that " +
                        _vm._s(_vm.studentName) +
                        " is cleared from any property and money responsibility as of this date."
                    ),
                  ]),
                  _vm._v(" "),
                  _c(
                    "v-card-actions",
                    [
                      _c("v-spacer"),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: { color: "green darken-1", text: "" },
                          on: {
                            click: function ($event) {
                              _vm.dialog = false
                            },
                          },
                        },
                        [_vm._v("\n          Cancel\n        ")]
                      ),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: { color: "green darken-1", text: "" },
                          on: {
                            click: function ($event) {
                              return _vm.approve()
                            },
                          },
                        },
                        [_vm._v("\n          Approve\n        ")]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          )
        : _vm._e(),
      _vm._v(" "),
      _c(
        "v-dialog",
        {
          attrs: { persistent: "", "max-width": "500" },
          model: {
            value: _vm.deferDialog,
            callback: function ($$v) {
              _vm.deferDialog = $$v
            },
            expression: "deferDialog",
          },
        },
        [
          _c(
            "v-card",
            [
              _c(
                "v-card-subtitle",
                {
                  staticClass: "white--text text-uppercase elevation-2 pt-4",
                  staticStyle: {
                    background:
                      "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                  },
                },
                [
                  _c("span", { staticClass: "text-h6" }, [
                    _vm._v("Add Deficiency "),
                  ]),
                ]
              ),
              _vm._v(" "),
              _c(
                "v-card-text",
                { staticClass: "pt-4" },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", sm: "12", md: "12" } },
                    [
                      _c("v-text-field", {
                        staticClass: "elevation-0",
                        attrs: {
                          filled: "",
                          label: "Item of Deficiency*",
                          required: "",
                        },
                        model: {
                          value: _vm.deficiency.title,
                          callback: function ($$v) {
                            _vm.$set(_vm.deficiency, "title", $$v)
                          },
                          expression: "deficiency.title",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", sm: "12", md: "12" } },
                    [
                      _c("v-textarea", {
                        attrs: {
                          filled: "",
                          label: "Additional Information",
                          hint: "Notes or Instructions for student",
                        },
                        model: {
                          value: _vm.deficiency.note,
                          callback: function ($$v) {
                            _vm.$set(_vm.deficiency, "note", $$v)
                          },
                          expression: "deficiency.note",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("small", [_vm._v("*indicates required field")]),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-card-actions",
                [
                  _c("v-spacer"),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "blue darken-1", text: "" },
                      on: {
                        click: function ($event) {
                          _vm.deferDialog = false
                        },
                      },
                    },
                    [_vm._v("Close")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "blue darken-1", text: "" },
                      on: {
                        click: function ($event) {
                          return _vm.deferItem()
                        },
                      },
                    },
                    [_vm._v("Save")]
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-card",
        [
          _c(
            "v-card-subtitle",
            {
              staticClass: "white--text text-uppercase elevation-2 mb-0 pb-1",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("span", { staticClass: "text-h6" }, [
                _vm._v(" Clearance Requests "),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2 mb-0 pb-6 mt-0 pt-2",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c(
                "v-row",
                [
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "3" },
                    },
                    [
                      _c("v-select", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          label: "Select Semester",
                          "item-value": "id",
                          "item-text": "semester",
                          items: _vm.semesters,
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        model: {
                          value: _vm.semester,
                          callback: function ($$v) {
                            _vm.semester = $$v
                          },
                          expression: "semester",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "3" },
                    },
                    [
                      _c("v-select", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          label: "Select College",
                          "item-value": "id",
                          "item-text": "name",
                          items: _vm.colleges,
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        model: {
                          value: _vm.college,
                          callback: function ($$v) {
                            _vm.college = $$v
                          },
                          expression: "college",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "3" },
                    },
                    [
                      _c("v-select", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          label: "Select Program",
                          "item-value": "id",
                          "item-text": "name",
                          items: _vm.programs,
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        model: {
                          value: _vm.program,
                          callback: function ($$v) {
                            _vm.program = $$v
                          },
                          expression: "program",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "3" },
                    },
                    [
                      _c("v-text-field", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          "append-icon": "mdi-magnify",
                          label: "Search",
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        on: { input: _vm.searchIt },
                        model: {
                          value: _vm.searchItem,
                          callback: function ($$v) {
                            _vm.searchItem = $$v
                          },
                          expression: "searchItem",
                        },
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c("v-data-table", {
            staticClass: "px-6 pb-6  mt-2",
            attrs: {
              "item-key": "id",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              page: _vm.page + 1,
              pageCount: _vm.numberOfPages,
              items: _vm.clearancerequests.data,
              options: _vm.options,
              "server-items-length": _vm.totalclearancerequests,
              "items-per-page": 10,
              "footer-props": {
                itemsPerPageOptions: [5, 10, 15],
                itemsPerPageText: "Clearance Request Per Page",
                "show-current-page": true,
                "show-first-last-page": true,
              },
            },
            on: {
              "update:options": function ($event) {
                _vm.options = $event
              },
            },
            scopedSlots: _vm._u([
              {
                key: "item.request_at",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c(
                      "v-chip",
                      {
                        attrs: {
                          "text-color": "white",
                          color: "success",
                          small: "",
                        },
                      },
                      [
                        _vm._v(
                          "\n         \n          " +
                            _vm._s(item.request_at) +
                            "\n      "
                        ),
                      ]
                    ),
                  ]
                },
              },
              {
                key: "item.actions",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    [
                      _c(
                        "v-btn",
                        {
                          staticClass: "ma-2 pr-5 pl-4 text-center",
                          attrs: {
                            color: "success",
                            depressed: "",
                            "x-small": "",
                          },
                          on: {
                            click: function ($event) {
                              return _vm.editItem(item)
                            },
                          },
                        },
                        [
                          _c("v-icon", { attrs: { dark: "", "x-small": "" } }, [
                            _vm._v(
                              "\n        mdi-check-circle-outline\n      "
                            ),
                          ]),
                          _vm._v("APPROVE"),
                        ],
                        1
                      ),
                    ],
                    _vm._v(" "),
                    [
                      _c(
                        "v-btn",
                        {
                          staticClass: "ma-2",
                          attrs: {
                            color: "error",
                            depressed: "",
                            "x-small": "",
                          },
                          on: {
                            click: function ($event) {
                              return _vm.defer(item)
                            },
                          },
                        },
                        [
                          _c("v-icon", { attrs: { dark: "", "x-small": "" } }, [
                            _vm._v(
                              "\n        mdi-close-circle-outline\n      "
                            ),
                          ]),
                          _vm._v("DISAPPROVE"),
                        ],
                        1
                      ),
                    ],
                  ]
                },
              },
            ]),
          }),
          _vm._v(" "),
          _c(
            "v-snackbar",
            {
              attrs: {
                color: _vm.snackbarColor,
                right: "",
                timeout: "5000",
                outlined: "",
                top: "",
                width: "50",
              },
              scopedSlots: _vm._u([
                {
                  key: "action",
                  fn: function (ref) {
                    var attrs = ref.attrs
                    return [
                      _c(
                        "v-btn",
                        _vm._b(
                          {
                            attrs: { color: _vm.snackbarColor, text: "" },
                            on: {
                              click: function ($event) {
                                _vm.snackbar = false
                              },
                            },
                          },
                          "v-btn",
                          attrs,
                          false
                        ),
                        [
                          _c("v-icon", { attrs: { dark: "", left: "" } }, [
                            _vm._v("\n        mdi-close\n      "),
                          ]),
                          _vm._v("close\n    "),
                        ],
                        1
                      ),
                    ]
                  },
                },
              ]),
              model: {
                value: _vm.snackbar,
                callback: function ($$v) {
                  _vm.snackbar = $$v
                },
                expression: "snackbar",
              },
            },
            [
              _c("v-icon", { attrs: { left: "" } }, [
                _vm._v("\n        mdi-error\n      "),
              ]),
              _vm._v(_vm._s(_vm.text) + "\n\n    "),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=template&id=073a125c&":
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=template&id=073a125c& ***!
  \************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        [
          _c(
            "v-container",
            [
              _c("v-data-table", {
                staticClass: "elevation-0",
                attrs: {
                  "item-key": "id",
                  loading: _vm.loading,
                  "loading-text": "Loading... Please wait",
                  headers: _vm.headers,
                  page: _vm.page + 1,
                  pageCount: _vm.numberOfPages,
                  items: _vm.clearancerequests.data,
                  options: _vm.options,
                  "server-items-length": _vm.totalclearancerequests,
                  "items-per-page": 10,
                  "sort-by": _vm.actions,
                  "show-select": "",
                  "footer-props": {
                    itemsPerPageOptions: [5, 10, 15],
                    itemsPerPageText: "Clearance Request Per Page",
                    "show-current-page": true,
                    "show-first-last-page": true,
                  },
                },
                on: {
                  "update:options": function ($event) {
                    _vm.options = $event
                  },
                },
                scopedSlots: _vm._u([
                  {
                    key: "top",
                    fn: function () {
                      return [
                        _c("v-text-field", {
                          attrs: {
                            "append-icon": "mdi-magnify",
                            label: "Search",
                          },
                          on: { input: _vm.searchIt },
                        }),
                        _vm._v(" "),
                        _c(
                          "v-toolbar",
                          { attrs: { flat: "", color: "white" } },
                          [
                            _c("div", { staticClass: "overline text-h6" }, [
                              _vm._v(
                                "\n            Clearance Request List\n            "
                              ),
                              _c(
                                "span",
                                { staticClass: "font-italic subtitle-2" },
                                [_vm._v("(2nd Semester A/Y 2020-2021 )")]
                              ),
                            ]),
                            _vm._v(" "),
                            _c("v-spacer"),
                            _vm._v(" "),
                            _vm.editedIndex > -1
                              ? _c(
                                  "v-dialog",
                                  {
                                    attrs: {
                                      persistent: "",
                                      "max-width": "300",
                                    },
                                    model: {
                                      value: _vm.dialog,
                                      callback: function ($$v) {
                                        _vm.dialog = $$v
                                      },
                                      expression: "dialog",
                                    },
                                  },
                                  [
                                    _c(
                                      "v-card",
                                      [
                                        _c(
                                          "v-card-title",
                                          { staticClass: "headline" },
                                          [
                                            _vm._v(
                                              "\n        Approve this Clearance Request?\n      "
                                            ),
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c("v-card-text", [
                                          _vm._v(
                                            "This will certifiy that " +
                                              _vm._s(_vm.studentName) +
                                              " is cleared from any property and money responsibility as of this date."
                                          ),
                                        ]),
                                        _vm._v(" "),
                                        _c(
                                          "v-card-actions",
                                          [
                                            _c("v-spacer"),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "green darken-1",
                                                  text: "",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    _vm.dialog = false
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n          Cancel\n        "
                                                ),
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "green darken-1",
                                                  text: "",
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    return _vm.approve()
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n          Approve\n        "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _c(
                              "v-dialog",
                              {
                                attrs: { persistent: "", "max-width": "600px" },
                                model: {
                                  value: _vm.deferDialog,
                                  callback: function ($$v) {
                                    _vm.deferDialog = $$v
                                  },
                                  expression: "deferDialog",
                                },
                              },
                              [
                                _c(
                                  "v-card",
                                  [
                                    _c("v-card-title", [
                                      _c("span", { staticClass: "headline" }, [
                                        _vm._v("Add Deficiency"),
                                      ]),
                                    ]),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-text",
                                      [
                                        _c(
                                          "v-container",
                                          [
                                            _c(
                                              "v-row",
                                              [
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                      md: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-text-field", {
                                                      attrs: {
                                                        label:
                                                          "Item of Deficiency*",
                                                        required: "",
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.deficiency.title,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.deficiency,
                                                            "title",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "deficiency.title",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                                _vm._v(" "),
                                                _c(
                                                  "v-col",
                                                  {
                                                    attrs: {
                                                      cols: "12",
                                                      sm: "12",
                                                      md: "12",
                                                    },
                                                  },
                                                  [
                                                    _c("v-textarea", {
                                                      attrs: {
                                                        label:
                                                          "Additional Information",
                                                        hint: "Notes or Instructions for student",
                                                      },
                                                      model: {
                                                        value:
                                                          _vm.deficiency.note,
                                                        callback: function (
                                                          $$v
                                                        ) {
                                                          _vm.$set(
                                                            _vm.deficiency,
                                                            "note",
                                                            $$v
                                                          )
                                                        },
                                                        expression:
                                                          "deficiency.note",
                                                      },
                                                    }),
                                                  ],
                                                  1
                                                ),
                                              ],
                                              1
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c("small", [
                                          _vm._v("*indicates required field"),
                                        ]),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-card-actions",
                                      [
                                        _c("v-spacer"),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                _vm.deferDialog = false
                                              },
                                            },
                                          },
                                          [_vm._v("Close")]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-btn",
                                          {
                                            attrs: {
                                              color: "blue darken-1",
                                              text: "",
                                            },
                                            on: {
                                              click: function ($event) {
                                                return _vm.deferItem()
                                              },
                                            },
                                          },
                                          [_vm._v("Save")]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                      ]
                    },
                    proxy: true,
                  },
                  {
                    key: "item.id",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        _c("td", [
                          _vm._v(
                            _vm._s(_vm.clearancerequests.data.indexOf(item) + 1)
                          ),
                        ]),
                      ]
                    },
                  },
                  {
                    key: "item.actions",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        [
                          !item.deficiencies.deficiencies_count
                            ? _c(
                                "v-btn",
                                {
                                  staticClass: "ma-2",
                                  attrs: {
                                    color: "success",
                                    depressed: "",
                                    "x-small": "",
                                  },
                                  on: {
                                    click: function ($event) {
                                      return _vm.editItem(item)
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "v-icon",
                                    { attrs: { dark: "", "x-small": "" } },
                                    [
                                      _vm._v(
                                        "\n        mdi-check-circle-outline\n      "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              )
                            : _vm._e(),
                        ],
                        _vm._v(" "),
                        [
                          _c(
                            "v-btn",
                            {
                              staticClass: "ma-2",
                              attrs: {
                                color: "error",
                                depressed: "",
                                "x-small": "",
                              },
                              on: {
                                click: function ($event) {
                                  return _vm.defer(item)
                                },
                              },
                            },
                            [
                              _c(
                                "v-icon",
                                { attrs: { dark: "", "x-small": "" } },
                                [
                                  _vm._v(
                                    "\n        mdi-close-circle-outline\n      "
                                  ),
                                ]
                              ),
                            ],
                            1
                          ),
                        ],
                      ]
                    },
                  },
                ]),
              }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\n        mdi-close\n      "),
                              ]),
                              _vm._v("close\n    "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\n        mdi-error\n      "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n    "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=template&id=da006fb8&":
/*!*********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=template&id=da006fb8& ***!
  \*********************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _c(
        "v-card",
        [
          _c(
            "v-card-subtitle",
            {
              staticClass: "white--text text-uppercase elevation-2 mb-0 pb-1",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("span", { staticClass: "text-h6" }, [
                _vm._v("  Approved Requests "),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2 mb-0 pb-0 mt-0 pt-0",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("v-text-field", {
                staticClass: "mb-0 pb-0 mt-2 pt-0",
                attrs: {
                  "append-icon": "mdi-magnify",
                  label: "Search",
                  "solo-inverted": "",
                  flat: "",
                  dark: "",
                  dense: "",
                },
                on: { input: _vm.searchIt },
                model: {
                  value: _vm.searchItem,
                  callback: function ($$v) {
                    _vm.searchItem = $$v
                  },
                  expression: "searchItem",
                },
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c("v-data-table", {
            staticClass: "px-6 pb-6  mt-4",
            attrs: {
              "item-key": "id",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              page: _vm.page + 1,
              pageCount: _vm.numberOfPages,
              items: _vm.clearancerequests.data,
              options: _vm.options,
              "server-items-length": _vm.totalclearancerequests,
              "items-per-page": 10,
              "footer-props": {
                itemsPerPageOptions: [5, 10, 15],
                itemsPerPageText: "Clearance Request Per Page",
                "show-current-page": true,
                "show-first-last-page": true,
              },
            },
            on: {
              "update:options": function ($event) {
                _vm.options = $event
              },
            },
            scopedSlots: _vm._u([
              {
                key: "item.approved_at",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c(
                      "v-chip",
                      {
                        attrs: {
                          "text-color": "white",
                          color: "success",
                          small: "",
                        },
                      },
                      [
                        _vm._v(
                          "\n         \n          " +
                            _vm._s(item.approved_at) +
                            "\n      "
                        ),
                      ]
                    ),
                  ]
                },
              },
              {
                key: "item.actions",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    [
                      _c(
                        "v-btn",
                        {
                          staticClass: "ma-2",
                          attrs: { color: "primary", depressed: "", small: "" },
                        },
                        [_vm._v("View")]
                      ),
                    ],
                  ]
                },
              },
            ]),
          }),
          _vm._v(" "),
          _c(
            "v-snackbar",
            {
              attrs: {
                color: _vm.snackbarColor,
                right: "",
                timeout: "5000",
                outlined: "",
                top: "",
                width: "50",
              },
              scopedSlots: _vm._u([
                {
                  key: "action",
                  fn: function (ref) {
                    var attrs = ref.attrs
                    return [
                      _c(
                        "v-btn",
                        _vm._b(
                          {
                            attrs: { color: _vm.snackbarColor, text: "" },
                            on: {
                              click: function ($event) {
                                _vm.snackbar = false
                              },
                            },
                          },
                          "v-btn",
                          attrs,
                          false
                        ),
                        [
                          _c("v-icon", { attrs: { dark: "", left: "" } }, [
                            _vm._v("\n        mdi-close\n      "),
                          ]),
                          _vm._v("close\n    "),
                        ],
                        1
                      ),
                    ]
                  },
                },
              ]),
              model: {
                value: _vm.snackbar,
                callback: function ($$v) {
                  _vm.snackbar = $$v
                },
                expression: "snackbar",
              },
            },
            [
              _c("v-icon", { attrs: { left: "" } }, [
                _vm._v("\n        mdi-error\n      "),
              ]),
              _vm._v(_vm._s(_vm.text) + "\n\n    "),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/DashboardComponent.vue?vue&type=template&id=3e3e9a5a&":
/*!*************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/DashboardComponent.vue?vue&type=template&id=3e3e9a5a& ***!
  \*************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-row",
    [
      _c(
        "v-col",
        { attrs: { cols: "12", md: "4" } },
        [
          _c(
            "v-card",
            { staticClass: "mx-auto" },
            [
              _c(
                "v-list-item",
                { attrs: { "two-line": "" } },
                [
                  _c(
                    "v-list-item-content",
                    [
                      _c("v-list-item-title", { staticClass: "headline" }, [
                        _vm._v(
                          "\n            Total Completed Clearance\n          "
                        ),
                      ]),
                      _vm._v(" "),
                      _c("v-list-item-subtitle", [
                        _vm._v("As of " + _vm._s(new Date())),
                      ]),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-card-text",
                [
                  _c(
                    "v-row",
                    { attrs: { align: "center" } },
                    [
                      _c(
                        "v-col",
                        { staticClass: "display-3", attrs: { cols: "6" } },
                        [
                          _c("span", { staticClass: "black--text" }, [
                            _vm._v(_vm._s(_vm.completed)),
                          ]),
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "v-col",
                        { attrs: { cols: "6" } },
                        [
                          _c("v-sparkline", {
                            attrs: {
                              value: _vm.value,
                              gradient: _vm.gradient,
                              smooth: _vm.radius || false,
                              padding: _vm.padding,
                              "line-width": _vm.width,
                              "stroke-linecap": _vm.lineCap,
                              "gradient-direction": _vm.gradientDirection,
                              fill: _vm.fill,
                              type: _vm.type,
                              "auto-line-width": _vm.autoLineWidth,
                              "auto-draw": "",
                            },
                          }),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-list",
                { staticClass: "transparent" },
                _vm._l(_vm.stats, function (item) {
                  return _c(
                    "v-list-item",
                    { key: item.name },
                    [
                      _c("v-list-item-title", { staticClass: "text-wrap" }, [
                        _vm._v(_vm._s(item.name)),
                      ]),
                      _vm._v(" "),
                      _c(
                        "v-list-item-subtitle",
                        { staticClass: "text-right" },
                        [
                          _vm._v(
                            "\n            " +
                              _vm._s(item.total) +
                              "\n          "
                          ),
                        ]
                      ),
                    ],
                    1
                  )
                }),
                1
              ),
              _vm._v(" "),
              _c("v-divider"),
              _vm._v(" "),
              _c(
                "v-card-actions",
                [
                  _c("v-btn", { attrs: { text: "" } }, [
                    _vm._v(" Full Report "),
                  ]),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-col",
        { attrs: { cols: "12", md: "8" } },
        [
          _c("v-data-table", {
            staticClass: "elevation-1",
            attrs: {
              "item-key": "name",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              items: _vm.offices,
              "sort-by": "calories",
              color: "error",
            },
            scopedSlots: _vm._u([
              {
                key: "top",
                fn: function () {
                  return [
                    _c(
                      "v-toolbar",
                      {
                        staticClass: "white--text",
                        attrs: { flat: "", color: "primary accent-4" },
                      },
                      [
                        _c(
                          "v-toolbar-title",
                          [
                            _c(
                              "v-icon",
                              {
                                staticClass: "mr-1 white--text",
                                attrs: { small: "" },
                              },
                              [_vm._v(" mdi-city ")]
                            ),
                            _vm._v(" "),
                            _c("span", [
                              _vm._v("Clearance Request Status by Office"),
                            ]),
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c("v-spacer"),
                      ],
                      1
                    ),
                  ]
                },
                proxy: true,
              },
            ]),
          }),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=template&id=6cd9611c&":
/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=template&id=6cd9611c& ***!
  \******************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _c(
        "v-card",
        [
          _c(
            "v-card-subtitle",
            {
              staticClass: "white--text text-uppercase elevation-2 mb-0 pb-1",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("span", { staticClass: "text-h6" }, [
                _vm._v(" Student Deficiencies "),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2 mb-0 pb-0 mt-0 pt-0",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("v-text-field", {
                staticClass: "mb-0 pb-0 mt-2 pt-0",
                attrs: {
                  "append-icon": "mdi-magnify",
                  label: "Search",
                  "solo-inverted": "",
                  flat: "",
                  dark: "",
                  dense: "",
                },
                on: { input: _vm.searchIt },
                model: {
                  value: _vm.searchItem,
                  callback: function ($$v) {
                    _vm.searchItem = $$v
                  },
                  expression: "searchItem",
                },
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-container",
            [
              _c("v-data-table", {
                staticClass: "px-6 pb-6  mt-4",
                attrs: {
                  "item-key": "id",
                  loading: _vm.loading,
                  "loading-text": "Loading... Please wait",
                  headers: _vm.headers,
                  page: _vm.page + 1,
                  pageCount: _vm.numberOfPages,
                  items: _vm.deficiencies.data,
                  options: _vm.options,
                  "server-items-length": _vm.totaldeficiencies,
                  "items-per-page": 10,
                  "footer-props": {
                    itemsPerPageOptions: [5, 10, 15],
                    itemsPerPageText: "Deficiency Per Page",
                    "show-current-page": true,
                    "show-first-last-page": true,
                  },
                },
                on: {
                  "update:options": function ($event) {
                    _vm.options = $event
                  },
                },
                scopedSlots: _vm._u([
                  {
                    key: "top",
                    fn: function () {
                      return [
                        _c(
                          "v-dialog",
                          {
                            attrs: { persistent: "", "max-width": "500" },
                            model: {
                              value: _vm.editdialog,
                              callback: function ($$v) {
                                _vm.editdialog = $$v
                              },
                              expression: "editdialog",
                            },
                          },
                          [
                            _c(
                              "v-card",
                              [
                                _c(
                                  "v-card-title",
                                  {
                                    staticClass:
                                      "white--text text-uppercase elevation-2 ",
                                    staticStyle: {
                                      background:
                                        "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                                    },
                                  },
                                  [
                                    _c("span", { staticClass: "text-h6" }, [
                                      _vm._v("Edit Deficiency "),
                                    ]),
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-card-text",
                                  [
                                    _c(
                                      "v-container",
                                      [
                                        _c(
                                          "v-row",
                                          [
                                            _c(
                                              "v-col",
                                              {
                                                attrs: {
                                                  cols: "12",
                                                  sm: "12",
                                                  md: "12",
                                                },
                                              },
                                              [
                                                _c("v-text-field", {
                                                  attrs: {
                                                    filled: "",
                                                    label:
                                                      "Item of Deficiency*",
                                                    required: "",
                                                  },
                                                  model: {
                                                    value:
                                                      _vm.editedItem.deficiency,
                                                    callback: function ($$v) {
                                                      _vm.$set(
                                                        _vm.editedItem,
                                                        "deficiency",
                                                        $$v
                                                      )
                                                    },
                                                    expression:
                                                      "editedItem.deficiency",
                                                  },
                                                }),
                                              ],
                                              1
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "v-col",
                                              {
                                                attrs: {
                                                  cols: "12",
                                                  sm: "12",
                                                  md: "12",
                                                },
                                              },
                                              [
                                                _c("v-textarea", {
                                                  attrs: {
                                                    filled: "",
                                                    label:
                                                      "Additional Information",
                                                    hint: "Notes or Instructions for student",
                                                  },
                                                  model: {
                                                    value: _vm.editedItem.note,
                                                    callback: function ($$v) {
                                                      _vm.$set(
                                                        _vm.editedItem,
                                                        "note",
                                                        $$v
                                                      )
                                                    },
                                                    expression:
                                                      "editedItem.note",
                                                  },
                                                }),
                                              ],
                                              1
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c("small", [
                                      _vm._v("*indicates required field"),
                                    ]),
                                  ],
                                  1
                                ),
                                _vm._v(" "),
                                _c(
                                  "v-card-actions",
                                  [
                                    _c("v-spacer"),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "blue darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            _vm.editdialog = false
                                          },
                                        },
                                      },
                                      [_vm._v("Close")]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "blue darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            return _vm.save()
                                          },
                                        },
                                      },
                                      [_vm._v("Save")]
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "v-dialog",
                          {
                            attrs: { persistent: "", "max-width": "320" },
                            model: {
                              value: _vm.dialog,
                              callback: function ($$v) {
                                _vm.dialog = $$v
                              },
                              expression: "dialog",
                            },
                          },
                          [
                            _c(
                              "v-card",
                              [
                                _c(
                                  "v-card-title",
                                  { staticClass: "headline" },
                                  [
                                    _vm._v(
                                      "\n          Approve this Deficiency?\n        "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c("v-card-text", [
                                  _vm._v(
                                    "This will certifiy that " +
                                      _vm._s(_vm.studentName) +
                                      " has completed the deficiency (" +
                                      _vm._s(_vm.deficiencyName) +
                                      ")."
                                  ),
                                ]),
                                _vm._v(" "),
                                _c(
                                  "v-card-actions",
                                  [
                                    _c("v-spacer"),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "primary darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            _vm.dialog = false
                                          },
                                        },
                                      },
                                      [
                                        _vm._v(
                                          "\n            Cancel\n          "
                                        ),
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "green darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            return _vm.approve()
                                          },
                                        },
                                      },
                                      [
                                        _vm._v(
                                          "\n            Approve\n          "
                                        ),
                                      ]
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "v-dialog",
                          {
                            attrs: { persistent: "", "max-width": "320" },
                            model: {
                              value: _vm.deletedialog,
                              callback: function ($$v) {
                                _vm.deletedialog = $$v
                              },
                              expression: "deletedialog",
                            },
                          },
                          [
                            _c(
                              "v-card",
                              [
                                _c(
                                  "v-card-title",
                                  { staticClass: "headline" },
                                  [
                                    _vm._v(
                                      "\n          Delete this Deficiency?\n        "
                                    ),
                                  ]
                                ),
                                _vm._v(" "),
                                _c("v-card-text", [
                                  _vm._v(
                                    "This will delete the deficiency (" +
                                      _vm._s(_vm.deficiencyName) +
                                      ") of " +
                                      _vm._s(_vm.studentName) +
                                      "."
                                  ),
                                ]),
                                _vm._v(" "),
                                _c(
                                  "v-card-actions",
                                  [
                                    _c("v-spacer"),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "primary darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            _vm.deletedialog = false
                                          },
                                        },
                                      },
                                      [
                                        _vm._v(
                                          "\n            Cancel\n          "
                                        ),
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-btn",
                                      {
                                        attrs: {
                                          color: "error darken-1",
                                          text: "",
                                        },
                                        on: {
                                          click: function ($event) {
                                            return _vm.deleteDeficiency()
                                          },
                                        },
                                      },
                                      [
                                        _vm._v(
                                          "\n            Delete\n          "
                                        ),
                                      ]
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            ),
                          ],
                          1
                        ),
                      ]
                    },
                    proxy: true,
                  },
                  {
                    key: "item.completed",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        item.completed == 1
                          ? _c(
                              "v-chip",
                              {
                                attrs: {
                                  "text-color": "white",
                                  color: "success",
                                  small: "",
                                },
                              },
                              [
                                _vm._v(
                                  "\n           \n           Completed\n        "
                                ),
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        item.completed != 1
                          ? _c(
                              "v-chip",
                              {
                                attrs: {
                                  "text-color": "white",
                                  color: "warning",
                                  small: "",
                                },
                              },
                              [
                                _vm._v(
                                  "\n           \n           Pending\n        "
                                ),
                              ]
                            )
                          : _vm._e(),
                      ]
                    },
                  },
                  {
                    key: "item.actions",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        item.completed != 1
                          ? [
                              _c(
                                "v-btn",
                                {
                                  staticClass: "ma-1",
                                  attrs: {
                                    color: "success",
                                    depressed: "",
                                    "x-small": "",
                                  },
                                  on: {
                                    click: function ($event) {
                                      return _vm.approveItem(item)
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "v-icon",
                                    { attrs: { dark: "", "x-small": "" } },
                                    [
                                      _vm._v(
                                        "\n          mdi-check-circle\n        "
                                      ),
                                    ]
                                  ),
                                  _vm._v("APPROVE"),
                                ],
                                1
                              ),
                            ]
                          : _vm._e(),
                        _vm._v(" "),
                        item.completed != 1
                          ? [
                              _c(
                                "v-btn",
                                {
                                  staticClass: "ma-1 px-6",
                                  attrs: {
                                    color: "primary",
                                    depressed: "",
                                    "x-small": "",
                                  },
                                  on: {
                                    click: function ($event) {
                                      return _vm.editItem(item)
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "v-icon",
                                    { attrs: { dark: "", "x-small": "" } },
                                    [
                                      _vm._v(
                                        "\n          mdi-circle-edit-outline\n        "
                                      ),
                                    ]
                                  ),
                                  _vm._v("EDIT"),
                                ],
                                1
                              ),
                            ]
                          : _vm._e(),
                      ]
                    },
                  },
                ]),
              }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v("\n          mdi-close\n        "),
                              ]),
                              _vm._v("close\n      "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("\n          mdi-error\n        "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n      "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/PDComponent.vue?vue&type=template&id=38da5bef&":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/PDComponent.vue?vue&type=template&id=38da5bef& ***!
  \******************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-email")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-bell")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-avatar",
                { attrs: { size: "24", item: "" } },
                [
                  _c("v-img", {
                    attrs: { src: "images/psu_logo.png", alt: "parsu_logo" },
                  }),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5 elevation-0" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/StudentListComponent.vue?vue&type=template&id=30d8738e&":
/*!***************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/StudentListComponent.vue?vue&type=template&id=30d8738e& ***!
  \***************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-sheet",
    [
      _c(
        "v-card",
        { attrs: { elevation: "0" } },
        [
          _c(
            "v-container",
            { staticClass: "grey lighten-5", attrs: { fluid: "" } },
            [
              _c(
                "v-row",
                { attrs: { wrap: "" } },
                [
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "4" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-text",
                            { staticStyle: { "padding-bottom": "10" } },
                            [
                              _c(
                                "h1",
                                {
                                  staticClass:
                                    "title desplay-2 black--text text--accent3",
                                },
                                [
                                  _c("v-icon", { staticClass: "ma-1 mb-2" }, [
                                    _vm._v("mdi-account-plus-outline"),
                                  ]),
                                  _vm._v(
                                    "\n                Add Student\n                "
                                  ),
                                  _c(
                                    "v-dialog",
                                    {
                                      attrs: { width: "390" },
                                      scopedSlots: _vm._u([
                                        {
                                          key: "activator",
                                          fn: function (ref) {
                                            var on = ref.on
                                            var attrs = ref.attrs
                                            return [
                                              _c(
                                                "v-btn",
                                                _vm._g(
                                                  _vm._b(
                                                    {
                                                      staticClass:
                                                        "float-right success white--text ml-2",
                                                      attrs: {
                                                        dark: "",
                                                        small: "",
                                                        icon: "",
                                                      },
                                                    },
                                                    "v-btn",
                                                    attrs,
                                                    false
                                                  ),
                                                  on
                                                ),
                                                [
                                                  _c(
                                                    "v-icon",
                                                    { attrs: { small: "" } },
                                                    [_vm._v("mdi-file-excel")]
                                                  ),
                                                ],
                                                1
                                              ),
                                            ]
                                          },
                                        },
                                      ]),
                                      model: {
                                        value: _vm.exportDialog,
                                        callback: function ($$v) {
                                          _vm.exportDialog = $$v
                                        },
                                        expression: "exportDialog",
                                      },
                                    },
                                    [
                                      _vm._v(" "),
                                      _c(
                                        "v-card",
                                        [
                                          _c(
                                            "v-card-title",
                                            { staticClass: "text-lg-caption" },
                                            [
                                              _vm._v(
                                                "\n                      Export Students Activation Code\n                    "
                                              ),
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "v-card-text",
                                            [
                                              _c(
                                                "v-form",
                                                {
                                                  ref: "entryForm",
                                                  attrs: {
                                                    method: "post",
                                                    "lazy-validation": "",
                                                  },
                                                  on: {
                                                    submit: function ($event) {
                                                      $event.stopPropagation()
                                                      $event.preventDefault()
                                                      return _vm.save.apply(
                                                        null,
                                                        arguments
                                                      )
                                                    },
                                                  },
                                                },
                                                [
                                                  _c("v-select", {
                                                    attrs: {
                                                      items:
                                                        _vm.export_campuses,
                                                      "item-text": "name",
                                                      label: "Select Campus",
                                                      clearable: "",
                                                      "item-value": "id",
                                                      "item-key": "id",
                                                      color: "primary",
                                                      chips: "",
                                                    },
                                                    on: {
                                                      change: function (
                                                        $event
                                                      ) {
                                                        return _vm.exportcampusListener(
                                                          $event
                                                        )
                                                      },
                                                    },
                                                    scopedSlots: _vm._u([
                                                      {
                                                        key: "selection",
                                                        fn: function (ref) {
                                                          var attr = ref.attr
                                                          var on = ref.on
                                                          var item = ref.item
                                                          var selected =
                                                            ref.selected
                                                          return [
                                                            _c(
                                                              "v-chip",
                                                              _vm._g(
                                                                _vm._b(
                                                                  {
                                                                    staticClass:
                                                                      "white--text",
                                                                    attrs: {
                                                                      "input-value":
                                                                        selected,
                                                                      color:
                                                                        "purple",
                                                                    },
                                                                  },
                                                                  "v-chip",
                                                                  attr,
                                                                  false
                                                                ),
                                                                on
                                                              ),
                                                              [
                                                                _c("span", {
                                                                  domProps: {
                                                                    textContent:
                                                                      _vm._s(
                                                                        item.name
                                                                      ),
                                                                  },
                                                                }),
                                                              ]
                                                            ),
                                                          ]
                                                        },
                                                      },
                                                    ]),
                                                    model: {
                                                      value:
                                                        _vm.editedItem
                                                          .export_campus_id,
                                                      callback: function ($$v) {
                                                        _vm.$set(
                                                          _vm.editedItem,
                                                          "export_campus_id",
                                                          $$v
                                                        )
                                                      },
                                                      expression:
                                                        "editedItem.export_campus_id",
                                                    },
                                                  }),
                                                  _vm._v(" "),
                                                  _c("v-autocomplete", {
                                                    attrs: {
                                                      items:
                                                        _vm.export_programs,
                                                      loading: _vm.isLoading,
                                                      "search-input":
                                                        _vm.search,
                                                      chips: "",
                                                      clearable: "",
                                                      "item-text": "name",
                                                      "item-value": "id",
                                                      "item-key": "id",
                                                      label:
                                                        "Search Program...",
                                                    },
                                                    on: {
                                                      "update:searchInput":
                                                        function ($event) {
                                                          _vm.search = $event
                                                        },
                                                      "update:search-input":
                                                        function ($event) {
                                                          _vm.search = $event
                                                        },
                                                    },
                                                    scopedSlots: _vm._u([
                                                      {
                                                        key: "no-data",
                                                        fn: function () {
                                                          return [
                                                            _c(
                                                              "v-list-item",
                                                              [
                                                                _c(
                                                                  "v-list-item-title",
                                                                  [
                                                                    _vm._v(
                                                                      "\n                            Search Program\n                          "
                                                                    ),
                                                                  ]
                                                                ),
                                                              ],
                                                              1
                                                            ),
                                                          ]
                                                        },
                                                        proxy: true,
                                                      },
                                                      {
                                                        key: "selection",
                                                        fn: function (ref) {
                                                          var attr = ref.attr
                                                          var on = ref.on
                                                          var item = ref.item
                                                          var selected =
                                                            ref.selected
                                                          return [
                                                            _c(
                                                              "v-chip",
                                                              _vm._g(
                                                                _vm._b(
                                                                  {
                                                                    staticClass:
                                                                      "white--text",
                                                                    attrs: {
                                                                      "input-value":
                                                                        selected,
                                                                      color:
                                                                        "purple",
                                                                    },
                                                                  },
                                                                  "v-chip",
                                                                  attr,
                                                                  false
                                                                ),
                                                                on
                                                              ),
                                                              [
                                                                _c("span", {
                                                                  domProps: {
                                                                    textContent:
                                                                      _vm._s(
                                                                        item.name
                                                                      ),
                                                                  },
                                                                }),
                                                              ]
                                                            ),
                                                          ]
                                                        },
                                                      },
                                                      {
                                                        key: "item",
                                                        fn: function (ref) {
                                                          var item = ref.item
                                                          return [
                                                            _c(
                                                              "v-list-item-content",
                                                              [
                                                                _c(
                                                                  "v-list-item-title",
                                                                  {
                                                                    domProps: {
                                                                      textContent:
                                                                        _vm._s(
                                                                          item.name
                                                                        ),
                                                                    },
                                                                  }
                                                                ),
                                                              ],
                                                              1
                                                            ),
                                                          ]
                                                        },
                                                      },
                                                    ]),
                                                    model: {
                                                      value:
                                                        _vm.editedItem
                                                          .export_program_id,
                                                      callback: function ($$v) {
                                                        _vm.$set(
                                                          _vm.editedItem,
                                                          "export_program_id",
                                                          $$v
                                                        )
                                                      },
                                                      expression:
                                                        "editedItem.export_program_id",
                                                    },
                                                  }),
                                                  _vm._v(" "),
                                                  _c("v-divider"),
                                                ],
                                                1
                                              ),
                                            ],
                                            1
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "v-card-actions",
                                            [
                                              _c("v-spacer"),
                                              _vm._v(" "),
                                              _c(
                                                "v-btn",
                                                {
                                                  attrs: {
                                                    block: "",
                                                    color: "blue darken-1",
                                                    shaped: "",
                                                    elevation: "0",
                                                    dark: "",
                                                    type: "submit",
                                                  },
                                                  on: {
                                                    click: function ($event) {
                                                      $event.preventDefault()
                                                      return _vm.exportActivationCode.apply(
                                                        null,
                                                        arguments
                                                      )
                                                    },
                                                  },
                                                },
                                                [
                                                  _vm._v(
                                                    "\n                        Export\n                      "
                                                  ),
                                                ]
                                              ),
                                            ],
                                            1
                                          ),
                                        ],
                                        1
                                      ),
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "v-dialog",
                                    {
                                      attrs: { width: "390" },
                                      scopedSlots: _vm._u([
                                        {
                                          key: "activator",
                                          fn: function (ref) {
                                            var on = ref.on
                                            var attrs = ref.attrs
                                            return [
                                              _c(
                                                "v-btn",
                                                _vm._g(
                                                  _vm._b(
                                                    {
                                                      staticClass:
                                                        "float-right info white--text",
                                                      attrs: {
                                                        dark: "",
                                                        small: "",
                                                        icon: "",
                                                      },
                                                    },
                                                    "v-btn",
                                                    attrs,
                                                    false
                                                  ),
                                                  on
                                                ),
                                                [
                                                  _c(
                                                    "v-icon",
                                                    { attrs: { small: "" } },
                                                    [
                                                      _vm._v(
                                                        "mdi-cloud-upload-outline"
                                                      ),
                                                    ]
                                                  ),
                                                ],
                                                1
                                              ),
                                            ]
                                          },
                                        },
                                      ]),
                                      model: {
                                        value: _vm.uploadDialog,
                                        callback: function ($$v) {
                                          _vm.uploadDialog = $$v
                                        },
                                        expression: "uploadDialog",
                                      },
                                    },
                                    [
                                      _vm._v(" "),
                                      _c(
                                        "v-card",
                                        [
                                          _c(
                                            "v-card-title",
                                            { staticClass: "text-sm-h6" },
                                            [
                                              _vm._v(
                                                "\n                      Upload File\n                    "
                                              ),
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "v-card-text",
                                            [
                                              _c("v-file-input", {
                                                ref: "import_file",
                                                class: {
                                                  " is-invalid":
                                                    _vm.error.message,
                                                },
                                                attrs: {
                                                  label:
                                                    "Select a XLSX file...",
                                                  color: "deep-purple accent-4",
                                                  counter: "",
                                                  accept: ".xlsx",
                                                  id: "input-file-import",
                                                  name: "file_import",
                                                  size: "5",
                                                  placeholder:
                                                    "Select your files",
                                                  "prepend-icon":
                                                    "mdi-paperclip",
                                                  "error-messages":
                                                    _vm.error.message,
                                                  outlined: "",
                                                  "show-size": 1000,
                                                },
                                                on: {
                                                  change: _vm.onFileChange,
                                                },
                                                scopedSlots: _vm._u([
                                                  {
                                                    key: "selection",
                                                    fn: function (ref) {
                                                      var index = ref.index
                                                      var text = ref.text
                                                      return [
                                                        index < 2
                                                          ? _c(
                                                              "v-chip",
                                                              {
                                                                attrs: {
                                                                  color:
                                                                    "deep-purple accent-4",
                                                                  dark: "",
                                                                  label: "",
                                                                  small: "",
                                                                },
                                                              },
                                                              [
                                                                _vm._v(
                                                                  "\n                            " +
                                                                    _vm._s(
                                                                      text
                                                                    ) +
                                                                    "\n                          "
                                                                ),
                                                              ]
                                                            )
                                                          : index === 2
                                                          ? _c(
                                                              "span",
                                                              {
                                                                staticClass:
                                                                  "\n                              text-overline\n                              grey--text\n                              text--darken-3\n                              mx-2\n                            ",
                                                              },
                                                              [
                                                                _vm._v(
                                                                  "\n                            +" +
                                                                    _vm._s(
                                                                      _vm.ffile
                                                                        .length -
                                                                        2
                                                                    ) +
                                                                    " File(s)\n                          "
                                                                ),
                                                              ]
                                                            )
                                                          : _vm._e(),
                                                      ]
                                                    },
                                                  },
                                                ]),
                                                model: {
                                                  value: _vm.ffile,
                                                  callback: function ($$v) {
                                                    _vm.ffile = $$v
                                                  },
                                                  expression: "ffile",
                                                },
                                              }),
                                            ],
                                            1
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "v-card-actions",
                                            [
                                              _c("v-spacer"),
                                              _vm._v(" "),
                                              _c(
                                                "v-btn",
                                                {
                                                  staticClass: "primary mb-4",
                                                  attrs: { text: "" },
                                                  on: {
                                                    click: _vm.proceedAction,
                                                  },
                                                },
                                                [
                                                  _vm._v(
                                                    "\n                        Submit\n                      "
                                                  ),
                                                ]
                                              ),
                                            ],
                                            1
                                          ),
                                        ],
                                        1
                                      ),
                                    ],
                                    1
                                  ),
                                ],
                                1
                              ),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { attrs: { "three-line": "" } },
                            [
                              _c("v-list-item-content", [
                                _c(
                                  "div",
                                  { staticClass: "text-center pb-3" },
                                  [
                                    _c(
                                      "v-form",
                                      {
                                        ref: "entryForm",
                                        attrs: {
                                          method: "post",
                                          "lazy-validation": "",
                                        },
                                        on: {
                                          submit: function ($event) {
                                            $event.stopPropagation()
                                            $event.preventDefault()
                                            return _vm.save.apply(
                                              null,
                                              arguments
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            label: "Student Number",
                                            rules: [_vm.rules.required],
                                            name: "student_number",
                                            type: "number",
                                            color: "teal accent-4",
                                            dense: "",
                                          },
                                          model: {
                                            value:
                                              _vm.editedItem.student_number,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "student_number",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "editedItem.student_number",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-text-field", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            dense: "",
                                            type: "text",
                                            label: "Full Name",
                                            rules: [
                                              _vm.rules.required,
                                              _vm.rules.min,
                                            ],
                                            hint: "(Surname, First name MI)",
                                            color: "teal accent-4",
                                          },
                                          model: {
                                            value: _vm.editedItem.name,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "name",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.name",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-select", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            items: _vm.campuses,
                                            "item-text": "name",
                                            label: "Select Campus",
                                            "item-value": "id",
                                            color: "primary",
                                            rules: [_vm.rules.required],
                                            dense: "",
                                            chip: "",
                                          },
                                          on: { change: _vm.campusListener },
                                          model: {
                                            value: _vm.editedItem.campus_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "campus_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.campus_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-select", {
                                          staticClass: "mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            items: _vm.programs,
                                            label: "Select Program",
                                            "item-value": "id",
                                            "item-text": "name",
                                            color: "primary",
                                            rules: [_vm.rules.required],
                                            wrap: "",
                                            dense: "",
                                            chip: "",
                                          },
                                          on: { change: _vm.programListener },
                                          model: {
                                            value: _vm.editedItem.program_id,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "program_id",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.program_id",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-select", {
                                          staticClass:
                                            "text-sm-h6 mr-2 ml-2 mb-2 mb-1",
                                          attrs: {
                                            items: _vm.years,
                                            label: "Select Year Level",
                                            "item-value": "id",
                                            "item-text": "name",
                                            color: "primary",
                                            rules: [_vm.rules.required],
                                            dense: "",
                                            chip: "",
                                          },
                                          model: {
                                            value: _vm.editedItem.year,
                                            callback: function ($$v) {
                                              _vm.$set(
                                                _vm.editedItem,
                                                "year",
                                                $$v
                                              )
                                            },
                                            expression: "editedItem.year",
                                          },
                                        }),
                                        _vm._v(" "),
                                        _c("v-divider"),
                                        _vm._v(" "),
                                        _c(
                                          "v-row",
                                          { staticClass: "ma-2" },
                                          [
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                },
                                                on: { click: _vm.close },
                                              },
                                              [
                                                _vm._v(
                                                  "\n                        Cancel\n                      "
                                                ),
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "v-btn",
                                              {
                                                attrs: {
                                                  color: "blue darken-1",
                                                  text: "",
                                                  type: "submit",
                                                  disabled: !_vm.valid,
                                                },
                                                on: {
                                                  click: function ($event) {
                                                    $event.preventDefault()
                                                    return _vm.save.apply(
                                                      null,
                                                      arguments
                                                    )
                                                  },
                                                },
                                              },
                                              [
                                                _vm._v(
                                                  "\n                        Save\n                      "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                ),
                              ]),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    { attrs: { cols: "12", lg: "8" } },
                    [
                      _c(
                        "v-card",
                        [
                          _c(
                            "v-card-subtitle",
                            {
                              staticClass:
                                "white--text text-uppercase elevation-2 mb-0 pb-1",
                              staticStyle: {
                                background:
                                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                              },
                            },
                            [
                              _c("span", { staticClass: "text-h6" }, [
                                _vm._v(" Clearance Request List "),
                              ]),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-card-title",
                            {
                              staticClass:
                                "white--text elevation-2 mb-0 pb-0 mt-0 pt-0",
                              staticStyle: {
                                background:
                                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                              },
                            },
                            [
                              _c("v-text-field", {
                                staticClass: "mb-0 pb-0 mt-2 pt-0",
                                attrs: {
                                  "append-icon": "mdi-magnify",
                                  label: "Search",
                                  "solo-inverted": "",
                                  flat: "",
                                  dark: "",
                                  dense: "",
                                },
                                on: { input: _vm.searchIt },
                                model: {
                                  value: _vm.searchItem,
                                  callback: function ($$v) {
                                    _vm.searchItem = $$v
                                  },
                                  expression: "searchItem",
                                },
                              }),
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "v-container",
                            [
                              _c(
                                "v-row",
                                [
                                  _c("v-container", [
                                    _c("strong", [_vm._v("Note: ")]),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      { staticClass: "overline" },
                                      [
                                        _c(
                                          "v-icon",
                                          {
                                            staticClass:
                                              "mr-1 ml-2 warning--text",
                                            attrs: { small: "" },
                                          },
                                          [
                                            _vm._v(
                                              "\n                mdi-pencil\n              "
                                            ),
                                          ]
                                        ),
                                        _vm._v(
                                          "\n              - Edit\n           "
                                        ),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      { staticClass: "overline" },
                                      [
                                        _c(
                                          "v-icon",
                                          {
                                            staticClass: "mr-1 ml-2 red--text",
                                            attrs: { small: "" },
                                          },
                                          [
                                            _vm._v(
                                              "\n                mdi-delete-forever "
                                            ),
                                          ]
                                        ),
                                        _vm._v(
                                          "\n            - Delete\n             "
                                        ),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      { staticClass: "overline" },
                                      [
                                        _c(
                                          "v-icon",
                                          {
                                            staticClass:
                                              "mr-1 ml-2 primary--text",
                                            attrs: { small: "" },
                                          },
                                          [
                                            _vm._v(
                                              "\n                mdi-qrcode\n              "
                                            ),
                                          ]
                                        ),
                                        _vm._v(
                                          "\n              - Copy Activation Code\n             "
                                        ),
                                      ],
                                      1
                                    ),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c("v-data-table", {
                                staticClass: "px-6 pb-6  mt-4",
                                attrs: {
                                  "item-key": "id",
                                  dense: "",
                                  loading: _vm.loading,
                                  "loading-text": "Loading... Please wait",
                                  headers: _vm.headers,
                                  page: _vm.page + 1,
                                  pageCount: _vm.numberOfPages,
                                  items: _vm.students.data,
                                  options: _vm.options,
                                  "server-items-length": _vm.totalStudents,
                                  "items-per-page": 10,
                                  "footer-props": {
                                    itemsPerPageOptions: [5, 10, 15],
                                    itemsPerPageText: "Student Per Page",
                                    "show-current-page": true,
                                    "show-first-last-page": true,
                                  },
                                },
                                on: {
                                  "update:options": function ($event) {
                                    _vm.options = $event
                                  },
                                },
                                scopedSlots: _vm._u([
                                  {
                                    key: "item.id",
                                    fn: function (ref) {
                                      var item = ref.item
                                      return [
                                        _c("td", [
                                          _vm._v(
                                            _vm._s(
                                              _vm.students.data.indexOf(item) +
                                                1
                                            )
                                          ),
                                        ]),
                                      ]
                                    },
                                  },
                                  {
                                    key: "item.student_number",
                                    fn: function (ref) {
                                      var item = ref.item
                                      return [
                                        _c(
                                          "td",
                                          [
                                            item.stat == "1"
                                              ? _c("v-badge", {
                                                  staticClass: "mr-4",
                                                  attrs: {
                                                    dot: "",
                                                    small: "",
                                                    bordered: "",
                                                    color: "success",
                                                  },
                                                })
                                              : _c("v-badge", {
                                                  staticClass: "mr-4",
                                                  attrs: {
                                                    dot: "",
                                                    small: "",
                                                    bordered: "",
                                                    color: "red",
                                                  },
                                                }),
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(item.student_number) +
                                                "\n              "
                                            ),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                  },
                                  {
                                    key: "item.actions",
                                    fn: function (ref) {
                                      var item = ref.item
                                      return [
                                        _c(
                                          "v-icon",
                                          {
                                            staticClass: "mr-2 warning--text",
                                            attrs: { small: "" },
                                            on: {
                                              click: function ($event) {
                                                return _vm.editItem(item)
                                              },
                                            },
                                          },
                                          [
                                            _vm._v(
                                              "\n                mdi-pencil\n              "
                                            ),
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-icon",
                                          {
                                            staticClass: "mr-2 red--text",
                                            attrs: { small: "" },
                                            on: {
                                              click: function ($event) {
                                                return _vm.deleteItem(item)
                                              },
                                            },
                                          },
                                          [
                                            _vm._v(
                                              "\n                mdi-delete-forever "
                                            ),
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-icon",
                                          {
                                            directives: [
                                              {
                                                name: "clipboard",
                                                rawName: "v-clipboard",
                                                value: item.code,
                                                expression: "item.code",
                                              },
                                            ],
                                            staticClass: "mr-2 primary--text",
                                            attrs: { small: "" },
                                            on: {
                                              click: function ($event) {
                                                return _vm.copyToClipBoard(
                                                  item.code
                                                )
                                              },
                                            },
                                          },
                                          [
                                            _vm._v(
                                              "\n                mdi-qrcode\n              "
                                            ),
                                          ]
                                        ),
                                      ]
                                    },
                                  },
                                ]),
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c("div", { staticClass: "row" }),
              _vm._v(" "),
              _c(
                "v-snackbar",
                {
                  attrs: {
                    color: _vm.snackbarColor,
                    right: "",
                    timeout: "5000",
                    outlined: "",
                    top: "",
                    width: "50",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "action",
                      fn: function (ref) {
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._b(
                              {
                                attrs: { color: _vm.snackbarColor, text: "" },
                                on: {
                                  click: function ($event) {
                                    _vm.snackbar = false
                                  },
                                },
                              },
                              "v-btn",
                              attrs,
                              false
                            ),
                            [
                              _c("v-icon", { attrs: { dark: "", left: "" } }, [
                                _vm._v(" mdi-close "),
                              ]),
                              _vm._v("close\n          "),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.snackbar,
                    callback: function ($$v) {
                      _vm.snackbar = $$v
                    },
                    expression: "snackbar",
                  },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v(" mdi-error "),
                  ]),
                  _vm._v(_vm._s(_vm.text) + "\n\n        "),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=template&id=e4d4f516&":
/*!***********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=template&id=e4d4f516& ***!
  \***********************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _c(
        "v-card",
        [
          _c(
            "v-card-subtitle",
            {
              staticClass: "white--text text-uppercase elevation-2 mb-0 pb-1",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("span", { staticClass: "text-h6" }, [
                _vm._v(" Submitted Clearances "),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2 mb-0 pb-6 mt-0 pt-2",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c(
                "v-row",
                [
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "4" },
                    },
                    [
                      _c("v-select", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          label: "Select Semester",
                          "item-value": "id",
                          "item-text": "semester",
                          items: _vm.semesters,
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        on: {
                          change: function ($event) {
                            return _vm.semesterChange(_vm.searchItem)
                          },
                        },
                        model: {
                          value: _vm.semester_id,
                          callback: function ($$v) {
                            _vm.semester_id = $$v
                          },
                          expression: "semester_id",
                        },
                      }),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-col",
                    {
                      staticClass: "mb-0 pb-0 mt-0 pt-0",
                      attrs: { cols: "12", md: "4" },
                    },
                    [
                      _c("v-text-field", {
                        staticClass: "mb-0 pb-0 mt-2 pt-0",
                        attrs: {
                          "append-icon": "mdi-magnify",
                          label: "Search",
                          "solo-inverted": "",
                          flat: "",
                          dark: "",
                          dense: "",
                          "hide-details": "",
                        },
                        on: { input: _vm.searchIt },
                        model: {
                          value: _vm.searchItem,
                          callback: function ($$v) {
                            _vm.searchItem = $$v
                          },
                          expression: "searchItem",
                        },
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c("v-data-table", {
            staticClass: "px-6 pb-6  mt-4",
            attrs: {
              "item-key": "id",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              page: _vm.page,
              pageCount: _vm.numberOfPages,
              items: _vm.submittedclearances.data,
              options: _vm.options,
              "server-items-length": _vm.totalsubmittedclearances,
              "items-per-page": 10,
              "footer-props": {
                itemsPerPageOptions: [5, 10, 15],
                itemsPerPageText: "Clearance Request Per Page",
                "show-current-page": true,
                "show-first-last-page": true,
              },
            },
            on: {
              "update:options": function ($event) {
                _vm.options = $event
              },
            },
            scopedSlots: _vm._u([
              {
                key: "item.datesubmitted",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c(
                      "v-chip",
                      {
                        attrs: {
                          "text-color": "white",
                          color: "success",
                          small: "",
                        },
                      },
                      [
                        _vm._v(
                          "\n           \n            " +
                            _vm._s(item.datesubmitted) +
                            "\n        "
                        ),
                      ]
                    ),
                  ]
                },
              },
              {
                key: "item.actions",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    [
                      _c(
                        "v-btn",
                        {
                          staticClass: "elevation-0 error lighten-1 ml-2",
                          attrs: {
                            loading: _vm.downloadLoading,
                            small: "",
                            dark: "",
                          },
                          on: {
                            click: function ($event) {
                              return _vm.generatePDF(item)
                            },
                          },
                        },
                        [
                          _c("v-icon", { attrs: { "x-small": "" } }, [
                            _vm._v("mdi-file-pdf"),
                          ]),
                          _vm._v("\n                  Download"),
                        ],
                        1
                      ),
                    ],
                  ]
                },
              },
            ]),
          }),
          _vm._v(" "),
          _c(
            "v-snackbar",
            {
              attrs: {
                color: _vm.snackbarColor,
                right: "",
                timeout: "5000",
                outlined: "",
                top: "",
                width: "50",
              },
              scopedSlots: _vm._u([
                {
                  key: "action",
                  fn: function (ref) {
                    var attrs = ref.attrs
                    return [
                      _c(
                        "v-btn",
                        _vm._b(
                          {
                            attrs: { color: _vm.snackbarColor, text: "" },
                            on: {
                              click: function ($event) {
                                _vm.snackbar = false
                              },
                            },
                          },
                          "v-btn",
                          attrs,
                          false
                        ),
                        [
                          _c("v-icon", { attrs: { dark: "", left: "" } }, [
                            _vm._v("\n          mdi-close\n        "),
                          ]),
                          _vm._v("close\n      "),
                        ],
                        1
                      ),
                    ]
                  },
                },
              ]),
              model: {
                value: _vm.snackbar,
                callback: function ($$v) {
                  _vm.snackbar = $$v
                },
                expression: "snackbar",
              },
            },
            [
              _c("v-icon", { attrs: { left: "" } }, [
                _vm._v("\n          mdi-error\n        "),
              ]),
              _vm._v(_vm._s(_vm.text) + "\n\n      "),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=template&id=06b913dd&":
/*!*******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=template&id=06b913dd& ***!
  \*******************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-email")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-bell")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-avatar",
                { attrs: { size: "24", item: "" } },
                [
                  _c("v-img", {
                    attrs: { src: "images/psu_logo.png", alt: "parsu_logo" },
                  }),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5 elevation-0" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=template&id=d8a4218e&":
/*!*****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=template&id=d8a4218e& ***!
  \*****************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-email")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-bell")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-avatar",
                { attrs: { size: "24", item: "" } },
                [
                  _c("v-img", {
                    attrs: { src: "images/psu_logo.png", alt: "parsu_logo" },
                  }),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5 elevation-0" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=template&id=652a6612&":
/*!*******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=template&id=652a6612& ***!
  \*******************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-email")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { staticClass: "mr-2", attrs: { icon: "", small: "" } },
            [
              _c(
                "v-badge",
                {
                  attrs: {
                    bordered: "",
                    overlap: "",
                    content: "0",
                    small: "",
                    dot: "",
                  },
                },
                [_c("v-icon", { attrs: { small: "" } }, [_vm._v("mdi-bell")])],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-avatar",
                { attrs: { size: "24", item: "" } },
                [
                  _c("v-img", {
                    attrs: { src: "images/psu_logo.png", alt: "parsu_logo" },
                  }),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5 elevation-0" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/ClearanceListComponent.vue?vue&type=template&id=1691e242&":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/student/ClearanceListComponent.vue?vue&type=template&id=1691e242& ***!
  \*********************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _c(
        "v-card",
        [
          _c(
            "v-card-subtitle",
            {
              staticClass: "white--text text-uppercase elevation-2 mb-0 pb-1",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("span", { staticClass: "text-h6" }, [
                _vm._v(" Clearance List "),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2 mb-0 pb-0 mt-0 pt-0",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c("v-text-field", {
                staticClass: "mb-0 pb-0 mt-2 pt-0",
                attrs: {
                  "append-icon": "mdi-magnify",
                  label: "Search",
                  "solo-inverted": "",
                  flat: "",
                  dark: "",
                  dense: "",
                },
                model: {
                  value: _vm.search,
                  callback: function ($$v) {
                    _vm.search = $$v
                  },
                  expression: "search",
                },
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c("v-data-table", {
            staticClass: "px-6 pb-6  mt-1",
            attrs: {
              "item-key": "id",
              loading: _vm.loading,
              "loading-text": "Loading... Please wait",
              headers: _vm.headers,
              page: _vm.page + 1,
              pageCount: _vm.numberOfPages,
              items: _vm.clearances.data,
              options: _vm.options,
              "server-items-length": _vm.totalclearances,
              "items-per-page": 10,
              "footer-props": {
                itemsPerPageOptions: [5, 10, 15],
                itemsPerPageText: "Clearance Request Per Page",
                "show-current-page": true,
                "show-first-last-page": true,
              },
            },
            on: {
              "update:options": function ($event) {
                _vm.options = $event
              },
            },
            scopedSlots: _vm._u([
              {
                key: "top",
                fn: function () {
                  return undefined
                },
                proxy: true,
              },
              {
                key: "item.id",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    _c("td", [
                      _vm._v(_vm._s(_vm.clearances.data.indexOf(item) + 1)),
                    ]),
                  ]
                },
              },
              {
                key: "item.status",
                fn: function (ref) {
                  var item = ref.item
                  return [
                    [
                      item.status
                        ? _c(
                            "v-chip",
                            {
                              attrs: {
                                "text-color": "white",
                                color: "success",
                                "x-small": "",
                              },
                            },
                            [
                              _vm._v(
                                "\r\n                  Completed\r\n                "
                              ),
                            ]
                          )
                        : _c(
                            "v-chip",
                            {
                              attrs: {
                                "text-color": "white",
                                color: "warning",
                                "x-small": "",
                              },
                            },
                            [
                              _vm._v(
                                "\r\n                  Pending\r\n                "
                              ),
                            ]
                          ),
                    ],
                  ]
                },
              },
            ]),
          }),
          _vm._v(" "),
          _c(
            "v-snackbar",
            {
              attrs: {
                color: _vm.snackbarColor,
                right: "",
                timeout: "5000",
                outlined: "",
                top: "",
                width: "50",
              },
              scopedSlots: _vm._u([
                {
                  key: "action",
                  fn: function (ref) {
                    var attrs = ref.attrs
                    return [
                      _c(
                        "v-btn",
                        _vm._b(
                          {
                            attrs: { color: _vm.snackbarColor, text: "" },
                            on: {
                              click: function ($event) {
                                _vm.snackbar = false
                              },
                            },
                          },
                          "v-btn",
                          attrs,
                          false
                        ),
                        [
                          _c("v-icon", { attrs: { dark: "", left: "" } }, [
                            _vm._v("\r\n          mdi-close\r\n        "),
                          ]),
                          _vm._v("close\r\n      "),
                        ],
                        1
                      ),
                    ]
                  },
                },
              ]),
              model: {
                value: _vm.snackbar,
                callback: function ($$v) {
                  _vm.snackbar = $$v
                },
                expression: "snackbar",
              },
            },
            [
              _c("v-icon", { attrs: { left: "" } }, [
                _vm._v("\r\n          mdi-error\r\n        "),
              ]),
              _vm._v(_vm._s(_vm.text) + "\r\n\r\n      "),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/LHSStudentComponent.vue?vue&type=template&id=1009ca2a&":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/student/LHSStudentComponent.vue?vue&type=template&id=1009ca2a& ***!
  \******************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-menu",
                {
                  attrs: {
                    "close-on-content-click": false,
                    "nudge-width": 200,
                    "offset-x": "",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "activator",
                      fn: function (ref) {
                        var on = ref.on
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._g(
                              _vm._b(
                                { attrs: { icon: "", large: "" } },
                                "v-btn",
                                attrs,
                                false
                              ),
                              on
                            ),
                            [
                              _c(
                                "v-avatar",
                                { attrs: { size: "32px", item: "" } },
                                [
                                  _c("v-img", {
                                    attrs: {
                                      src: "images/psu_logo.png",
                                      alt: "parsu_logo",
                                    },
                                  }),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.menu,
                    callback: function ($$v) {
                      _vm.menu = $$v
                    },
                    expression: "menu",
                  },
                },
                [
                  _vm._v(" "),
                  _c(
                    "v-card",
                    [
                      _c(
                        "v-list",
                        [
                          _c(
                            "v-list-item",
                            [
                              _c(
                                "v-list-item-avatar",
                                [
                                  _c(
                                    "v-avatar",
                                    { attrs: { color: "indigo" } },
                                    [
                                      _c("v-icon", { attrs: { dark: "" } }, [
                                        _vm._v(
                                          "\n                  mdi-account-circle\n                "
                                        ),
                                      ]),
                                    ],
                                    1
                                  ),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c("v-list-item-title", [
                                    _vm._v(_vm._s(_vm.user.name)),
                                  ]),
                                  _vm._v(" "),
                                  _c("v-list-item-subtitle", [
                                    _vm._v(_vm._s(_vm.role.description)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c("v-list-item-action"),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("v-divider"),
                      _vm._v(" "),
                      _c(
                        "v-list",
                        [
                          _c(
                            "v-list-item",
                            {
                              key: _vm.Settings,
                              attrs: { to: "/student/settings", link: "" },
                              on: {
                                click: function ($event) {
                                  _vm.menu = false
                                },
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                [_c("v-icon", [_vm._v("mdi-cog")])],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c("v-list-item-title", [
                                    _vm._v(
                                      "\n              Settings\n            "
                                    ),
                                  ]),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { on: { click: _vm.logout } },
                            [
                              _c(
                                "v-list-item-action",
                                [_c("v-icon", [_vm._v("mdi-logout-variant")])],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c("v-list-item-title", [
                                    _vm._v(
                                      "\n              Logout\n            "
                                    ),
                                  ]),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("v-card-actions", [_c("v-spacer")], 1),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/SGSStudentComponent.vue?vue&type=template&id=de417f5c&":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/student/SGSStudentComponent.vue?vue&type=template&id=de417f5c& ***!
  \******************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c(
        "v-navigation-drawer",
        {
          attrs: {
            color: "#1d232e",
            width: "220px",
            src: "images/sidebar/sidebar-2.jpg",
            dark: "",
            app: "",
          },
          scopedSlots: _vm._u([
            {
              key: "img",
              fn: function (props) {
                return [
                  _c(
                    "v-img",
                    _vm._b(
                      {
                        attrs: {
                          gradient:
                            "to bottom left, rgba(00,00,00,.7), rgba(00,00,00,.7)",
                        },
                      },
                      "v-img",
                      props,
                      false
                    )
                  ),
                ]
              },
            },
            {
              key: "prepend",
              fn: function () {
                return [
                  _c(
                    "v-list-item",
                    { staticClass: "margin-bottom:0" },
                    [
                      _c(
                        "v-list-item-avatar",
                        {
                          staticClass: "text-center",
                          staticStyle: { margin: "0", "margin-right": "10px" },
                        },
                        [
                          _c(
                            "v-icon",
                            {
                              staticStyle: {
                                "margin-left": "10px",
                                "padding-right": "10px",
                              },
                              attrs: { dark: "", large: "" },
                            },
                            [
                              _vm._v(
                                "\n                  mdi-account-circle\n                "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            { staticClass: "caption text-wrap" },
                            [_vm._v(" " + _vm._s(_vm.user.name))]
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-subtitle",
                            { staticClass: "caption" },
                            [_vm._v(_vm._s(_vm.role.description))]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
            {
              key: "append",
              fn: function () {
                return [
                  _c(
                    "div",
                    { staticClass: "pa-2" },
                    [
                      _c(
                        "v-card",
                        {
                          staticClass: "overline  lighten-1 text-center ",
                          staticStyle: { background: "transparent" },
                          attrs: {
                            flat: "",
                            tile: "",
                            dark: "",
                            width: "100%",
                          },
                        },
                        [
                          _c("v-card-text", { staticClass: "caption" }, [
                            _vm._v(
                              "\n          " +
                                _vm._s(new Date().getFullYear()) +
                                " ©\n          "
                            ),
                            _c("strong", [
                              _vm._v("ICTMO, Partido State University"),
                            ]),
                          ]),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ]
              },
              proxy: true,
            },
          ]),
          model: {
            value: _vm.drawer,
            callback: function ($$v) {
              _vm.drawer = $$v
            },
            expression: "drawer",
          },
        },
        [
          _vm._v(" "),
          _vm._v(" "),
          _c(
            "div",
            {
              directives: [
                {
                  name: "slimscroll",
                  rawName: "v-slimscroll",
                  value: _vm.scrollOptions,
                  expression: "scrollOptions",
                },
              ],
            },
            [
              _c(
                "v-list",
                { attrs: { dense: "", shaped: "" } },
                [
                  _vm._l(_vm.items, function (item) {
                    return [
                      item.heading
                        ? _c(
                            "v-row",
                            { key: item.heading, attrs: { align: "center" } },
                            [
                              _c(
                                "v-col",
                                { attrs: { cols: "4" } },
                                [
                                  item.heading
                                    ? _c("v-subheader", [
                                        _vm._v(
                                          "\n              " +
                                            _vm._s(item.heading) +
                                            "\n            "
                                        ),
                                      ])
                                    : _vm._e(),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-col",
                                {
                                  staticClass: "text-center",
                                  attrs: { cols: "6" },
                                },
                                [
                                  _c(
                                    "a",
                                    {
                                      staticClass: "body-2 black--text",
                                      attrs: { href: "#!" },
                                    },
                                    [_vm._v("EDIT")]
                                  ),
                                ]
                              ),
                            ],
                            1
                          )
                        : item.children
                        ? _c(
                            "v-list-group",
                            {
                              key: item.text,
                              attrs: {
                                "append-icon": "",
                                color: "grey lighten-2",
                              },
                              scopedSlots: _vm._u(
                                [
                                  {
                                    key: "activator",
                                    fn: function () {
                                      return [
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(item.icon)),
                                            ]),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-content",
                                          [
                                            _c(
                                              "v-list-item-title",
                                              {
                                                staticClass:
                                                  "caption white--text text--darken-4 font-weight-light",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                " +
                                                    _vm._s(item.text) +
                                                    "\n              "
                                                ),
                                              ]
                                            ),
                                          ],
                                          1
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(
                                                _vm._s(
                                                  item.model
                                                    ? "mdi-chevron-up"
                                                    : item["icon-alt"]
                                                )
                                              ),
                                            ]),
                                          ],
                                          1
                                        ),
                                      ]
                                    },
                                    proxy: true,
                                  },
                                ],
                                null,
                                true
                              ),
                              model: {
                                value: item.model,
                                callback: function ($$v) {
                                  _vm.$set(item, "model", $$v)
                                },
                                expression: "item.model",
                              },
                            },
                            [
                              _vm._v(" "),
                              _vm._l(item.children, function (child, i) {
                                return _c(
                                  "v-list-item",
                                  {
                                    key: i,
                                    attrs: { to: child.link, link: "" },
                                  },
                                  [
                                    child.icon
                                      ? _c(
                                          "v-list-item-action",
                                          {
                                            staticStyle: {
                                              "margin-right": "10px",
                                            },
                                          },
                                          [
                                            _c("v-icon", [
                                              _vm._v(_vm._s(child.icon)),
                                            ]),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      {
                                        staticStyle: { "padding-left": "20px" },
                                      },
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption white--text text--darken-2 font-weight-light",
                                          },
                                          [
                                            _vm._v(
                                              "\n                " +
                                                _vm._s(child.text) +
                                                "\n              "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                  ],
                                  1
                                )
                              }),
                            ],
                            2
                          )
                        : _c(
                            "v-list-item",
                            {
                              key: item.text,
                              attrs: {
                                to: item.link,
                                link: "",
                                color: "grey lighten-2",
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                { staticStyle: { "margin-right": "10px" } },
                                [
                                  _c("v-icon", { attrs: { small: "" } }, [
                                    _vm._v(_vm._s(item.icon)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass:
                                        "caption white--text text--darken-2 font-weight-light",
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(item.text) +
                                          "\n            "
                                      ),
                                    ]
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                    ]
                  }),
                  _vm._v(" "),
                  _c(
                    "v-list-item",
                    { on: { click: _vm.logout } },
                    [
                      _c(
                        "v-list-item-action",
                        { staticStyle: { "margin-right": "10px" } },
                        [
                          _c("v-icon", { attrs: { small: "" } }, [
                            _vm._v("mdi-logout-variant"),
                          ]),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item-content",
                        [
                          _c(
                            "v-list-item-title",
                            {
                              staticClass:
                                "caption white--text text--darken-2 font-weight-light",
                            },
                            [_vm._v("\n              Logout\n            ")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                2
              ),
            ],
            1
          ),
        ]
      ),
      _vm._v(" "),
      _c(
        "v-app-bar",
        {
          staticClass: "white",
          attrs: { app: "", outlined: "", height: "50", elevation: "1" },
        },
        [
          _c("v-app-bar-nav-icon", {
            staticClass: "hidden-lg-and-up",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                _vm.drawer = !_vm.drawer
              },
            },
          }),
          _vm._v(" "),
          _c(
            "v-toolbar-title",
            {
              staticClass:
                "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
              staticStyle: { width: "300px" },
            },
            [_c("span", [_vm._v(_vm._s(_vm.currentRouteName))])]
          ),
          _vm._v(" "),
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            { attrs: { icon: "", small: "" } },
            [
              _c(
                "v-menu",
                {
                  attrs: {
                    "close-on-content-click": false,
                    "nudge-width": 200,
                    "offset-x": "",
                  },
                  scopedSlots: _vm._u([
                    {
                      key: "activator",
                      fn: function (ref) {
                        var on = ref.on
                        var attrs = ref.attrs
                        return [
                          _c(
                            "v-btn",
                            _vm._g(
                              _vm._b(
                                { attrs: { icon: "", large: "" } },
                                "v-btn",
                                attrs,
                                false
                              ),
                              on
                            ),
                            [
                              _c(
                                "v-avatar",
                                { attrs: { size: "32px", item: "" } },
                                [
                                  _c("v-img", {
                                    attrs: {
                                      src: "images/psu_logo.png",
                                      alt: "parsu_logo",
                                    },
                                  }),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ]
                      },
                    },
                  ]),
                  model: {
                    value: _vm.menu,
                    callback: function ($$v) {
                      _vm.menu = $$v
                    },
                    expression: "menu",
                  },
                },
                [
                  _vm._v(" "),
                  _c(
                    "v-card",
                    [
                      _c(
                        "v-list",
                        [
                          _c(
                            "v-list-item",
                            [
                              _c(
                                "v-list-item-avatar",
                                [
                                  _c(
                                    "v-avatar",
                                    { attrs: { color: "indigo" } },
                                    [
                                      _c("v-icon", { attrs: { dark: "" } }, [
                                        _vm._v(
                                          "\n                  mdi-account-circle\n                "
                                        ),
                                      ]),
                                    ],
                                    1
                                  ),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c("v-list-item-title", [
                                    _vm._v(_vm._s(_vm.user.name)),
                                  ]),
                                  _vm._v(" "),
                                  _c("v-list-item-subtitle", [
                                    _vm._v(_vm._s(_vm.role.description)),
                                  ]),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c("v-list-item-action"),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("v-divider"),
                      _vm._v(" "),
                      _c(
                        "v-list",
                        [
                          _c(
                            "v-list-item",
                            {
                              key: _vm.Settings,
                              attrs: { to: "/sgs/student/settings", link: "" },
                              on: {
                                click: function ($event) {
                                  _vm.menu = false
                                },
                              },
                            },
                            [
                              _c(
                                "v-list-item-action",
                                [_c("v-icon", [_vm._v("mdi-cog")])],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c("v-list-item-title", [
                                    _vm._v(
                                      "\n              Settings\n            "
                                    ),
                                  ]),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item",
                            { on: { click: _vm.logout } },
                            [
                              _c(
                                "v-list-item-action",
                                [_c("v-icon", [_vm._v("mdi-logout-variant")])],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c("v-list-item-title", [
                                    _vm._v(
                                      "\n              Logout\n            "
                                    ),
                                  ]),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("v-card-actions", [_c("v-spacer")], 1),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/SettingsComponent.vue?vue&type=template&id=01c57b2a&":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/student/SettingsComponent.vue?vue&type=template&id=01c57b2a& ***!
  \****************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-container",
    [
      _c(
        "v-card",
        [
          _c(
            "v-card-title",
            {
              staticClass: "white--text elevation-2",
              staticStyle: {
                background:
                  "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
              },
            },
            [
              _c(
                "span",
                { staticClass: "text-h6 white--text" },
                [
                  _c(
                    "v-icon",
                    { staticClass: "white--text", attrs: { left: "" } },
                    [_vm._v("mdi-cog")]
                  ),
                  _vm._v("Settings"),
                ],
                1
              ),
            ]
          ),
          _vm._v(" "),
          _c(
            "v-tabs",
            {
              model: {
                value: _vm.tabs,
                callback: function ($$v) {
                  _vm.tabs = $$v
                },
                expression: "tabs",
              },
            },
            [
              _c(
                "v-tab",
                {
                  staticClass: "primary--text",
                  attrs: { href: "#mobile-tabs-5-1" },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [
                    _vm._v("mdi-account-edit"),
                  ]),
                  _vm._v(" Purpose\r\n          "),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-tab",
                {
                  staticClass: "primary--text",
                  attrs: { href: "#mobile-tabs-5-2" },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [_vm._v("mdi-email")]),
                  _vm._v(" Change Email\r\n          "),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-tab",
                {
                  staticClass: "primary--text",
                  attrs: { href: "#mobile-tabs-5-3" },
                },
                [
                  _c("v-icon", { attrs: { left: "" } }, [_vm._v("mdi-lock")]),
                  _vm._v(" Change Password\r\n          "),
                ],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-tabs-items",
            {
              model: {
                value: _vm.tabs,
                callback: function ($$v) {
                  _vm.tabs = $$v
                },
                expression: "tabs",
              },
            },
            [
              _c(
                "v-tab-item",
                {
                  staticClass: "ml-6 mr-6",
                  attrs: { value: "mobile-tabs-5-1" },
                },
                [
                  _c(
                    "v-card",
                    { attrs: { flat: "" } },
                    [
                      _c(
                        "v-form",
                        {
                          attrs: { method: "post" },
                          on: {
                            submit: function ($event) {
                              $event.stopPropagation()
                              $event.preventDefault()
                              return _vm.save.apply(null, arguments)
                            },
                          },
                          model: {
                            value: _vm.valid,
                            callback: function ($$v) {
                              _vm.valid = $$v
                            },
                            expression: "valid",
                          },
                        },
                        [
                          _c(
                            "v-container",
                            [
                              _c(
                                "v-row",
                                [
                                  _c(
                                    "v-col",
                                    {
                                      staticStyle: { margin: "0" },
                                      attrs: { cols: "12", sm: "12" },
                                    },
                                    [
                                      _c("v-select", {
                                        attrs: {
                                          items: _vm.purposes,
                                          label: "Select Purpose",
                                          "item-value": "id",
                                          rules: [_vm.rules.required],
                                          "item-text": "purpose",
                                          color: "primary",
                                        },
                                        model: {
                                          value: _vm.setup.purpose_id,
                                          callback: function ($$v) {
                                            _vm.$set(
                                              _vm.setup,
                                              "purpose_id",
                                              $$v
                                            )
                                          },
                                          expression: "setup.purpose_id",
                                        },
                                      }),
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _vm.setup.purpose_id == 1
                                    ? _c(
                                        "v-col",
                                        {
                                          staticStyle: { margin: "0" },
                                          attrs: { cols: "12", sm: "12" },
                                        },
                                        [
                                          _c("v-select", {
                                            attrs: {
                                              items: _vm.semesters,
                                              label: "Select Semester",
                                              "item-value": "id",
                                              "item-text": "semester",
                                              color: "primary",
                                              rules: [_vm.rules.required],
                                            },
                                            model: {
                                              value: _vm.setup.semester_id,
                                              callback: function ($$v) {
                                                _vm.$set(
                                                  _vm.setup,
                                                  "semester_id",
                                                  $$v
                                                )
                                              },
                                              expression: "setup.semester_id",
                                            },
                                          }),
                                        ],
                                        1
                                      )
                                    : _vm.setup.purpose_id == 2
                                    ? _c(
                                        "v-col",
                                        {
                                          staticStyle: { margin: "0" },
                                          attrs: { cols: "12", sm: "12" },
                                        },
                                        [
                                          _c("v-select", {
                                            attrs: {
                                              items: _vm.graduations,
                                              label: "Select Graduation Period",
                                              "item-value": "id",
                                              "item-text": "graduation",
                                              color: "primary",
                                              rules: [_vm.rules.required],
                                            },
                                            model: {
                                              value: _vm.setup.graduation_id,
                                              callback: function ($$v) {
                                                _vm.$set(
                                                  _vm.setup,
                                                  "graduation_id",
                                                  $$v
                                                )
                                              },
                                              expression: "setup.graduation_id",
                                            },
                                          }),
                                        ],
                                        1
                                      )
                                    : _vm.setup.purpose_id == 3
                                    ? _c(
                                        "v-col",
                                        { attrs: { cols: "12", sm: "12" } },
                                        [
                                          _c("v-text-field", {
                                            attrs: {
                                              label: "Specify",
                                              rules: [_vm.rules.required],
                                            },
                                            model: {
                                              value: _vm.setup.credential,
                                              callback: function ($$v) {
                                                _vm.$set(
                                                  _vm.setup,
                                                  "credential",
                                                  $$v
                                                )
                                              },
                                              expression: "setup.credential",
                                            },
                                          }),
                                        ],
                                        1
                                      )
                                    : _vm._e(),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("v-divider"),
                      _vm._v(" "),
                      _c(
                        "v-card-actions",
                        [
                          _c("v-spacer"),
                          _vm._v(" "),
                          _c(
                            "v-btn",
                            {
                              attrs: {
                                color: "blue darken-1",
                                text: "",
                                type: "submit",
                              },
                              on: {
                                click: function ($event) {
                                  $event.preventDefault()
                                  return _vm.save.apply(null, arguments)
                                },
                              },
                            },
                            [
                              _vm._v(
                                "\r\n                      Save\r\n                    "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-tab-item",
                {
                  staticClass: "ml-6 mr-6",
                  attrs: { value: "mobile-tabs-5-2" },
                },
                [
                  _c(
                    "v-card",
                    { attrs: { flat: "" } },
                    [
                      _c(
                        "v-form",
                        {
                          attrs: { method: "post" },
                          on: {
                            submit: function ($event) {
                              $event.stopPropagation()
                              $event.preventDefault()
                              return _vm.updateEmail.apply(null, arguments)
                            },
                          },
                          model: {
                            value: _vm.valid,
                            callback: function ($$v) {
                              _vm.valid = $$v
                            },
                            expression: "valid",
                          },
                        },
                        [
                          _c(
                            "v-container",
                            [
                              _c(
                                "v-row",
                                [
                                  _c(
                                    "v-col",
                                    { attrs: { cols: "12", sm: "12" } },
                                    [
                                      _c("v-text-field", {
                                        attrs: {
                                          type: "email",
                                          "success-messages": _vm.success,
                                          "error-messages": _vm.error,
                                          blur: _vm.checkEmail,
                                          label: "Email",
                                          disabled: !_vm.email_disabled,
                                          rules: [
                                            _vm.rules.required,
                                            _vm.rules.validEmail,
                                          ],
                                        },
                                        model: {
                                          value: _vm.editedItem.email,
                                          callback: function ($$v) {
                                            _vm.$set(
                                              _vm.editedItem,
                                              "email",
                                              $$v
                                            )
                                          },
                                          expression: "editedItem.email",
                                        },
                                      }),
                                    ],
                                    1
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("v-divider"),
                      _vm._v(" "),
                      _c(
                        "v-card-actions",
                        [
                          _c("v-checkbox", {
                            attrs: { label: "Change Email" },
                            model: {
                              value: _vm.email_disabled,
                              callback: function ($$v) {
                                _vm.email_disabled = $$v
                              },
                              expression: "email_disabled",
                            },
                          }),
                          _vm._v(" "),
                          _c("v-spacer"),
                          _vm._v(" "),
                          _c(
                            "v-btn",
                            {
                              attrs: {
                                color: "blue darken-1",
                                text: "",
                                disabled: !_vm.valid,
                                type: "submit",
                                loading: _vm.loading,
                              },
                              on: {
                                click: function ($event) {
                                  $event.preventDefault()
                                  return _vm.updateEmail.apply(null, arguments)
                                },
                              },
                            },
                            [
                              _vm._v(
                                "\r\n                      Save\r\n                    "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-tab-item",
                {
                  staticClass: "ml-6 mr-6",
                  attrs: { value: "mobile-tabs-5-3" },
                },
                [
                  _c(
                    "v-card",
                    { attrs: { flat: "" } },
                    [
                      _c(
                        "v-form",
                        {
                          attrs: { method: "post" },
                          on: {
                            submit: function ($event) {
                              $event.stopPropagation()
                              $event.preventDefault()
                              return _vm.updatePassword.apply(null, arguments)
                            },
                          },
                          model: {
                            value: _vm.valid,
                            callback: function ($$v) {
                              _vm.valid = $$v
                            },
                            expression: "valid",
                          },
                        },
                        [
                          _c(
                            "v-container",
                            [
                              _c(
                                "v-row",
                                [
                                  _c(
                                    "v-col",
                                    { attrs: { cols: "12", sm: "12" } },
                                    [
                                      _c("v-text-field", {
                                        attrs: {
                                          type: "password",
                                          color: "primary",
                                          label: "Type Password",
                                          disabled: !_vm.password_disabled,
                                          rules: [
                                            _vm.rules.required,
                                            _vm.rules.min,
                                          ],
                                        },
                                        model: {
                                          value: _vm.editedItem.password,
                                          callback: function ($$v) {
                                            _vm.$set(
                                              _vm.editedItem,
                                              "password",
                                              $$v
                                            )
                                          },
                                          expression: "editedItem.password",
                                        },
                                      }),
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "v-col",
                                    { attrs: { cols: "12", sm: "12" } },
                                    [
                                      _c("v-text-field", {
                                        attrs: {
                                          type: "password",
                                          color: "primary",
                                          disabled: !_vm.password_disabled,
                                          label: "Retype Password",
                                          rules: [
                                            _vm.rules.required,
                                            _vm.rules.min,
                                            _vm.passwordmatch,
                                          ],
                                        },
                                        model: {
                                          value: _vm.editedItem.rpassword,
                                          callback: function ($$v) {
                                            _vm.$set(
                                              _vm.editedItem,
                                              "rpassword",
                                              $$v
                                            )
                                          },
                                          expression: "editedItem.rpassword",
                                        },
                                      }),
                                    ],
                                    1
                                  ),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("v-divider"),
                      _vm._v(" "),
                      _c(
                        "v-card-actions",
                        [
                          _c("v-checkbox", {
                            attrs: { label: "Change Password" },
                            model: {
                              value: _vm.password_disabled,
                              callback: function ($$v) {
                                _vm.password_disabled = $$v
                              },
                              expression: "password_disabled",
                            },
                          }),
                          _vm._v(" "),
                          _c("v-spacer"),
                          _vm._v(" "),
                          _c(
                            "v-btn",
                            {
                              attrs: {
                                color: "blue darken-1",
                                text: "",
                                type: "submit",
                                disabled: !_vm.valid,
                              },
                              on: {
                                click: function ($event) {
                                  $event.preventDefault()
                                  return _vm.updatePassword.apply(
                                    null,
                                    arguments
                                  )
                                },
                              },
                            },
                            [
                              _vm._v(
                                "\r\n                      Save\r\n                    "
                              ),
                            ]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-snackbar",
            {
              attrs: {
                color: _vm.snackbarColor,
                right: "",
                timeout: "5000",
                outlined: "",
                top: "",
                width: "50",
              },
              scopedSlots: _vm._u([
                {
                  key: "action",
                  fn: function (ref) {
                    var attrs = ref.attrs
                    return [
                      _c(
                        "v-btn",
                        _vm._b(
                          {
                            attrs: { color: _vm.snackbarColor, text: "" },
                            on: {
                              click: function ($event) {
                                _vm.snackbar = false
                              },
                            },
                          },
                          "v-btn",
                          attrs,
                          false
                        ),
                        [
                          _c("v-icon", { attrs: { dark: "", left: "" } }, [
                            _vm._v("\r\n          mdi-close\r\n        "),
                          ]),
                          _vm._v("close\r\n      "),
                        ],
                        1
                      ),
                    ]
                  },
                },
              ]),
              model: {
                value: _vm.snackbar,
                callback: function ($$v) {
                  _vm.snackbar = $$v
                },
                expression: "snackbar",
              },
            },
            [
              _c("v-icon", { attrs: { left: "" } }, [
                _vm._v("\r\n          mdi-error\r\n        "),
              ]),
              _vm._v(_vm._s(_vm.text) + "\r\n\r\n      "),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/StudentSIASComponent.vue?vue&type=template&id=1e5ade8e&":
/*!*******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/student/StudentSIASComponent.vue?vue&type=template&id=1e5ade8e& ***!
  \*******************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-card",
    { staticClass: "mx-auto", attrs: { "max-width": "1500" } },
    [
      _c("v-card-text", [
        _c("div", [_vm._v("SIAS ACCOUNT")]),
        _vm._v(" "),
        _c("p", { staticClass: "display-1 text--primary" }, [
          _vm._v("\n      " + _vm._s(_vm.account.name) + "\n    "),
        ]),
        _vm._v(" "),
        _c("p", [_vm._v(_vm._s(_vm.account.program))]),
        _vm._v(" "),
        _c("div", { staticClass: "text--primary" }, [
          _vm._v(
            "\n      User ID: " +
              _vm._s(
                _vm.account.user_id
                  ? _vm.account.user_id
                  : "Not yet available.."
              )
          ),
          _c("br"),
          _vm._v(
            "\n      Password:\n      " +
              _vm._s(
                _vm.account.password
                  ? _vm.account.password
                  : "Not yet available.."
              ) +
              "\n    "
          ),
        ]),
        _vm._v(" "),
        _c("div", [
          _vm._v("\n      Link: "),
          _c("a", { attrs: { href: "https://my.parsu.edu.ph" } }, [
            _vm._v("https://my.parsu.edu.ph"),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c(
        "v-card-actions",
        [
          _c("v-spacer"),
          _vm._v(" "),
          _c(
            "v-btn",
            {
              attrs: { text: "", color: "teal accent-4" },
              on: {
                click: function ($event) {
                  _vm.dialog = true
                },
              },
            },
            [_vm._v("\n      How to use it?\n    ")]
          ),
        ],
        1
      ),
      _vm._v(" "),
      _vm.dialog == true
        ? _c(
            "v-stepper",
            {
              attrs: { vertical: "" },
              model: {
                value: _vm.e6,
                callback: function ($$v) {
                  _vm.e6 = $$v
                },
                expression: "e6",
              },
            },
            [
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 1, step: "1" } },
                [_vm._v("\n    Step 1\n    ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "1" } },
                [
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div", [
                            _vm._v(
                              "\n                Go to this link\n                "
                            ),
                            _c(
                              "a",
                              { attrs: { href: "https://my.parsu.edu.ph" } },
                              [_vm._v("https://my.parsu.edu.ph")]
                            ),
                            _vm._v(
                              "\n                and select which campus you are enrolled.\n              "
                            ),
                          ]),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step1.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 2
                        },
                      },
                    },
                    [_vm._v(" Next ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v(" Close ")]
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 2, step: "2" } },
                [_vm._v("\n    Step 2\n  ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "2" } },
                [
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div", [
                            _vm._v(
                              "\n                Then Select Student\n              "
                            ),
                          ]),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step2.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 3
                        },
                      },
                    },
                    [_vm._v(" Next ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 1
                        },
                      },
                    },
                    [_vm._v(" Back ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v(" Close ")]
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 3, step: "3" } },
                [_vm._v("\n    Step 3\n  ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "3" } },
                [
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div", [
                            _vm._v(
                              "\n                Enter the given user id and password then click login\n              "
                            ),
                          ]),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step3.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 4
                        },
                      },
                    },
                    [_vm._v(" Next ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 2
                        },
                      },
                    },
                    [_vm._v(" Back ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v(" Close ")]
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 4, step: "4" } },
                [_vm._v("\n    Step 4\n  ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "4" } },
                [
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div", [
                            _c("i", [_vm._v("Note:")]),
                            _vm._v(
                              " If Regular Student Please Skip this step. "
                            ),
                            _c("br"),
                          ]),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step4.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 5
                        },
                      },
                    },
                    [_vm._v(" Next ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 3
                        },
                      },
                    },
                    [_vm._v(" Back ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v(" Close ")]
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 5, step: "5" } },
                [_vm._v("\n      Step 5\n  ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "5" } },
                [
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div", [
                            _c("i", [_vm._v("Note:")]),
                            _vm._v(
                              " If Regular Student Please Skip this step. "
                            ),
                            _c("br"),
                            _vm._v(
                              "\n\n                Click Auto Enlist to retrieve available subjects to be taken.\n\n              "
                            ),
                          ]),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step5.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 6
                        },
                      },
                    },
                    [_vm._v(" Next ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 4
                        },
                      },
                    },
                    [_vm._v(" Back ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v(" Close ")]
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 6, step: "6" } },
                [_vm._v("\n    Step 6\n  ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "6" } },
                [
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div", [
                            _c("i", [_vm._v("Note:")]),
                            _vm._v(
                              " If Regular Student Please Skip this step. "
                            ),
                            _c("br"),
                            _vm._v(
                              "\n\n                To delist subject select the subject you wish to delist/remove then Click Delist\n\n              "
                            ),
                          ]),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step6.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 7
                        },
                      },
                    },
                    [_vm._v(" Next ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 5
                        },
                      },
                    },
                    [_vm._v(" Back ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v(" Close ")]
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 7, step: "7" } },
                [_vm._v("\n    Step 7\n  ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "7" } },
                [
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div"),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step7.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 8
                        },
                      },
                    },
                    [_vm._v(" Next ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 6
                        },
                      },
                    },
                    [_vm._v(" Back ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v(" Close ")]
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 8, step: "8" } },
                [_vm._v("\n   Step 8\n  ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "8" } },
                [
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div"),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step8.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 9
                        },
                      },
                    },
                    [_vm._v(" Next ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 7
                        },
                      },
                    },
                    [_vm._v(" Back ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v(" Close ")]
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 9, step: "9" } },
                [_vm._v("\n    Step 9\n  ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "9" } },
                [
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div"),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step9.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 10
                        },
                      },
                    },
                    [_vm._v(" Next ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 8
                        },
                      },
                    },
                    [_vm._v(" Back ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v(" Close ")]
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 10, step: "10" } },
                [_vm._v("\n    Step 10\n  ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "10" } },
                [
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div"),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step10.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 11
                        },
                      },
                    },
                    [_vm._v(" Next ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 9
                        },
                      },
                    },
                    [_vm._v(" Back ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v(" Close ")]
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 11, step: "11" } },
                [_vm._v("\n    Step 11\n  ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "11" } },
                [
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div"),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step11.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 12
                        },
                      },
                    },
                    [_vm._v(" Next ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { color: "primary" },
                      on: {
                        click: function ($event) {
                          _vm.e6 = 10
                        },
                      },
                    },
                    [_vm._v(" Back ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-btn",
                    {
                      attrs: { text: "" },
                      on: {
                        click: function ($event) {
                          _vm.dialog = false
                        },
                      },
                    },
                    [_vm._v(" Close ")]
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-stepper-step",
                { attrs: { complete: _vm.e6 > 12, step: "12" } },
                [_vm._v("\n    Step 12\n  ")]
              ),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "12" } },
                [
                  _c(
                    "div",
                    [
                      _c(
                        "v-btn",
                        {
                          attrs: { color: "primary" },
                          on: {
                            click: function ($event) {
                              _vm.e6 = 13
                            },
                          },
                        },
                        [_vm._v(" Next ")]
                      ),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: { color: "primary" },
                          on: {
                            click: function ($event) {
                              _vm.e6 = 11
                            },
                          },
                        },
                        [_vm._v(" Back ")]
                      ),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: { text: "" },
                          on: {
                            click: function ($event) {
                              _vm.dialog = false
                            },
                          },
                        },
                        [_vm._v(" Close ")]
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div"),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step12.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
              _vm._v(" "),
              _c("v-stepper-step", { attrs: { step: "13" } }, [
                _vm._v("\n    Step 13\n  "),
              ]),
              _vm._v(" "),
              _c(
                "v-stepper-content",
                { attrs: { step: "13" } },
                [
                  _c(
                    "div",
                    [
                      _c(
                        "v-btn",
                        {
                          attrs: { color: "primary" },
                          on: {
                            click: function ($event) {
                              _vm.e6 = 12
                            },
                          },
                        },
                        [_vm._v(" Back ")]
                      ),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: { text: "" },
                          on: {
                            click: function ($event) {
                              _vm.dialog = false
                            },
                          },
                        },
                        [_vm._v(" Close ")]
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-layout",
                    { attrs: { "justify-center": "", "align-center": "" } },
                    [
                      _c(
                        "v-flex",
                        { attrs: { shrink: "" } },
                        [
                          _c("div"),
                          _vm._v(" "),
                          _c(
                            "v-card",
                            {
                              staticClass: "mb-12",
                              attrs: {
                                "max-height": "1000px",
                                "max-width": "1500px",
                              },
                            },
                            [
                              _c("v-img", {
                                attrs: {
                                  "max-width": "800",
                                  src: "images/enrollment/step13.png",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          )
        : _vm._e(),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/AdminLayout.vue?vue&type=template&id=537e8230&":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/layout/AdminLayout.vue?vue&type=template&id=537e8230& ***!
  \*****************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c("OSCSNavigationDrawer", {
        attrs: { drawer: _vm.drawer, navigationList: _vm.navigationList },
      }),
      _vm._v(" "),
      _c("OSCSAppBar", { attrs: { openDrawer: _vm.openDrawer } }),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/OSCSAppBar.vue?vue&type=template&id=e60b2102&":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/layout/OSCSAppBar.vue?vue&type=template&id=e60b2102& ***!
  \****************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app-bar",
    {
      staticClass: "white",
      staticStyle: { "border-bottom": "1px solid #d2d2d2 !important" },
      attrs: { app: "", outlined: "", height: "51", elevation: "0" },
    },
    [
      _c("v-app-bar-nav-icon", {
        staticClass: "hidden-lg-and-up",
        on: {
          click: function ($event) {
            $event.stopPropagation()
            return _vm.openDrawer.apply(null, arguments)
          },
        },
      }),
      _vm._v(" "),
      _c("v-img", {
        attrs: {
          src: "/images/OSCS_LOGO.jpg",
          "max-height": "100",
          "max-width": "100",
          alt: "OSCS Logo",
        },
      }),
      _vm._v(" "),
      _c("v-divider", {
        staticClass: "ml-4",
        attrs: { inset: "", vertical: "" },
      }),
      _vm._v(" "),
      _c(
        "v-toolbar-title",
        {
          staticClass:
            "ml-0 pl-4 font-weight-medium blue-grey--text text--darken-4",
          staticStyle: { width: "300px" },
        },
        [
          _c(
            "h6",
            {
              staticClass:
                "font-weight-medium grey--text text--darken-2 text-overline text-uppercase text-large",
            },
            [_vm._v(_vm._s(_vm.currentRouteName))]
          ),
        ]
      ),
      _vm._v(" "),
      _c("v-spacer"),
      _vm._v(" "),
      _c(
        "v-btn",
        { staticClass: "mr-2", attrs: { icon: "", small: "" } },
        [
          _c(
            "v-menu",
            {
              attrs: {
                "close-on-content-click": false,
                "nudge-width": 200,
                "offset-x": "",
              },
              scopedSlots: _vm._u([
                {
                  key: "activator",
                  fn: function (ref) {
                    var on = ref.on
                    var attrs = ref.attrs
                    return [
                      _c(
                        "v-btn",
                        _vm._g(
                          _vm._b(
                            { attrs: { icon: "", large: "" } },
                            "v-btn",
                            attrs,
                            false
                          ),
                          on
                        ),
                        [
                          _c(
                            "v-avatar",
                            { attrs: { size: "32px", item: "" } },
                            [
                              _c("v-img", {
                                attrs: {
                                  src: "images/psu_logo.png",
                                  alt: "parsu_logo",
                                },
                              }),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ]
                  },
                },
              ]),
              model: {
                value: _vm.menu,
                callback: function ($$v) {
                  _vm.menu = $$v
                },
                expression: "menu",
              },
            },
            [
              _vm._v(" "),
              _c(
                "v-card",
                [
                  _c(
                    "v-list",
                    [
                      _c(
                        "v-list-item",
                        [
                          _c(
                            "v-list-item-avatar",
                            [
                              _c(
                                "v-avatar",
                                { attrs: { color: "indigo" } },
                                [
                                  _c("v-icon", { attrs: { dark: "" } }, [
                                    _vm._v(" mdi-account-circle "),
                                  ]),
                                ],
                                1
                              ),
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-content",
                            [
                              _c("v-list-item-title", [
                                _vm._v(_vm._s(_vm.user.name)),
                              ]),
                              _vm._v(" "),
                              _c("v-list-item-subtitle", [
                                _vm._v(_vm._s(_vm.role.description)),
                              ]),
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c("v-list-item-action"),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("v-divider"),
                  _vm._v(" "),
                  _c(
                    "v-list",
                    [
                      _c(
                        "v-list-item",
                        {
                          attrs: { to: "/student/settings", link: "" },
                          on: {
                            click: function ($event) {
                              _vm.menu = false
                            },
                          },
                        },
                        [
                          _c(
                            "v-list-item-action",
                            [_c("v-icon", [_vm._v("mdi-cog")])],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-content",
                            [_c("v-list-item-title", [_vm._v(" Settings ")])],
                            1
                          ),
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "v-list-item",
                        { on: { click: _vm.logout } },
                        [
                          _c(
                            "v-list-item-action",
                            [_c("v-icon", [_vm._v("mdi-logout-variant")])],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-content",
                            [_c("v-list-item-title", [_vm._v(" Logout ")])],
                            1
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("v-card-actions", [_c("v-spacer")], 1),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=template&id=54b9a5b2&":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=template&id=54b9a5b2& ***!
  \**************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-navigation-drawer",
    {
      attrs: { width: "220px", app: "" },
      scopedSlots: _vm._u([
        {
          key: "prepend",
          fn: function () {
            return [
              _c(
                "v-list-item",
                {
                  staticClass: "elevation-2",
                  staticStyle: {
                    "max-height": "50px",
                    background:
                      "linear-gradient(to right, #1A237E, #1A237E, #0D47A1)",
                  },
                  attrs: { dark: "" },
                },
                [
                  _c(
                    "v-list-item-avatar",
                    {
                      staticClass: "text-center",
                      staticStyle: { margin: "0", "margin-right": "10px" },
                    },
                    [
                      _c(
                        "v-icon",
                        {
                          staticStyle: {
                            "margin-left": "10px",
                            "padding-right": "10px",
                          },
                          attrs: { dark: "", large: "" },
                        },
                        [
                          _vm._v(
                            "\n                    mdi-account-circle\n                  "
                          ),
                        ]
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-list-item-content",
                    [
                      _c(
                        "v-list-item-title",
                        { staticClass: "caption text-wrap" },
                        [_vm._v(" " + _vm._s(_vm.user.name))]
                      ),
                      _vm._v(" "),
                      _c("v-list-item-subtitle", { staticClass: "caption" }, [
                        _vm._v(_vm._s(_vm.role.description)),
                      ]),
                    ],
                    1
                  ),
                ],
                1
              ),
            ]
          },
          proxy: true,
        },
        {
          key: "append",
          fn: function () {
            return [
              _c(
                "div",
                { staticClass: "pa-2" },
                [
                  _c(
                    "v-card",
                    {
                      staticClass: "overline  lighten-1 text-center ",
                      staticStyle: { background: "transparent" },
                      attrs: { flat: "", tile: "", width: "100%" },
                    },
                    [
                      _c("v-card-text", { staticClass: "caption" }, [
                        _vm._v(
                          "\n            " +
                            _vm._s(new Date().getFullYear()) +
                            " ©\n            "
                        ),
                        _c("strong", [
                          _vm._v("ICTMO, Partido State University"),
                        ]),
                      ]),
                    ],
                    1
                  ),
                ],
                1
              ),
            ]
          },
          proxy: true,
        },
      ]),
      model: {
        value: _vm.drawer,
        callback: function ($$v) {
          _vm.drawer = $$v
        },
        expression: "drawer",
      },
    },
    [
      _vm._v(" "),
      _c("v-divider"),
      _vm._v(" "),
      _c(
        "div",
        {
          directives: [
            {
              name: "slimscroll",
              rawName: "v-slimscroll",
              value: _vm.scrollOptions,
              expression: "scrollOptions",
            },
          ],
        },
        [
          _c(
            "v-list",
            { attrs: { dense: "", shaped: "" } },
            [
              _vm._l(_vm.navigationList, function (item) {
                return [
                  item.heading
                    ? _c(
                        "v-row",
                        { key: item.heading, attrs: { align: "center" } },
                        [
                          _c(
                            "v-col",
                            { attrs: { cols: "4" } },
                            [
                              item.heading
                                ? _c("v-subheader", [
                                    _vm._v(
                                      "\n                " +
                                        _vm._s(item.heading) +
                                        "\n              "
                                    ),
                                  ])
                                : _vm._e(),
                            ],
                            1
                          ),
                        ],
                        1
                      )
                    : item.children
                    ? _c(
                        "v-list-group",
                        {
                          key: item.text,
                          attrs: { "append-icon": "", color: "indigo" },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "activator",
                                fn: function () {
                                  return [
                                    _c(
                                      "v-list-item-action",
                                      {
                                        staticStyle: { "margin-right": "10px" },
                                      },
                                      [
                                        _c("v-icon", [
                                          _vm._v(_vm._s(item.icon)),
                                        ]),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-content",
                                      [
                                        _c(
                                          "v-list-item-title",
                                          {
                                            staticClass:
                                              "caption   text--darken-1 font-weight-medium",
                                          },
                                          [
                                            _vm._v(
                                              "\n                  " +
                                                _vm._s(item.text) +
                                                "\n                "
                                            ),
                                          ]
                                        ),
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "v-list-item-action",
                                      {
                                        staticStyle: { "margin-right": "10px" },
                                      },
                                      [
                                        _c("v-icon", [
                                          _vm._v(
                                            _vm._s(
                                              item.model
                                                ? "mdi-chevron-up"
                                                : item["icon-alt"]
                                            )
                                          ),
                                        ]),
                                      ],
                                      1
                                    ),
                                  ]
                                },
                                proxy: true,
                              },
                            ],
                            null,
                            true
                          ),
                          model: {
                            value: item.model,
                            callback: function ($$v) {
                              _vm.$set(item, "model", $$v)
                            },
                            expression: "item.model",
                          },
                        },
                        [
                          _vm._v(" "),
                          _vm._l(item.children, function (child, i) {
                            return _c(
                              "v-list-item",
                              { key: i, attrs: { to: child.link, link: "" } },
                              [
                                child.icon
                                  ? _c(
                                      "v-list-item-action",
                                      {
                                        staticStyle: { "margin-right": "10px" },
                                      },
                                      [
                                        _c("v-icon", [
                                          _vm._v(_vm._s(child.icon)),
                                        ]),
                                      ],
                                      1
                                    )
                                  : _vm._e(),
                                _vm._v(" "),
                                _c(
                                  "v-list-item-content",
                                  { staticStyle: { "padding-left": "20px" } },
                                  [
                                    _c(
                                      "v-list-item-title",
                                      {
                                        staticClass:
                                          "caption   text--darken-1 font-weight-medium",
                                      },
                                      [
                                        _vm._v(
                                          "\n                  " +
                                            _vm._s(child.text) +
                                            "\n                "
                                        ),
                                      ]
                                    ),
                                  ],
                                  1
                                ),
                              ],
                              1
                            )
                          }),
                        ],
                        2
                      )
                    : _c(
                        "v-list-item",
                        {
                          key: item.text,
                          staticClass: "mb-1",
                          attrs: {
                            to: item.link,
                            link: "",
                            "active-class":
                              "blue--text text--accent-4 font-weight-bold",
                          },
                        },
                        [
                          _c(
                            "v-list-item-action",
                            { staticStyle: { "margin-right": "10px" } },
                            [
                              _c("v-icon", { attrs: { small: "" } }, [
                                _vm._v(_vm._s(item.icon)),
                              ]),
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "v-list-item-content",
                            [
                              _c(
                                "v-list-item-title",
                                {
                                  staticClass:
                                    "caption   text--darken-1 font-weight-medium",
                                },
                                [
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(item.text) +
                                      "\n              "
                                  ),
                                ]
                              ),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                ]
              }),
              _vm._v(" "),
              _c(
                "v-list-item",
                { on: { click: _vm.logout } },
                [
                  _c(
                    "v-list-item-action",
                    { staticStyle: { "margin-right": "10px" } },
                    [
                      _c("v-icon", { attrs: { small: "" } }, [
                        _vm._v("mdi-logout-variant"),
                      ]),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "v-list-item-content",
                    [
                      _c(
                        "v-list-item-title",
                        {
                          staticClass:
                            "caption   text--darken-2 font-weight-medium",
                        },
                        [_vm._v("\n                Logout\n              ")]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            2
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/SignatoryLayout.vue?vue&type=template&id=c576fe32&":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/layout/SignatoryLayout.vue?vue&type=template&id=c576fe32& ***!
  \*********************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c("OSCSNavigationDrawer", {
        attrs: { drawer: _vm.drawer, navigationList: _vm.navigationList },
      }),
      _vm._v(" "),
      _c("OSCSAppBar", { attrs: { openDrawer: _vm.openDrawer } }),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/StudentLayout.vue?vue&type=template&id=4bbd165c&":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/layout/StudentLayout.vue?vue&type=template&id=4bbd165c& ***!
  \*******************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "v-app",
    { attrs: { id: "inspire" } },
    [
      _c("OSCSNavigationDrawer", {
        attrs: { drawer: _vm.drawer, navigationList: _vm.navigationList },
      }),
      _vm._v(" "),
      _c("OSCSAppBar", { attrs: { openDrawer: _vm.openDrawer } }),
      _vm._v(" "),
      _c(
        "v-main",
        { staticClass: "grey lighten-5" },
        [_c("v-container", { attrs: { fluid: "" } }, [_c("router-view")], 1)],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=template&id=0680de76&":
/*!***************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=template&id=0680de76& ***!
  \***************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return !_vm.isPurposeSetup && _vm.isPurposeSetup != null
    ? _c(
        "v-container",
        [
          _c(
            "v-row",
            {
              staticClass: "pa-12",
              attrs: { align: "center ", justify: "center" },
            },
            [
              _c(
                "v-alert",
                {
                  attrs: {
                    icon: "mdi-shield-lock-outline",
                    prominent: "",
                    text: "",
                    type: "info",
                  },
                },
                [
                  _c(
                    "v-row",
                    { staticClass: "pa-3", attrs: { align: "center" } },
                    [
                      _c("v-col", { staticClass: "grow" }, [
                        _c("strong", [_vm._v("No purpose detected!")]),
                        _vm._v(
                          " Go to settings to setup your clearance purpose.\n    \n        "
                        ),
                      ]),
                      _vm._v(" "),
                      _c(
                        "v-col",
                        { staticClass: "shrink" },
                        [
                          _c(
                            "v-btn",
                            {
                              staticClass: "primary",
                              attrs: {
                                href: "/#/student/settings",
                                elevation: "0",
                              },
                            },
                            [_vm._v("Redirect to Settings")]
                          ),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      )
    : _vm.isPurposeSetup && _vm.isPurposeSetup != null
    ? _c(
        "v-container",
        [
          _vm.countApproved == _vm.countSignatory &&
          _vm.countApproved != 0 &&
          _vm.countSignatory != 0 &&
          !_vm.isSubmitted
            ? _c(
                "v-alert",
                {
                  staticStyle: {
                    "border-color":
                      "linear-gradient(to left, #1A237E, #1A237E, #0D47A1) !important",
                  },
                  attrs: {
                    border: "top",
                    "colored-border": "",
                    type: "info",
                    dismissible: "",
                    dense: "",
                    elevation: "0",
                  },
                },
                [
                  _c("span", { staticClass: "font-weight-bold" }, [
                    _vm._v("Note:"),
                  ]),
                  _vm._v(
                    " To complete the proccess. Please click the submit button to send your clearance to the Office of the Registrar.\n    "
                  ),
                ]
              )
            : _vm._e(),
          _vm._v(" "),
          _vm.countApproved == _vm.countSignatory &&
          _vm.countApproved != 0 &&
          _vm.countSignatory != 0 &&
          _vm.isSubmitted
            ? _c(
                "v-alert",
                {
                  attrs: {
                    border: "top",
                    "colored-border": "",
                    type: "success",
                    elevation: "0",
                    dismissible: "",
                    dense: "",
                  },
                },
                [
                  _c("span", { staticClass: "font-weight-bold" }, [
                    _vm._v("Note:"),
                  ]),
                  _vm._v(
                    "You have successfully submitted your clearance to the Office of the Registrar ("
                  ),
                  _c("i", [_vm._v(" " + _vm._s(_vm.dateSubmitted) + " ")]),
                  _vm._v(").\n "),
                ]
              )
            : _vm._e(),
          _vm._v(" "),
          _c(
            "v-card",
            { attrs: { elevation: "0", rounded: "md" } },
            [
              _c(
                "v-card-title",
                {
                  staticClass:
                    "white--text text-uppercase elevation-2 mb-0 pb-0",
                  staticStyle: {
                    background:
                      "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                  },
                },
                [
                  _c("span", { staticClass: "font-italic caption mt-1 pl-2" }),
                  _vm._v(" "),
                  _c("v-spacer"),
                  _vm._v(" "),
                  _c(
                    "span",
                    {
                      staticClass:
                        "font-normal font-weight-medium text-caption",
                    },
                    [_vm._v("Status: ")]
                  ),
                  _vm._v(" "),
                  _vm.countApproved == _vm.countSignatory &&
                  _vm.countApproved != 0 &&
                  _vm.countSignatory != 0 &&
                  _vm.isOpen
                    ? _c(
                        "v-chip",
                        {
                          staticStyle: {
                            "margin-left": "4px",
                            "border-color": "white 2px !important",
                          },
                          attrs: {
                            "text-color": "white",
                            color: "success",
                            "x-small": "",
                          },
                        },
                        [
                          _vm._v(
                            "\n                 Completed\n                "
                          ),
                        ]
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.countApproved != _vm.countSignatory
                    ? _c(
                        "v-chip",
                        {
                          staticStyle: { "margin-left": "4px" },
                          attrs: {
                            "text-color": "white",
                            color: _vm.isOpen == true ? "info" : "red",
                            "x-small": "",
                          },
                        },
                        [
                          _vm._v(
                            "\n                 " +
                              _vm._s(
                                _vm.isOpen == true ? "On-Going" : "Closed"
                              ) +
                              "\n                "
                          ),
                        ]
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.countApproved == _vm.countSignatory &&
                  _vm.countApproved != 0 &&
                  _vm.countSignatory != 0
                    ? _c(
                        "v-btn",
                        {
                          staticClass: "elevation-0 error lighten-1 ml-2",
                          attrs: {
                            loading: _vm.downloadLoading,
                            rounded: "",
                            "x-small": "",
                            dark: "",
                          },
                          on: { click: _vm.generatePDF },
                        },
                        [
                          _c("v-icon", { attrs: { "x-small": "" } }, [
                            _vm._v("mdi-file-pdf"),
                          ]),
                          _vm._v("\n                  Download"),
                        ],
                        1
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  _vm.countApproved == _vm.countSignatory &&
                  _vm.countApproved != 0 &&
                  _vm.countSignatory != 0 &&
                  !_vm.isSubmitted
                    ? _c(
                        "v-btn",
                        {
                          staticClass: "elevation-8 blue ml-2",
                          attrs: {
                            loading: _vm.submitLoading,
                            rounded: "",
                            "x-small": "",
                            dark: "",
                          },
                          on: { click: _vm.submitClearance },
                        },
                        [
                          _c("v-icon", { attrs: { "x-small": "" } }, [
                            _vm._v("mdi-file-send"),
                          ]),
                          _vm._v("\n                  Submit"),
                        ],
                        1
                      )
                    : _vm._e(),
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "v-card-title",
                {
                  staticClass:
                    "white--text text-uppercase elevation-2 pb-1 mt-0 pt-0",
                  staticStyle: {
                    background:
                      "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                  },
                },
                [
                  _c("span", [_vm._v(" Active Clearance ")]),
                  _vm._v(" "),
                  _c("span", { staticClass: "font-italic caption mt-1" }, [
                    _vm._v(" ( " + _vm._s(_vm.purpose) + " )"),
                  ]),
                ]
              ),
              _vm._v(" "),
              _c("v-data-table", {
                staticClass: "px-6 pb-6  mt-4",
                attrs: {
                  headers: _vm.tableHeaders,
                  items: _vm.signatoriesList,
                  "hide-default-footer": "",
                  "item-key": "user",
                },
                scopedSlots: _vm._u([
                  {
                    key: "item.designee",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        _c("div", { staticClass: "font-weight-bold" }, [
                          _vm._v(_vm._s(item.designee)),
                        ]),
                      ]
                    },
                  },
                  {
                    key: "item.clearance_request_status",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        item.status == 1
                          ? [
                              _c(
                                "v-chip",
                                {
                                  staticClass:
                                    "white--text success elevation-1",
                                  attrs: { small: "" },
                                },
                                [
                                  _c(
                                    "v-avatar",
                                    { attrs: { left: "" } },
                                    [
                                      _c(
                                        "v-icon",
                                        {
                                          staticClass: "white--text",
                                          attrs: { small: "" },
                                        },
                                        [_vm._v("mdi-check-circle")]
                                      ),
                                    ],
                                    1
                                  ),
                                  _vm._v(
                                    "\n            Approved on " +
                                      _vm._s(item.approved_at) +
                                      "\n          "
                                  ),
                                ],
                                1
                              ),
                            ]
                          : item.status == 0 || item.status == 2
                          ? [
                              item.requestCount != 0
                                ? [
                                    item.status != 2
                                      ? _c(
                                          "v-chip",
                                          {
                                            attrs: {
                                              "text-color": "white",
                                              color: "cyan",
                                              small: "",
                                            },
                                          },
                                          [
                                            _c(
                                              "v-avatar",
                                              { attrs: { left: "" } },
                                              [
                                                _c(
                                                  "v-icon",
                                                  { attrs: { small: "" } },
                                                  [_vm._v("mdi-information")]
                                                ),
                                              ],
                                              1
                                            ),
                                            _vm._v(
                                              "\n              Pending for Approval\n            "
                                            ),
                                          ],
                                          1
                                        )
                                      : _vm._e(),
                                    _vm._v(" "),
                                    item.deficiencyCount != 0
                                      ? [
                                          _c(
                                            "v-chip",
                                            {
                                              attrs: {
                                                "text-color": "white",
                                                color: "error lighten-1",
                                                small: "",
                                              },
                                              on: {
                                                click: function ($event) {
                                                  return _vm.viewDeficiency(
                                                    item
                                                  )
                                                },
                                              },
                                            },
                                            [
                                              _c(
                                                "v-avatar",
                                                { attrs: { left: "" } },
                                                [
                                                  _c(
                                                    "v-icon",
                                                    { attrs: { small: "" } },
                                                    [
                                                      _vm._v(
                                                        "mdi-clipboard-alert"
                                                      ),
                                                    ]
                                                  ),
                                                ],
                                                1
                                              ),
                                              _vm._v(
                                                "\n                With Deficiency\n              "
                                              ),
                                            ],
                                            1
                                          ),
                                        ]
                                      : _vm._e(),
                                  ]
                                : _vm._e(),
                              _vm._v(" "),
                              item.requestCount == 0
                                ? [
                                    item.deficiencyCount == 0
                                      ? [
                                          _c(
                                            "v-chip",
                                            {
                                              attrs: {
                                                "text-color": "white",
                                                color: "blue-grey lighten-1",
                                                small: "",
                                              },
                                            },
                                            [
                                              _vm._v(
                                                "\n                No deficiency\n              "
                                              ),
                                            ]
                                          ),
                                        ]
                                      : [
                                          _c(
                                            "v-chip",
                                            {
                                              attrs: {
                                                "text-color": "white",
                                                color: "error lighten-1",
                                                small: "",
                                              },
                                              on: {
                                                click: function ($event) {
                                                  return _vm.viewDeficiency(
                                                    item
                                                  )
                                                },
                                              },
                                            },
                                            [
                                              _c(
                                                "v-avatar",
                                                { attrs: { left: "" } },
                                                [
                                                  _c(
                                                    "v-icon",
                                                    { attrs: { small: "" } },
                                                    [
                                                      _vm._v(
                                                        "mdi-clipboard-alert"
                                                      ),
                                                    ]
                                                  ),
                                                ],
                                                1
                                              ),
                                              _vm._v(
                                                "\n                With Deficiency\n              "
                                              ),
                                            ],
                                            1
                                          ),
                                        ],
                                  ]
                                : _vm._e(),
                            ]
                          : _vm._e(),
                      ]
                    },
                  },
                  {
                    key: "item.actions",
                    fn: function (ref) {
                      var item = ref.item
                      return [
                        item.status == 0 && item.designee
                          ? [
                              item.requestCount == 0 &&
                              item.deficiencyCount == 0
                                ? [
                                    _vm.isOpen == true
                                      ? _c(
                                          "v-btn",
                                          {
                                            staticClass: "ma-2",
                                            attrs: {
                                              dark: "",
                                              color: "indigo darken-4",
                                              depressed: "",
                                              small: "",
                                              loading: item.loadingBtn,
                                            },
                                            on: {
                                              click: function ($event) {
                                                return _vm.sendRequest(item)
                                              },
                                            },
                                          },
                                          [_vm._v("Send Request")]
                                        )
                                      : _c(
                                          "v-btn",
                                          {
                                            staticClass: "ma-2",
                                            attrs: {
                                              color: "red darken-4",
                                              depressed: "",
                                              small: "",
                                              dark: "",
                                            },
                                          },
                                          [_vm._v("Clearance is Closed!")]
                                        ),
                                  ]
                                : _vm._e(),
                            ]
                          : _vm._e(),
                        _vm._v(" "),
                        item.deficiencyCount != 0
                          ? [
                              _c(
                                "v-btn",
                                {
                                  staticClass: "ma-2",
                                  attrs: {
                                    color: "error",
                                    depressed: "",
                                    small: "",
                                  },
                                  on: {
                                    click: function ($event) {
                                      return _vm.viewDeficiency(item)
                                    },
                                  },
                                },
                                [_vm._v("View Deficiency")]
                              ),
                            ]
                          : _vm._e(),
                      ]
                    },
                  },
                ]),
              }),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "v-dialog",
            {
              attrs: { scrollable: "", "max-width": "500px" },
              model: {
                value: _vm.deficiencydialog,
                callback: function ($$v) {
                  _vm.deficiencydialog = $$v
                },
                expression: "deficiencydialog",
              },
            },
            [
              _c(
                "v-card",
                [
                  _c(
                    "v-card-title",
                    {
                      staticClass: "headline white--text",
                      staticStyle: {
                        background:
                          "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                      },
                    },
                    [_vm._v("Deficiency List\n          \n        ")]
                  ),
                  _vm._v(" "),
                  _c(
                    "v-card-subtitle",
                    {
                      staticClass: "mb-0 pb-1",
                      staticStyle: {
                        background:
                          "linear-gradient(to left, #1A237E, #1A237E, #0D47A1)",
                      },
                    },
                    [
                      _c(
                        "span",
                        { staticClass: "font-italic subtitle-2 white--text" },
                        [
                          _vm._v(
                            "\n            (Designee: " +
                              _vm._s(_vm.deficiency_designee) +
                              ")"
                          ),
                        ]
                      ),
                    ]
                  ),
                  _vm._v(" "),
                  _c("v-divider"),
                  _vm._v(" "),
                  _c(
                    "v-card-text",
                    { staticStyle: { height: "300px" } },
                    [
                      _c(
                        "v-list",
                        { attrs: { subheader: "", "two-line": "" } },
                        _vm._l(_vm.deficiencies, function (deficiency) {
                          return _c(
                            "v-list-item",
                            { key: deficiency.title },
                            [
                              _c(
                                "v-list-item-avatar",
                                [
                                  deficiency.completed
                                    ? _c(
                                        "v-icon",
                                        {
                                          staticClass: "success lighten-1",
                                          attrs: { dark: "" },
                                        },
                                        [_vm._v(" mdi-check ")]
                                      )
                                    : _c(
                                        "v-icon",
                                        {
                                          staticClass: "error lighten-1",
                                          attrs: { dark: "" },
                                        },
                                        [_vm._v(" mdi-alert ")]
                                      ),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-content",
                                [
                                  _c(
                                    "v-list-item-title",
                                    {
                                      staticClass: "small",
                                      attrs: { small: "" },
                                    },
                                    [_vm._v(_vm._s(deficiency.title))]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "v-list-item-subtitle",
                                    {
                                      staticClass: "subtitle-2",
                                      attrs: { small: "" },
                                    },
                                    [_vm._v("*" + _vm._s(deficiency.note))]
                                  ),
                                  _vm._v(" "),
                                  _c("v-list-item-subtitle"),
                                ],
                                1
                              ),
                              _vm._v(" "),
                              _c(
                                "v-list-item-action",
                                [
                                  _c("v-list-item-action-text", [
                                    _vm._v(
                                      _vm._s(
                                        _vm._f("moment")(
                                          deficiency.updated_at,
                                          "from",
                                          "now"
                                        )
                                      )
                                    ),
                                  ]),
                                  _vm._v(" "),
                                  deficiency.completed
                                    ? _c(
                                        "v-chip",
                                        {
                                          attrs: {
                                            "text-color": "white",
                                            color: "success",
                                            "x-small": "",
                                          },
                                        },
                                        [
                                          _vm._v(
                                            "\n                  Completed\n                "
                                          ),
                                        ]
                                      )
                                    : _c(
                                        "v-chip",
                                        {
                                          attrs: {
                                            "text-color": "white",
                                            color: "warning",
                                            "x-small": "",
                                          },
                                        },
                                        [
                                          _vm._v(
                                            "\n                  Pending\n                "
                                          ),
                                        ]
                                      ),
                                ],
                                1
                              ),
                            ],
                            1
                          )
                        }),
                        1
                      ),
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("v-divider"),
                  _vm._v(" "),
                  _c(
                    "v-card-actions",
                    [
                      _c("v-spacer"),
                      _vm._v(" "),
                      _c(
                        "v-btn",
                        {
                          attrs: { color: "green darken-1", text: "" },
                          on: {
                            click: function ($event) {
                              _vm.deficiencydialog = false
                            },
                          },
                        },
                        [_vm._v("Close")]
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      )
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vuetify_dist_vuetify_min_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vuetify/dist/vuetify.min.css */ "./node_modules/vuetify/dist/vuetify.min.css");
/* harmony import */ var vuetify_dist_vuetify_min_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vuetify_dist_vuetify_min_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mdi_font_css_materialdesignicons_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mdi/font/css/materialdesignicons.css */ "./node_modules/@mdi/font/css/materialdesignicons.css");
/* harmony import */ var _mdi_font_css_materialdesignicons_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_mdi_font_css_materialdesignicons_css__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _vuetify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vuetify */ "./resources/js/vuetify.js");
/* harmony import */ var _router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./router */ "./resources/js/router.js");
/* harmony import */ var _components_AppComponent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/AppComponent */ "./resources/js/components/AppComponent.vue");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./store */ "./resources/js/store/index.js");
/* harmony import */ var vue_slimscroll__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vue-slimscroll */ "./node_modules/vue-slimscroll/index.js");
/* harmony import */ var vue_slimscroll__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(vue_slimscroll__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var vue_axios__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vue-axios */ "./node_modules/vue-axios/dist/vue-axios.esm.min.js");
/* harmony import */ var vue_social_auth__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vue-social-auth */ "./node_modules/vue-social-auth/dist/vue-social-auth.es2017.js");
/* harmony import */ var v_clipboard__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! v-clipboard */ "./node_modules/v-clipboard/dist/index.min.js");
/* harmony import */ var v_clipboard__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(v_clipboard__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var particles_bg_vue__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! particles-bg-vue */ "./node_modules/particles-bg-vue/src/particles-bg/index.js");
/* harmony import */ var _vue_composition_api__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @vue/composition-api */ "./node_modules/@vue/composition-api/dist/vue-composition-api.mjs");
/* harmony import */ var vue_apexcharts__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! vue-apexcharts */ "./node_modules/vue-apexcharts/dist/vue-apexcharts.js");
/* harmony import */ var vue_apexcharts__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(vue_apexcharts__WEBPACK_IMPORTED_MODULE_13__);
/**
 * First we will load all of this project's JavaScript dependencies which
 * includes Vue and other libraries. It is a great starting point when
 * building robust, powerful web applications using Vue and Laravel.
 */
__webpack_require__(/*! ./bootstrap */ "./resources/js/bootstrap.js");

window.Vue = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.common.js");














Vue.use(vue_apexcharts__WEBPACK_IMPORTED_MODULE_13___default.a);
Vue.component('apexchart', vue_apexcharts__WEBPACK_IMPORTED_MODULE_13___default.a);
Vue.use(_vue_composition_api__WEBPACK_IMPORTED_MODULE_12__["default"]);
Vue.use(v_clipboard__WEBPACK_IMPORTED_MODULE_10___default.a);
Vue.use(vue_axios__WEBPACK_IMPORTED_MODULE_8__["default"], axios__WEBPACK_IMPORTED_MODULE_7___default.a);
Vue.use(particles_bg_vue__WEBPACK_IMPORTED_MODULE_11__["default"]);
Vue.use(vue_social_auth__WEBPACK_IMPORTED_MODULE_9__["default"], {
  providers: {
    google: {
      clientId: '1076053778325-rnovinsnkj7eo40hn1jqa8qu8spg3khq.apps.googleusercontent.com',
      redirectUri: 'http://oscs.parsu.edu.ph' // Your client app URL

    }
  }
});
Vue.use(vue_slimscroll__WEBPACK_IMPORTED_MODULE_6___default.a);
Vue.use(__webpack_require__(/*! vue-moment */ "./node_modules/vue-moment/dist/vue-moment.js"));
new Vue({
  el: '#app',
  router: _router__WEBPACK_IMPORTED_MODULE_3__["default"],
  vuetify: _vuetify__WEBPACK_IMPORTED_MODULE_2__["default"],
  store: _store__WEBPACK_IMPORTED_MODULE_5__["default"],
  components: {
    'app': _components_AppComponent__WEBPACK_IMPORTED_MODULE_4__["default"]
  }
});

/***/ }),

/***/ "./resources/js/bootstrap.js":
/*!***********************************!*\
  !*** ./resources/js/bootstrap.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

window._ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/**
 * We'll load jQuery and the Bootstrap jQuery plugin which provides support
 * for JavaScript based Bootstrap features such as modals and tabs. This
 * code may be modified to fit the specific needs of your application.
 */

/**
 * We'll load the axios HTTP library which allows us to easily issue requests
 * to our Laravel back-end. This library automatically handles sending the
 * CSRF token as a header based on the value of the "XSRF" token cookie.
 */

window.axios = __webpack_require__(/*! axios */ "./node_modules/axios/index.js"); // window.axios.defaults.xsrfHeaderName = 'X-XSRF-TOKEN2'; window.axios.defaults.xsrfCookieName = 'XSRF-TOKEN2';

window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
/**
 * Echo exposes an expressive API for subscribing to channels and listening
 * for events that are broadcast by Laravel. Echo and event broadcasting
 * allows your team to easily build robust real-time web applications.
 */
// import Echo from 'laravel-echo';
// window.Pusher = require('pusher-js');
// window.Echo = new Echo({
//     broadcaster: 'pusher',
//     key: process.env.MIX_PUSHER_APP_KEY,
//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,
//     forceTLS: true
// });

/***/ }),

/***/ "./resources/js/charts/ApexBarChart.vue":
/*!**********************************************!*\
  !*** ./resources/js/charts/ApexBarChart.vue ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ApexBarChart_vue_vue_type_template_id_123211d9___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ApexBarChart.vue?vue&type=template&id=123211d9& */ "./resources/js/charts/ApexBarChart.vue?vue&type=template&id=123211d9&");
/* harmony import */ var _ApexBarChart_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ApexBarChart.vue?vue&type=script&lang=js& */ "./resources/js/charts/ApexBarChart.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ApexBarChart_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ApexBarChart_vue_vue_type_template_id_123211d9___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ApexBarChart_vue_vue_type_template_id_123211d9___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/charts/ApexBarChart.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/charts/ApexBarChart.vue?vue&type=script&lang=js&":
/*!***********************************************************************!*\
  !*** ./resources/js/charts/ApexBarChart.vue?vue&type=script&lang=js& ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ApexBarChart_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./ApexBarChart.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/charts/ApexBarChart.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ApexBarChart_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/charts/ApexBarChart.vue?vue&type=template&id=123211d9&":
/*!*****************************************************************************!*\
  !*** ./resources/js/charts/ApexBarChart.vue?vue&type=template&id=123211d9& ***!
  \*****************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ApexBarChart_vue_vue_type_template_id_123211d9___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./ApexBarChart.vue?vue&type=template&id=123211d9& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/charts/ApexBarChart.vue?vue&type=template&id=123211d9&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ApexBarChart_vue_vue_type_template_id_123211d9___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ApexBarChart_vue_vue_type_template_id_123211d9___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/ActiveClearanceComponent.vue":
/*!**************************************************************!*\
  !*** ./resources/js/components/ActiveClearanceComponent.vue ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ActiveClearanceComponent_vue_vue_type_template_id_50ee3cd2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ActiveClearanceComponent.vue?vue&type=template&id=50ee3cd2& */ "./resources/js/components/ActiveClearanceComponent.vue?vue&type=template&id=50ee3cd2&");
/* harmony import */ var _ActiveClearanceComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ActiveClearanceComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/ActiveClearanceComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ActiveClearanceComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ActiveClearanceComponent_vue_vue_type_template_id_50ee3cd2___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ActiveClearanceComponent_vue_vue_type_template_id_50ee3cd2___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/ActiveClearanceComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/ActiveClearanceComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************!*\
  !*** ./resources/js/components/ActiveClearanceComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./ActiveClearanceComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/ActiveClearanceComponent.vue?vue&type=template&id=50ee3cd2&":
/*!*********************************************************************************************!*\
  !*** ./resources/js/components/ActiveClearanceComponent.vue?vue&type=template&id=50ee3cd2& ***!
  \*********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponent_vue_vue_type_template_id_50ee3cd2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./ActiveClearanceComponent.vue?vue&type=template&id=50ee3cd2& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponent.vue?vue&type=template&id=50ee3cd2&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponent_vue_vue_type_template_id_50ee3cd2___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponent_vue_vue_type_template_id_50ee3cd2___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/ActiveClearanceComponentLHS.vue":
/*!*****************************************************************!*\
  !*** ./resources/js/components/ActiveClearanceComponentLHS.vue ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ActiveClearanceComponentLHS_vue_vue_type_template_id_43052e16___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ActiveClearanceComponentLHS.vue?vue&type=template&id=43052e16& */ "./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=template&id=43052e16&");
/* harmony import */ var _ActiveClearanceComponentLHS_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ActiveClearanceComponentLHS.vue?vue&type=script&lang=js& */ "./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ActiveClearanceComponentLHS_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ActiveClearanceComponentLHS_vue_vue_type_template_id_43052e16___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ActiveClearanceComponentLHS_vue_vue_type_template_id_43052e16___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/ActiveClearanceComponentLHS.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=script&lang=js&":
/*!******************************************************************************************!*\
  !*** ./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponentLHS_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./ActiveClearanceComponentLHS.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponentLHS_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=template&id=43052e16&":
/*!************************************************************************************************!*\
  !*** ./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=template&id=43052e16& ***!
  \************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponentLHS_vue_vue_type_template_id_43052e16___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./ActiveClearanceComponentLHS.vue?vue&type=template&id=43052e16& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponentLHS.vue?vue&type=template&id=43052e16&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponentLHS_vue_vue_type_template_id_43052e16___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponentLHS_vue_vue_type_template_id_43052e16___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/ActiveClearanceComponentSGS.vue":
/*!*****************************************************************!*\
  !*** ./resources/js/components/ActiveClearanceComponentSGS.vue ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ActiveClearanceComponentSGS_vue_vue_type_template_id_4f142f1d___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ActiveClearanceComponentSGS.vue?vue&type=template&id=4f142f1d& */ "./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=template&id=4f142f1d&");
/* harmony import */ var _ActiveClearanceComponentSGS_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ActiveClearanceComponentSGS.vue?vue&type=script&lang=js& */ "./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ActiveClearanceComponentSGS_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ActiveClearanceComponentSGS_vue_vue_type_template_id_4f142f1d___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ActiveClearanceComponentSGS_vue_vue_type_template_id_4f142f1d___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/ActiveClearanceComponentSGS.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=script&lang=js&":
/*!******************************************************************************************!*\
  !*** ./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponentSGS_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./ActiveClearanceComponentSGS.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponentSGS_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=template&id=4f142f1d&":
/*!************************************************************************************************!*\
  !*** ./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=template&id=4f142f1d& ***!
  \************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponentSGS_vue_vue_type_template_id_4f142f1d___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./ActiveClearanceComponentSGS.vue?vue&type=template&id=4f142f1d& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ActiveClearanceComponentSGS.vue?vue&type=template&id=4f142f1d&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponentSGS_vue_vue_type_template_id_4f142f1d___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ActiveClearanceComponentSGS_vue_vue_type_template_id_4f142f1d___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/AppComponent.vue":
/*!**************************************************!*\
  !*** ./resources/js/components/AppComponent.vue ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _AppComponent_vue_vue_type_template_id_cd268472___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AppComponent.vue?vue&type=template&id=cd268472& */ "./resources/js/components/AppComponent.vue?vue&type=template&id=cd268472&");
/* harmony import */ var _AppComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AppComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/AppComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _AppComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _AppComponent_vue_vue_type_template_id_cd268472___WEBPACK_IMPORTED_MODULE_0__["render"],
  _AppComponent_vue_vue_type_template_id_cd268472___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/AppComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/AppComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************!*\
  !*** ./resources/js/components/AppComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AppComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./AppComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/AppComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AppComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/AppComponent.vue?vue&type=template&id=cd268472&":
/*!*********************************************************************************!*\
  !*** ./resources/js/components/AppComponent.vue?vue&type=template&id=cd268472& ***!
  \*********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AppComponent_vue_vue_type_template_id_cd268472___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./AppComponent.vue?vue&type=template&id=cd268472& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/AppComponent.vue?vue&type=template&id=cd268472&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AppComponent_vue_vue_type_template_id_cd268472___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AppComponent_vue_vue_type_template_id_cd268472___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/ClearanceListComponent.vue":
/*!************************************************************!*\
  !*** ./resources/js/components/ClearanceListComponent.vue ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearanceListComponent_vue_vue_type_template_id_4bae00ee___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearanceListComponent.vue?vue&type=template&id=4bae00ee& */ "./resources/js/components/ClearanceListComponent.vue?vue&type=template&id=4bae00ee&");
/* harmony import */ var _ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearanceListComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/ClearanceListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearanceListComponent_vue_vue_type_template_id_4bae00ee___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearanceListComponent_vue_vue_type_template_id_4bae00ee___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/ClearanceListComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/ClearanceListComponent.vue?vue&type=script&lang=js&":
/*!*************************************************************************************!*\
  !*** ./resources/js/components/ClearanceListComponent.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceListComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearanceListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/ClearanceListComponent.vue?vue&type=template&id=4bae00ee&":
/*!*******************************************************************************************!*\
  !*** ./resources/js/components/ClearanceListComponent.vue?vue&type=template&id=4bae00ee& ***!
  \*******************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_template_id_4bae00ee___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceListComponent.vue?vue&type=template&id=4bae00ee& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearanceListComponent.vue?vue&type=template&id=4bae00ee&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_template_id_4bae00ee___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_template_id_4bae00ee___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/ClearanceRequestsComponent.vue":
/*!****************************************************************!*\
  !*** ./resources/js/components/ClearanceRequestsComponent.vue ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearanceRequestsComponent_vue_vue_type_template_id_1d0bdc08___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearanceRequestsComponent.vue?vue&type=template&id=1d0bdc08& */ "./resources/js/components/ClearanceRequestsComponent.vue?vue&type=template&id=1d0bdc08&");
/* harmony import */ var _ClearanceRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearanceRequestsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/ClearanceRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearanceRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearanceRequestsComponent_vue_vue_type_template_id_1d0bdc08___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearanceRequestsComponent_vue_vue_type_template_id_1d0bdc08___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/ClearanceRequestsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/ClearanceRequestsComponent.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************!*\
  !*** ./resources/js/components/ClearanceRequestsComponent.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceRequestsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearanceRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/ClearanceRequestsComponent.vue?vue&type=template&id=1d0bdc08&":
/*!***********************************************************************************************!*\
  !*** ./resources/js/components/ClearanceRequestsComponent.vue?vue&type=template&id=1d0bdc08& ***!
  \***********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceRequestsComponent_vue_vue_type_template_id_1d0bdc08___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceRequestsComponent.vue?vue&type=template&id=1d0bdc08& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearanceRequestsComponent.vue?vue&type=template&id=1d0bdc08&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceRequestsComponent_vue_vue_type_template_id_1d0bdc08___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceRequestsComponent_vue_vue_type_template_id_1d0bdc08___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/ClearedClearancesComponent.vue":
/*!****************************************************************!*\
  !*** ./resources/js/components/ClearedClearancesComponent.vue ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearedClearancesComponent_vue_vue_type_template_id_0d6c8b76___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearedClearancesComponent.vue?vue&type=template&id=0d6c8b76& */ "./resources/js/components/ClearedClearancesComponent.vue?vue&type=template&id=0d6c8b76&");
/* harmony import */ var _ClearedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearedClearancesComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/ClearedClearancesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearedClearancesComponent_vue_vue_type_template_id_0d6c8b76___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearedClearancesComponent_vue_vue_type_template_id_0d6c8b76___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/ClearedClearancesComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/ClearedClearancesComponent.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************!*\
  !*** ./resources/js/components/ClearedClearancesComponent.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./ClearedClearancesComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearedClearancesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/ClearedClearancesComponent.vue?vue&type=template&id=0d6c8b76&":
/*!***********************************************************************************************!*\
  !*** ./resources/js/components/ClearedClearancesComponent.vue?vue&type=template&id=0d6c8b76& ***!
  \***********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearedClearancesComponent_vue_vue_type_template_id_0d6c8b76___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./ClearedClearancesComponent.vue?vue&type=template&id=0d6c8b76& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/ClearedClearancesComponent.vue?vue&type=template&id=0d6c8b76&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearedClearancesComponent_vue_vue_type_template_id_0d6c8b76___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearedClearancesComponent_vue_vue_type_template_id_0d6c8b76___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/DeficiencyListComponent.vue":
/*!*************************************************************!*\
  !*** ./resources/js/components/DeficiencyListComponent.vue ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _DeficiencyListComponent_vue_vue_type_template_id_cee6eaca___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DeficiencyListComponent.vue?vue&type=template&id=cee6eaca& */ "./resources/js/components/DeficiencyListComponent.vue?vue&type=template&id=cee6eaca&");
/* harmony import */ var _DeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DeficiencyListComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/DeficiencyListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _DeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _DeficiencyListComponent_vue_vue_type_template_id_cee6eaca___WEBPACK_IMPORTED_MODULE_0__["render"],
  _DeficiencyListComponent_vue_vue_type_template_id_cee6eaca___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/DeficiencyListComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/DeficiencyListComponent.vue?vue&type=script&lang=js&":
/*!**************************************************************************************!*\
  !*** ./resources/js/components/DeficiencyListComponent.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./DeficiencyListComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/DeficiencyListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/DeficiencyListComponent.vue?vue&type=template&id=cee6eaca&":
/*!********************************************************************************************!*\
  !*** ./resources/js/components/DeficiencyListComponent.vue?vue&type=template&id=cee6eaca& ***!
  \********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DeficiencyListComponent_vue_vue_type_template_id_cee6eaca___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./DeficiencyListComponent.vue?vue&type=template&id=cee6eaca& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/DeficiencyListComponent.vue?vue&type=template&id=cee6eaca&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DeficiencyListComponent_vue_vue_type_template_id_cee6eaca___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DeficiencyListComponent_vue_vue_type_template_id_cee6eaca___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/RegistrarDeficiencyListComponent.vue":
/*!**********************************************************************!*\
  !*** ./resources/js/components/RegistrarDeficiencyListComponent.vue ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _RegistrarDeficiencyListComponent_vue_vue_type_template_id_813ee318___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RegistrarDeficiencyListComponent.vue?vue&type=template&id=813ee318& */ "./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=template&id=813ee318&");
/* harmony import */ var _RegistrarDeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RegistrarDeficiencyListComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _RegistrarDeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _RegistrarDeficiencyListComponent_vue_vue_type_template_id_813ee318___WEBPACK_IMPORTED_MODULE_0__["render"],
  _RegistrarDeficiencyListComponent_vue_vue_type_template_id_813ee318___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/RegistrarDeficiencyListComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************!*\
  !*** ./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_RegistrarDeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./RegistrarDeficiencyListComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_RegistrarDeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=template&id=813ee318&":
/*!*****************************************************************************************************!*\
  !*** ./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=template&id=813ee318& ***!
  \*****************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_RegistrarDeficiencyListComponent_vue_vue_type_template_id_813ee318___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./RegistrarDeficiencyListComponent.vue?vue&type=template&id=813ee318& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/RegistrarDeficiencyListComponent.vue?vue&type=template&id=813ee318&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_RegistrarDeficiencyListComponent_vue_vue_type_template_id_813ee318___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_RegistrarDeficiencyListComponent_vue_vue_type_template_id_813ee318___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/SIASAccountComponent.vue":
/*!**********************************************************!*\
  !*** ./resources/js/components/SIASAccountComponent.vue ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SIASAccountComponent_vue_vue_type_template_id_0be22f43___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SIASAccountComponent.vue?vue&type=template&id=0be22f43& */ "./resources/js/components/SIASAccountComponent.vue?vue&type=template&id=0be22f43&");
/* harmony import */ var _SIASAccountComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SIASAccountComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/SIASAccountComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _SIASAccountComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _SIASAccountComponent_vue_vue_type_template_id_0be22f43___WEBPACK_IMPORTED_MODULE_0__["render"],
  _SIASAccountComponent_vue_vue_type_template_id_0be22f43___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/SIASAccountComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/SIASAccountComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************!*\
  !*** ./resources/js/components/SIASAccountComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SIASAccountComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./SIASAccountComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SIASAccountComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SIASAccountComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/SIASAccountComponent.vue?vue&type=template&id=0be22f43&":
/*!*****************************************************************************************!*\
  !*** ./resources/js/components/SIASAccountComponent.vue?vue&type=template&id=0be22f43& ***!
  \*****************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SIASAccountComponent_vue_vue_type_template_id_0be22f43___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./SIASAccountComponent.vue?vue&type=template&id=0be22f43& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SIASAccountComponent.vue?vue&type=template&id=0be22f43&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SIASAccountComponent_vue_vue_type_template_id_0be22f43___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SIASAccountComponent_vue_vue_type_template_id_0be22f43___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/SettingsComponent.vue":
/*!*******************************************************!*\
  !*** ./resources/js/components/SettingsComponent.vue ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SettingsComponent_vue_vue_type_template_id_67fba83f___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SettingsComponent.vue?vue&type=template&id=67fba83f& */ "./resources/js/components/SettingsComponent.vue?vue&type=template&id=67fba83f&");
/* harmony import */ var _SettingsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SettingsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/SettingsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _SettingsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _SettingsComponent_vue_vue_type_template_id_67fba83f___WEBPACK_IMPORTED_MODULE_0__["render"],
  _SettingsComponent_vue_vue_type_template_id_67fba83f___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/SettingsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/SettingsComponent.vue?vue&type=script&lang=js&":
/*!********************************************************************************!*\
  !*** ./resources/js/components/SettingsComponent.vue?vue&type=script&lang=js& ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SettingsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./SettingsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SettingsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SettingsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/SettingsComponent.vue?vue&type=template&id=67fba83f&":
/*!**************************************************************************************!*\
  !*** ./resources/js/components/SettingsComponent.vue?vue&type=template&id=67fba83f& ***!
  \**************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SettingsComponent_vue_vue_type_template_id_67fba83f___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./SettingsComponent.vue?vue&type=template&id=67fba83f& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SettingsComponent.vue?vue&type=template&id=67fba83f&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SettingsComponent_vue_vue_type_template_id_67fba83f___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SettingsComponent_vue_vue_type_template_id_67fba83f___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/StudentListComponent.vue":
/*!**********************************************************!*\
  !*** ./resources/js/components/StudentListComponent.vue ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _StudentListComponent_vue_vue_type_template_id_4986d26f___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StudentListComponent.vue?vue&type=template&id=4986d26f& */ "./resources/js/components/StudentListComponent.vue?vue&type=template&id=4986d26f&");
/* harmony import */ var _StudentListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StudentListComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/StudentListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _StudentListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _StudentListComponent_vue_vue_type_template_id_4986d26f___WEBPACK_IMPORTED_MODULE_0__["render"],
  _StudentListComponent_vue_vue_type_template_id_4986d26f___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/StudentListComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/StudentListComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************!*\
  !*** ./resources/js/components/StudentListComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./StudentListComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/StudentListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/StudentListComponent.vue?vue&type=template&id=4986d26f&":
/*!*****************************************************************************************!*\
  !*** ./resources/js/components/StudentListComponent.vue?vue&type=template&id=4986d26f& ***!
  \*****************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentListComponent_vue_vue_type_template_id_4986d26f___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./StudentListComponent.vue?vue&type=template&id=4986d26f& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/StudentListComponent.vue?vue&type=template&id=4986d26f&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentListComponent_vue_vue_type_template_id_4986d26f___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentListComponent_vue_vue_type_template_id_4986d26f___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/SubmittedClearancesComponent.vue":
/*!******************************************************************!*\
  !*** ./resources/js/components/SubmittedClearancesComponent.vue ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SubmittedClearancesComponent_vue_vue_type_template_id_eda91954___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SubmittedClearancesComponent.vue?vue&type=template&id=eda91954& */ "./resources/js/components/SubmittedClearancesComponent.vue?vue&type=template&id=eda91954&");
/* harmony import */ var _SubmittedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SubmittedClearancesComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/SubmittedClearancesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _SubmittedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _SubmittedClearancesComponent_vue_vue_type_template_id_eda91954___WEBPACK_IMPORTED_MODULE_0__["render"],
  _SubmittedClearancesComponent_vue_vue_type_template_id_eda91954___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/SubmittedClearancesComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/SubmittedClearancesComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************!*\
  !*** ./resources/js/components/SubmittedClearancesComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SubmittedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib??ref--4-0!../../../node_modules/vue-loader/lib??vue-loader-options!./SubmittedClearancesComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SubmittedClearancesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SubmittedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/SubmittedClearancesComponent.vue?vue&type=template&id=eda91954&":
/*!*************************************************************************************************!*\
  !*** ./resources/js/components/SubmittedClearancesComponent.vue?vue&type=template&id=eda91954& ***!
  \*************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SubmittedClearancesComponent_vue_vue_type_template_id_eda91954___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib??vue-loader-options!./SubmittedClearancesComponent.vue?vue&type=template&id=eda91954& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/SubmittedClearancesComponent.vue?vue&type=template&id=eda91954&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SubmittedClearancesComponent_vue_vue_type_template_id_eda91954___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SubmittedClearancesComponent_vue_vue_type_template_id_eda91954___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/CampusesComponent.vue":
/*!*************************************************************!*\
  !*** ./resources/js/components/admin/CampusesComponent.vue ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _CampusesComponent_vue_vue_type_template_id_07118655___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CampusesComponent.vue?vue&type=template&id=07118655& */ "./resources/js/components/admin/CampusesComponent.vue?vue&type=template&id=07118655&");
/* harmony import */ var _CampusesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CampusesComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/CampusesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _CampusesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _CampusesComponent_vue_vue_type_template_id_07118655___WEBPACK_IMPORTED_MODULE_0__["render"],
  _CampusesComponent_vue_vue_type_template_id_07118655___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/CampusesComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/CampusesComponent.vue?vue&type=script&lang=js&":
/*!**************************************************************************************!*\
  !*** ./resources/js/components/admin/CampusesComponent.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CampusesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./CampusesComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/CampusesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CampusesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/CampusesComponent.vue?vue&type=template&id=07118655&":
/*!********************************************************************************************!*\
  !*** ./resources/js/components/admin/CampusesComponent.vue?vue&type=template&id=07118655& ***!
  \********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CampusesComponent_vue_vue_type_template_id_07118655___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./CampusesComponent.vue?vue&type=template&id=07118655& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/CampusesComponent.vue?vue&type=template&id=07118655&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CampusesComponent_vue_vue_type_template_id_07118655___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CampusesComponent_vue_vue_type_template_id_07118655___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/CollegesComponent.vue":
/*!*************************************************************!*\
  !*** ./resources/js/components/admin/CollegesComponent.vue ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _CollegesComponent_vue_vue_type_template_id_34850ec6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CollegesComponent.vue?vue&type=template&id=34850ec6& */ "./resources/js/components/admin/CollegesComponent.vue?vue&type=template&id=34850ec6&");
/* harmony import */ var _CollegesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CollegesComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/CollegesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _CollegesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _CollegesComponent_vue_vue_type_template_id_34850ec6___WEBPACK_IMPORTED_MODULE_0__["render"],
  _CollegesComponent_vue_vue_type_template_id_34850ec6___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/CollegesComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/CollegesComponent.vue?vue&type=script&lang=js&":
/*!**************************************************************************************!*\
  !*** ./resources/js/components/admin/CollegesComponent.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CollegesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./CollegesComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/CollegesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CollegesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/CollegesComponent.vue?vue&type=template&id=34850ec6&":
/*!********************************************************************************************!*\
  !*** ./resources/js/components/admin/CollegesComponent.vue?vue&type=template&id=34850ec6& ***!
  \********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CollegesComponent_vue_vue_type_template_id_34850ec6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./CollegesComponent.vue?vue&type=template&id=34850ec6& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/CollegesComponent.vue?vue&type=template&id=34850ec6&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CollegesComponent_vue_vue_type_template_id_34850ec6___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CollegesComponent_vue_vue_type_template_id_34850ec6___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/DashboardComponent.vue":
/*!**************************************************************!*\
  !*** ./resources/js/components/admin/DashboardComponent.vue ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _DashboardComponent_vue_vue_type_template_id_6522ea74___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DashboardComponent.vue?vue&type=template&id=6522ea74& */ "./resources/js/components/admin/DashboardComponent.vue?vue&type=template&id=6522ea74&");
/* harmony import */ var _DashboardComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DashboardComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/DashboardComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _DashboardComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _DashboardComponent_vue_vue_type_template_id_6522ea74___WEBPACK_IMPORTED_MODULE_0__["render"],
  _DashboardComponent_vue_vue_type_template_id_6522ea74___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/DashboardComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/DashboardComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************!*\
  !*** ./resources/js/components/admin/DashboardComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./DashboardComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/DashboardComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/DashboardComponent.vue?vue&type=template&id=6522ea74&":
/*!*********************************************************************************************!*\
  !*** ./resources/js/components/admin/DashboardComponent.vue?vue&type=template&id=6522ea74& ***!
  \*********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponent_vue_vue_type_template_id_6522ea74___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./DashboardComponent.vue?vue&type=template&id=6522ea74& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/DashboardComponent.vue?vue&type=template&id=6522ea74&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponent_vue_vue_type_template_id_6522ea74___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponent_vue_vue_type_template_id_6522ea74___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/DashboardComponentt.vue":
/*!***************************************************************!*\
  !*** ./resources/js/components/admin/DashboardComponentt.vue ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _DashboardComponentt_vue_vue_type_template_id_42f41cb0___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DashboardComponentt.vue?vue&type=template&id=42f41cb0& */ "./resources/js/components/admin/DashboardComponentt.vue?vue&type=template&id=42f41cb0&");
/* harmony import */ var _DashboardComponentt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DashboardComponentt.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/DashboardComponentt.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _DashboardComponentt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _DashboardComponentt_vue_vue_type_template_id_42f41cb0___WEBPACK_IMPORTED_MODULE_0__["render"],
  _DashboardComponentt_vue_vue_type_template_id_42f41cb0___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/DashboardComponentt.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/DashboardComponentt.vue?vue&type=script&lang=js&":
/*!****************************************************************************************!*\
  !*** ./resources/js/components/admin/DashboardComponentt.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponentt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./DashboardComponentt.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/DashboardComponentt.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponentt_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/DashboardComponentt.vue?vue&type=template&id=42f41cb0&":
/*!**********************************************************************************************!*\
  !*** ./resources/js/components/admin/DashboardComponentt.vue?vue&type=template&id=42f41cb0& ***!
  \**********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponentt_vue_vue_type_template_id_42f41cb0___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./DashboardComponentt.vue?vue&type=template&id=42f41cb0& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/DashboardComponentt.vue?vue&type=template&id=42f41cb0&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponentt_vue_vue_type_template_id_42f41cb0___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponentt_vue_vue_type_template_id_42f41cb0___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/GraduationsComponent.vue":
/*!****************************************************************!*\
  !*** ./resources/js/components/admin/GraduationsComponent.vue ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _GraduationsComponent_vue_vue_type_template_id_cf088dba___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GraduationsComponent.vue?vue&type=template&id=cf088dba& */ "./resources/js/components/admin/GraduationsComponent.vue?vue&type=template&id=cf088dba&");
/* harmony import */ var _GraduationsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GraduationsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/GraduationsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _GraduationsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _GraduationsComponent_vue_vue_type_template_id_cf088dba___WEBPACK_IMPORTED_MODULE_0__["render"],
  _GraduationsComponent_vue_vue_type_template_id_cf088dba___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/GraduationsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/GraduationsComponent.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************!*\
  !*** ./resources/js/components/admin/GraduationsComponent.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GraduationsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./GraduationsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/GraduationsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GraduationsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/GraduationsComponent.vue?vue&type=template&id=cf088dba&":
/*!***********************************************************************************************!*\
  !*** ./resources/js/components/admin/GraduationsComponent.vue?vue&type=template&id=cf088dba& ***!
  \***********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_GraduationsComponent_vue_vue_type_template_id_cf088dba___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./GraduationsComponent.vue?vue&type=template&id=cf088dba& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/GraduationsComponent.vue?vue&type=template&id=cf088dba&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_GraduationsComponent_vue_vue_type_template_id_cf088dba___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_GraduationsComponent_vue_vue_type_template_id_cf088dba___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/ProgramsComponent.vue":
/*!*************************************************************!*\
  !*** ./resources/js/components/admin/ProgramsComponent.vue ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ProgramsComponent_vue_vue_type_template_id_8135ae1a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ProgramsComponent.vue?vue&type=template&id=8135ae1a& */ "./resources/js/components/admin/ProgramsComponent.vue?vue&type=template&id=8135ae1a&");
/* harmony import */ var _ProgramsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ProgramsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/ProgramsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ProgramsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ProgramsComponent_vue_vue_type_template_id_8135ae1a___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ProgramsComponent_vue_vue_type_template_id_8135ae1a___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/ProgramsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/ProgramsComponent.vue?vue&type=script&lang=js&":
/*!**************************************************************************************!*\
  !*** ./resources/js/components/admin/ProgramsComponent.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgramsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ProgramsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/ProgramsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgramsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/ProgramsComponent.vue?vue&type=template&id=8135ae1a&":
/*!********************************************************************************************!*\
  !*** ./resources/js/components/admin/ProgramsComponent.vue?vue&type=template&id=8135ae1a& ***!
  \********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgramsComponent_vue_vue_type_template_id_8135ae1a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ProgramsComponent.vue?vue&type=template&id=8135ae1a& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/ProgramsComponent.vue?vue&type=template&id=8135ae1a&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgramsComponent_vue_vue_type_template_id_8135ae1a___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgramsComponent_vue_vue_type_template_id_8135ae1a___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/PurposesComponent.vue":
/*!*************************************************************!*\
  !*** ./resources/js/components/admin/PurposesComponent.vue ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _PurposesComponent_vue_vue_type_template_id_38591be6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PurposesComponent.vue?vue&type=template&id=38591be6& */ "./resources/js/components/admin/PurposesComponent.vue?vue&type=template&id=38591be6&");
/* harmony import */ var _PurposesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PurposesComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/PurposesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _PurposesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _PurposesComponent_vue_vue_type_template_id_38591be6___WEBPACK_IMPORTED_MODULE_0__["render"],
  _PurposesComponent_vue_vue_type_template_id_38591be6___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/PurposesComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/PurposesComponent.vue?vue&type=script&lang=js&":
/*!**************************************************************************************!*\
  !*** ./resources/js/components/admin/PurposesComponent.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PurposesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./PurposesComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/PurposesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PurposesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/PurposesComponent.vue?vue&type=template&id=38591be6&":
/*!********************************************************************************************!*\
  !*** ./resources/js/components/admin/PurposesComponent.vue?vue&type=template&id=38591be6& ***!
  \********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PurposesComponent_vue_vue_type_template_id_38591be6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./PurposesComponent.vue?vue&type=template&id=38591be6& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/PurposesComponent.vue?vue&type=template&id=38591be6&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PurposesComponent_vue_vue_type_template_id_38591be6___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PurposesComponent_vue_vue_type_template_id_38591be6___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/SectionsComponent.vue":
/*!*************************************************************!*\
  !*** ./resources/js/components/admin/SectionsComponent.vue ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SectionsComponent_vue_vue_type_template_id_5340cb94___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SectionsComponent.vue?vue&type=template&id=5340cb94& */ "./resources/js/components/admin/SectionsComponent.vue?vue&type=template&id=5340cb94&");
/* harmony import */ var _SectionsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SectionsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/SectionsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _SectionsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _SectionsComponent_vue_vue_type_template_id_5340cb94___WEBPACK_IMPORTED_MODULE_0__["render"],
  _SectionsComponent_vue_vue_type_template_id_5340cb94___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/SectionsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/SectionsComponent.vue?vue&type=script&lang=js&":
/*!**************************************************************************************!*\
  !*** ./resources/js/components/admin/SectionsComponent.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SectionsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./SectionsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SectionsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SectionsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/SectionsComponent.vue?vue&type=template&id=5340cb94&":
/*!********************************************************************************************!*\
  !*** ./resources/js/components/admin/SectionsComponent.vue?vue&type=template&id=5340cb94& ***!
  \********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SectionsComponent_vue_vue_type_template_id_5340cb94___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./SectionsComponent.vue?vue&type=template&id=5340cb94& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SectionsComponent.vue?vue&type=template&id=5340cb94&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SectionsComponent_vue_vue_type_template_id_5340cb94___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SectionsComponent_vue_vue_type_template_id_5340cb94___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/SemestersComponent.vue":
/*!**************************************************************!*\
  !*** ./resources/js/components/admin/SemestersComponent.vue ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SemestersComponent_vue_vue_type_template_id_05da262d___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SemestersComponent.vue?vue&type=template&id=05da262d& */ "./resources/js/components/admin/SemestersComponent.vue?vue&type=template&id=05da262d&");
/* harmony import */ var _SemestersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SemestersComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/SemestersComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _SemestersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _SemestersComponent_vue_vue_type_template_id_05da262d___WEBPACK_IMPORTED_MODULE_0__["render"],
  _SemestersComponent_vue_vue_type_template_id_05da262d___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/SemestersComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/SemestersComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************!*\
  !*** ./resources/js/components/admin/SemestersComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SemestersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./SemestersComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SemestersComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SemestersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/SemestersComponent.vue?vue&type=template&id=05da262d&":
/*!*********************************************************************************************!*\
  !*** ./resources/js/components/admin/SemestersComponent.vue?vue&type=template&id=05da262d& ***!
  \*********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SemestersComponent_vue_vue_type_template_id_05da262d___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./SemestersComponent.vue?vue&type=template&id=05da262d& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SemestersComponent.vue?vue&type=template&id=05da262d&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SemestersComponent_vue_vue_type_template_id_05da262d___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SemestersComponent_vue_vue_type_template_id_05da262d___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/SignatoryUsersComponent.vue":
/*!*******************************************************************!*\
  !*** ./resources/js/components/admin/SignatoryUsersComponent.vue ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SignatoryUsersComponent_vue_vue_type_template_id_3b4eadc0___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SignatoryUsersComponent.vue?vue&type=template&id=3b4eadc0& */ "./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=template&id=3b4eadc0&");
/* harmony import */ var _SignatoryUsersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SignatoryUsersComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _SignatoryUsersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _SignatoryUsersComponent_vue_vue_type_template_id_3b4eadc0___WEBPACK_IMPORTED_MODULE_0__["render"],
  _SignatoryUsersComponent_vue_vue_type_template_id_3b4eadc0___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/SignatoryUsersComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=script&lang=js&":
/*!********************************************************************************************!*\
  !*** ./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SignatoryUsersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./SignatoryUsersComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SignatoryUsersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=template&id=3b4eadc0&":
/*!**************************************************************************************************!*\
  !*** ./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=template&id=3b4eadc0& ***!
  \**************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SignatoryUsersComponent_vue_vue_type_template_id_3b4eadc0___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./SignatoryUsersComponent.vue?vue&type=template&id=3b4eadc0& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/SignatoryUsersComponent.vue?vue&type=template&id=3b4eadc0&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SignatoryUsersComponent_vue_vue_type_template_id_3b4eadc0___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SignatoryUsersComponent_vue_vue_type_template_id_3b4eadc0___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/UsersComponent.vue":
/*!**********************************************************!*\
  !*** ./resources/js/components/admin/UsersComponent.vue ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _UsersComponent_vue_vue_type_template_id_896b7600___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UsersComponent.vue?vue&type=template&id=896b7600& */ "./resources/js/components/admin/UsersComponent.vue?vue&type=template&id=896b7600&");
/* harmony import */ var _UsersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UsersComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/UsersComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _UsersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _UsersComponent_vue_vue_type_template_id_896b7600___WEBPACK_IMPORTED_MODULE_0__["render"],
  _UsersComponent_vue_vue_type_template_id_896b7600___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/UsersComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/UsersComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************!*\
  !*** ./resources/js/components/admin/UsersComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_UsersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./UsersComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/UsersComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_UsersComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/UsersComponent.vue?vue&type=template&id=896b7600&":
/*!*****************************************************************************************!*\
  !*** ./resources/js/components/admin/UsersComponent.vue?vue&type=template&id=896b7600& ***!
  \*****************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_UsersComponent_vue_vue_type_template_id_896b7600___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./UsersComponent.vue?vue&type=template&id=896b7600& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/UsersComponent.vue?vue&type=template&id=896b7600&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_UsersComponent_vue_vue_type_template_id_896b7600___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_UsersComponent_vue_vue_type_template_id_896b7600___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/signatory/CashierComponent.vue":
/*!**********************************************************************!*\
  !*** ./resources/js/components/admin/signatory/CashierComponent.vue ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _CashierComponent_vue_vue_type_template_id_420aa864___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CashierComponent.vue?vue&type=template&id=420aa864& */ "./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=template&id=420aa864&");
/* harmony import */ var _CashierComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CashierComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _CashierComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _CashierComponent_vue_vue_type_template_id_420aa864___WEBPACK_IMPORTED_MODULE_0__["render"],
  _CashierComponent_vue_vue_type_template_id_420aa864___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/signatory/CashierComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CashierComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./CashierComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CashierComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=template&id=420aa864&":
/*!*****************************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=template&id=420aa864& ***!
  \*****************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CashierComponent_vue_vue_type_template_id_420aa864___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib??vue-loader-options!./CashierComponent.vue?vue&type=template&id=420aa864& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/CashierComponent.vue?vue&type=template&id=420aa864&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CashierComponent_vue_vue_type_template_id_420aa864___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CashierComponent_vue_vue_type_template_id_420aa864___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/signatory/DeanComponent.vue":
/*!*******************************************************************!*\
  !*** ./resources/js/components/admin/signatory/DeanComponent.vue ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _DeanComponent_vue_vue_type_template_id_a2871fea___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DeanComponent.vue?vue&type=template&id=a2871fea& */ "./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=template&id=a2871fea&");
/* harmony import */ var _DeanComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DeanComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _DeanComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _DeanComponent_vue_vue_type_template_id_a2871fea___WEBPACK_IMPORTED_MODULE_0__["render"],
  _DeanComponent_vue_vue_type_template_id_a2871fea___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/signatory/DeanComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=script&lang=js&":
/*!********************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DeanComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./DeanComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DeanComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=template&id=a2871fea&":
/*!**************************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=template&id=a2871fea& ***!
  \**************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DeanComponent_vue_vue_type_template_id_a2871fea___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib??vue-loader-options!./DeanComponent.vue?vue&type=template&id=a2871fea& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/DeanComponent.vue?vue&type=template&id=a2871fea&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DeanComponent_vue_vue_type_template_id_a2871fea___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DeanComponent_vue_vue_type_template_id_a2871fea___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/signatory/LibraryComponent.vue":
/*!**********************************************************************!*\
  !*** ./resources/js/components/admin/signatory/LibraryComponent.vue ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LibraryComponent_vue_vue_type_template_id_3a96e4d6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LibraryComponent.vue?vue&type=template&id=3a96e4d6& */ "./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=template&id=3a96e4d6&");
/* harmony import */ var _LibraryComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LibraryComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _LibraryComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _LibraryComponent_vue_vue_type_template_id_3a96e4d6___WEBPACK_IMPORTED_MODULE_0__["render"],
  _LibraryComponent_vue_vue_type_template_id_3a96e4d6___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/signatory/LibraryComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LibraryComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./LibraryComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LibraryComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=template&id=3a96e4d6&":
/*!*****************************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=template&id=3a96e4d6& ***!
  \*****************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LibraryComponent_vue_vue_type_template_id_3a96e4d6___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib??vue-loader-options!./LibraryComponent.vue?vue&type=template&id=3a96e4d6& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/LibraryComponent.vue?vue&type=template&id=3a96e4d6&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LibraryComponent_vue_vue_type_template_id_3a96e4d6___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LibraryComponent_vue_vue_type_template_id_3a96e4d6___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/signatory/OSASComponent.vue":
/*!*******************************************************************!*\
  !*** ./resources/js/components/admin/signatory/OSASComponent.vue ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _OSASComponent_vue_vue_type_template_id_3bf5d483___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OSASComponent.vue?vue&type=template&id=3bf5d483& */ "./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=template&id=3bf5d483&");
/* harmony import */ var _OSASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OSASComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _OSASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _OSASComponent_vue_vue_type_template_id_3bf5d483___WEBPACK_IMPORTED_MODULE_0__["render"],
  _OSASComponent_vue_vue_type_template_id_3bf5d483___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/signatory/OSASComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=script&lang=js&":
/*!********************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./OSASComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=template&id=3bf5d483&":
/*!**************************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=template&id=3bf5d483& ***!
  \**************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASComponent_vue_vue_type_template_id_3bf5d483___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib??vue-loader-options!./OSASComponent.vue?vue&type=template&id=3bf5d483& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/OSASComponent.vue?vue&type=template&id=3bf5d483&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASComponent_vue_vue_type_template_id_3bf5d483___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASComponent_vue_vue_type_template_id_3bf5d483___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/signatory/ProgramDirectorComponent.vue":
/*!******************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/ProgramDirectorComponent.vue ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ProgramDirectorComponent_vue_vue_type_template_id_1ec07cfe___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ProgramDirectorComponent.vue?vue&type=template&id=1ec07cfe& */ "./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=template&id=1ec07cfe&");
/* harmony import */ var _ProgramDirectorComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ProgramDirectorComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ProgramDirectorComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ProgramDirectorComponent_vue_vue_type_template_id_1ec07cfe___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ProgramDirectorComponent_vue_vue_type_template_id_1ec07cfe___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/signatory/ProgramDirectorComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgramDirectorComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./ProgramDirectorComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgramDirectorComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=template&id=1ec07cfe&":
/*!*************************************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=template&id=1ec07cfe& ***!
  \*************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgramDirectorComponent_vue_vue_type_template_id_1ec07cfe___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib??vue-loader-options!./ProgramDirectorComponent.vue?vue&type=template&id=1ec07cfe& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/ProgramDirectorComponent.vue?vue&type=template&id=1ec07cfe&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgramDirectorComponent_vue_vue_type_template_id_1ec07cfe___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgramDirectorComponent_vue_vue_type_template_id_1ec07cfe___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/signatory/RegistrarComponent.vue":
/*!************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/RegistrarComponent.vue ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _RegistrarComponent_vue_vue_type_template_id_5a0556e4___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RegistrarComponent.vue?vue&type=template&id=5a0556e4& */ "./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=template&id=5a0556e4&");
/* harmony import */ var _RegistrarComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RegistrarComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _RegistrarComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _RegistrarComponent_vue_vue_type_template_id_5a0556e4___WEBPACK_IMPORTED_MODULE_0__["render"],
  _RegistrarComponent_vue_vue_type_template_id_5a0556e4___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/signatory/RegistrarComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_RegistrarComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./RegistrarComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_RegistrarComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=template&id=5a0556e4&":
/*!*******************************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=template&id=5a0556e4& ***!
  \*******************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_RegistrarComponent_vue_vue_type_template_id_5a0556e4___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib??vue-loader-options!./RegistrarComponent.vue?vue&type=template&id=5a0556e4& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/RegistrarComponent.vue?vue&type=template&id=5a0556e4&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_RegistrarComponent_vue_vue_type_template_id_5a0556e4___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_RegistrarComponent_vue_vue_type_template_id_5a0556e4___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/signatory/StaffComponent.vue":
/*!********************************************************************!*\
  !*** ./resources/js/components/admin/signatory/StaffComponent.vue ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _StaffComponent_vue_vue_type_template_id_18d629d1___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StaffComponent.vue?vue&type=template&id=18d629d1& */ "./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=template&id=18d629d1&");
/* harmony import */ var _StaffComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StaffComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _StaffComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _StaffComponent_vue_vue_type_template_id_18d629d1___WEBPACK_IMPORTED_MODULE_0__["render"],
  _StaffComponent_vue_vue_type_template_id_18d629d1___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/signatory/StaffComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StaffComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./StaffComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StaffComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=template&id=18d629d1&":
/*!***************************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=template&id=18d629d1& ***!
  \***************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StaffComponent_vue_vue_type_template_id_18d629d1___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib??vue-loader-options!./StaffComponent.vue?vue&type=template&id=18d629d1& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/StaffComponent.vue?vue&type=template&id=18d629d1&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StaffComponent_vue_vue_type_template_id_18d629d1___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StaffComponent_vue_vue_type_template_id_18d629d1___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/admin/signatory/StudentCouncilComponent.vue":
/*!*****************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/StudentCouncilComponent.vue ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _StudentCouncilComponent_vue_vue_type_template_id_e39c32da___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StudentCouncilComponent.vue?vue&type=template&id=e39c32da& */ "./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=template&id=e39c32da&");
/* harmony import */ var _StudentCouncilComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StudentCouncilComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _StudentCouncilComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _StudentCouncilComponent_vue_vue_type_template_id_e39c32da___WEBPACK_IMPORTED_MODULE_0__["render"],
  _StudentCouncilComponent_vue_vue_type_template_id_e39c32da___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/admin/signatory/StudentCouncilComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=script&lang=js&":
/*!******************************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentCouncilComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./StudentCouncilComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentCouncilComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=template&id=e39c32da&":
/*!************************************************************************************************************!*\
  !*** ./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=template&id=e39c32da& ***!
  \************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentCouncilComponent_vue_vue_type_template_id_e39c32da___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib??vue-loader-options!./StudentCouncilComponent.vue?vue&type=template&id=e39c32da& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/admin/signatory/StudentCouncilComponent.vue?vue&type=template&id=e39c32da&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentCouncilComponent_vue_vue_type_template_id_e39c32da___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentCouncilComponent_vue_vue_type_template_id_e39c32da___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/adviser/ADVISERComponent.vue":
/*!**************************************************************!*\
  !*** ./resources/js/components/adviser/ADVISERComponent.vue ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ADVISERComponent_vue_vue_type_template_id_61a961e3___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ADVISERComponent.vue?vue&type=template&id=61a961e3& */ "./resources/js/components/adviser/ADVISERComponent.vue?vue&type=template&id=61a961e3&");
/* harmony import */ var _ADVISERComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ADVISERComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/adviser/ADVISERComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ADVISERComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ADVISERComponent_vue_vue_type_template_id_61a961e3___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ADVISERComponent_vue_vue_type_template_id_61a961e3___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/adviser/ADVISERComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/adviser/ADVISERComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************!*\
  !*** ./resources/js/components/adviser/ADVISERComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ADVISERComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ADVISERComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/adviser/ADVISERComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ADVISERComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/adviser/ADVISERComponent.vue?vue&type=template&id=61a961e3&":
/*!*********************************************************************************************!*\
  !*** ./resources/js/components/adviser/ADVISERComponent.vue?vue&type=template&id=61a961e3& ***!
  \*********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ADVISERComponent_vue_vue_type_template_id_61a961e3___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ADVISERComponent.vue?vue&type=template&id=61a961e3& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/adviser/ADVISERComponent.vue?vue&type=template&id=61a961e3&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ADVISERComponent_vue_vue_type_template_id_61a961e3___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ADVISERComponent_vue_vue_type_template_id_61a961e3___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/cashier/CASHIERComponent.vue":
/*!**************************************************************!*\
  !*** ./resources/js/components/cashier/CASHIERComponent.vue ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _CASHIERComponent_vue_vue_type_template_id_2dbebbb1___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CASHIERComponent.vue?vue&type=template&id=2dbebbb1& */ "./resources/js/components/cashier/CASHIERComponent.vue?vue&type=template&id=2dbebbb1&");
/* harmony import */ var _CASHIERComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CASHIERComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/cashier/CASHIERComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _CASHIERComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _CASHIERComponent_vue_vue_type_template_id_2dbebbb1___WEBPACK_IMPORTED_MODULE_0__["render"],
  _CASHIERComponent_vue_vue_type_template_id_2dbebbb1___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/cashier/CASHIERComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/cashier/CASHIERComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************!*\
  !*** ./resources/js/components/cashier/CASHIERComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CASHIERComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./CASHIERComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/cashier/CASHIERComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CASHIERComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/cashier/CASHIERComponent.vue?vue&type=template&id=2dbebbb1&":
/*!*********************************************************************************************!*\
  !*** ./resources/js/components/cashier/CASHIERComponent.vue?vue&type=template&id=2dbebbb1& ***!
  \*********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CASHIERComponent_vue_vue_type_template_id_2dbebbb1___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./CASHIERComponent.vue?vue&type=template&id=2dbebbb1& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/cashier/CASHIERComponent.vue?vue&type=template&id=2dbebbb1&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CASHIERComponent_vue_vue_type_template_id_2dbebbb1___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_CASHIERComponent_vue_vue_type_template_id_2dbebbb1___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/dean/DEANComponent.vue":
/*!********************************************************!*\
  !*** ./resources/js/components/dean/DEANComponent.vue ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _DEANComponent_vue_vue_type_template_id_e06f1a4e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DEANComponent.vue?vue&type=template&id=e06f1a4e& */ "./resources/js/components/dean/DEANComponent.vue?vue&type=template&id=e06f1a4e&");
/* harmony import */ var _DEANComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DEANComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/dean/DEANComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _DEANComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _DEANComponent_vue_vue_type_template_id_e06f1a4e___WEBPACK_IMPORTED_MODULE_0__["render"],
  _DEANComponent_vue_vue_type_template_id_e06f1a4e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/dean/DEANComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/dean/DEANComponent.vue?vue&type=script&lang=js&":
/*!*********************************************************************************!*\
  !*** ./resources/js/components/dean/DEANComponent.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DEANComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./DEANComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/dean/DEANComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DEANComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/dean/DEANComponent.vue?vue&type=template&id=e06f1a4e&":
/*!***************************************************************************************!*\
  !*** ./resources/js/components/dean/DEANComponent.vue?vue&type=template&id=e06f1a4e& ***!
  \***************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DEANComponent_vue_vue_type_template_id_e06f1a4e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./DEANComponent.vue?vue&type=template&id=e06f1a4e& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/dean/DEANComponent.vue?vue&type=template&id=e06f1a4e&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DEANComponent_vue_vue_type_template_id_e06f1a4e___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DEANComponent_vue_vue_type_template_id_e06f1a4e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/library/LIBRARYComponent.vue":
/*!**************************************************************!*\
  !*** ./resources/js/components/library/LIBRARYComponent.vue ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LIBRARYComponent_vue_vue_type_template_id_67d1a5c1___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LIBRARYComponent.vue?vue&type=template&id=67d1a5c1& */ "./resources/js/components/library/LIBRARYComponent.vue?vue&type=template&id=67d1a5c1&");
/* harmony import */ var _LIBRARYComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LIBRARYComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/library/LIBRARYComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _LIBRARYComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _LIBRARYComponent_vue_vue_type_template_id_67d1a5c1___WEBPACK_IMPORTED_MODULE_0__["render"],
  _LIBRARYComponent_vue_vue_type_template_id_67d1a5c1___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/library/LIBRARYComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/library/LIBRARYComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************!*\
  !*** ./resources/js/components/library/LIBRARYComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LIBRARYComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./LIBRARYComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/library/LIBRARYComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LIBRARYComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/library/LIBRARYComponent.vue?vue&type=template&id=67d1a5c1&":
/*!*********************************************************************************************!*\
  !*** ./resources/js/components/library/LIBRARYComponent.vue?vue&type=template&id=67d1a5c1& ***!
  \*********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LIBRARYComponent_vue_vue_type_template_id_67d1a5c1___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./LIBRARYComponent.vue?vue&type=template&id=67d1a5c1& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/library/LIBRARYComponent.vue?vue&type=template&id=67d1a5c1&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LIBRARYComponent_vue_vue_type_template_id_67d1a5c1___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LIBRARYComponent_vue_vue_type_template_id_67d1a5c1___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/login/LoginComponent.vue":
/*!**********************************************************!*\
  !*** ./resources/js/components/login/LoginComponent.vue ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LoginComponent_vue_vue_type_template_id_c4ab7a36___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LoginComponent.vue?vue&type=template&id=c4ab7a36& */ "./resources/js/components/login/LoginComponent.vue?vue&type=template&id=c4ab7a36&");
/* harmony import */ var _LoginComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LoginComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/login/LoginComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _LoginComponent_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LoginComponent.vue?vue&type=style&index=0&lang=css& */ "./resources/js/components/login/LoginComponent.vue?vue&type=style&index=0&lang=css&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");






/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _LoginComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _LoginComponent_vue_vue_type_template_id_c4ab7a36___WEBPACK_IMPORTED_MODULE_0__["render"],
  _LoginComponent_vue_vue_type_template_id_c4ab7a36___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/login/LoginComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/login/LoginComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************!*\
  !*** ./resources/js/components/login/LoginComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LoginComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./LoginComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/login/LoginComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LoginComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/login/LoginComponent.vue?vue&type=style&index=0&lang=css&":
/*!*******************************************************************************************!*\
  !*** ./resources/js/components/login/LoginComponent.vue?vue&type=style&index=0&lang=css& ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_2_node_modules_vue_loader_lib_index_js_vue_loader_options_LoginComponent_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/style-loader!../../../../node_modules/css-loader??ref--6-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src??ref--6-2!../../../../node_modules/vue-loader/lib??vue-loader-options!./LoginComponent.vue?vue&type=style&index=0&lang=css& */ "./node_modules/style-loader/index.js!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/login/LoginComponent.vue?vue&type=style&index=0&lang=css&");
/* harmony import */ var _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_2_node_modules_vue_loader_lib_index_js_vue_loader_options_LoginComponent_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_2_node_modules_vue_loader_lib_index_js_vue_loader_options_LoginComponent_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_2_node_modules_vue_loader_lib_index_js_vue_loader_options_LoginComponent_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(["default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_2_node_modules_vue_loader_lib_index_js_vue_loader_options_LoginComponent_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));


/***/ }),

/***/ "./resources/js/components/login/LoginComponent.vue?vue&type=template&id=c4ab7a36&":
/*!*****************************************************************************************!*\
  !*** ./resources/js/components/login/LoginComponent.vue?vue&type=template&id=c4ab7a36& ***!
  \*****************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LoginComponent_vue_vue_type_template_id_c4ab7a36___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./LoginComponent.vue?vue&type=template&id=c4ab7a36& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/login/LoginComponent.vue?vue&type=template&id=c4ab7a36&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LoginComponent_vue_vue_type_template_id_c4ab7a36___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LoginComponent_vue_vue_type_template_id_c4ab7a36___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/osas/OSASComponent.vue":
/*!********************************************************!*\
  !*** ./resources/js/components/osas/OSASComponent.vue ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _OSASComponent_vue_vue_type_template_id_42d469d9___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OSASComponent.vue?vue&type=template&id=42d469d9& */ "./resources/js/components/osas/OSASComponent.vue?vue&type=template&id=42d469d9&");
/* harmony import */ var _OSASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OSASComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/osas/OSASComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _OSASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _OSASComponent_vue_vue_type_template_id_42d469d9___WEBPACK_IMPORTED_MODULE_0__["render"],
  _OSASComponent_vue_vue_type_template_id_42d469d9___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/osas/OSASComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/osas/OSASComponent.vue?vue&type=script&lang=js&":
/*!*********************************************************************************!*\
  !*** ./resources/js/components/osas/OSASComponent.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./OSASComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/osas/OSASComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/osas/OSASComponent.vue?vue&type=template&id=42d469d9&":
/*!***************************************************************************************!*\
  !*** ./resources/js/components/osas/OSASComponent.vue?vue&type=template&id=42d469d9& ***!
  \***************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASComponent_vue_vue_type_template_id_42d469d9___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./OSASComponent.vue?vue&type=template&id=42d469d9& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/osas/OSASComponent.vue?vue&type=template&id=42d469d9&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASComponent_vue_vue_type_template_id_42d469d9___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASComponent_vue_vue_type_template_id_42d469d9___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/osas/OSASOtherCampusComponent.vue":
/*!*******************************************************************!*\
  !*** ./resources/js/components/osas/OSASOtherCampusComponent.vue ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _OSASOtherCampusComponent_vue_vue_type_template_id_04e80bfc___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OSASOtherCampusComponent.vue?vue&type=template&id=04e80bfc& */ "./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=template&id=04e80bfc&");
/* harmony import */ var _OSASOtherCampusComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OSASOtherCampusComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _OSASOtherCampusComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _OSASOtherCampusComponent_vue_vue_type_template_id_04e80bfc___WEBPACK_IMPORTED_MODULE_0__["render"],
  _OSASOtherCampusComponent_vue_vue_type_template_id_04e80bfc___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/osas/OSASOtherCampusComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=script&lang=js&":
/*!********************************************************************************************!*\
  !*** ./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASOtherCampusComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./OSASOtherCampusComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASOtherCampusComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=template&id=04e80bfc&":
/*!**************************************************************************************************!*\
  !*** ./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=template&id=04e80bfc& ***!
  \**************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASOtherCampusComponent_vue_vue_type_template_id_04e80bfc___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./OSASOtherCampusComponent.vue?vue&type=template&id=04e80bfc& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/osas/OSASOtherCampusComponent.vue?vue&type=template&id=04e80bfc&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASOtherCampusComponent_vue_vue_type_template_id_04e80bfc___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSASOtherCampusComponent_vue_vue_type_template_id_04e80bfc___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/page/ForgotPassword.vue":
/*!*********************************************************!*\
  !*** ./resources/js/components/page/ForgotPassword.vue ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ForgotPassword_vue_vue_type_template_id_78e03cfa___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ForgotPassword.vue?vue&type=template&id=78e03cfa& */ "./resources/js/components/page/ForgotPassword.vue?vue&type=template&id=78e03cfa&");
/* harmony import */ var _ForgotPassword_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ForgotPassword.vue?vue&type=script&lang=js& */ "./resources/js/components/page/ForgotPassword.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ForgotPassword_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ForgotPassword_vue_vue_type_template_id_78e03cfa___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ForgotPassword_vue_vue_type_template_id_78e03cfa___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/page/ForgotPassword.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/page/ForgotPassword.vue?vue&type=script&lang=js&":
/*!**********************************************************************************!*\
  !*** ./resources/js/components/page/ForgotPassword.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ForgotPassword_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ForgotPassword.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ForgotPassword.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ForgotPassword_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/page/ForgotPassword.vue?vue&type=template&id=78e03cfa&":
/*!****************************************************************************************!*\
  !*** ./resources/js/components/page/ForgotPassword.vue?vue&type=template&id=78e03cfa& ***!
  \****************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ForgotPassword_vue_vue_type_template_id_78e03cfa___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ForgotPassword.vue?vue&type=template&id=78e03cfa& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ForgotPassword.vue?vue&type=template&id=78e03cfa&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ForgotPassword_vue_vue_type_template_id_78e03cfa___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ForgotPassword_vue_vue_type_template_id_78e03cfa___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/page/ResetEmailForm.vue":
/*!*********************************************************!*\
  !*** ./resources/js/components/page/ResetEmailForm.vue ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ResetEmailForm_vue_vue_type_template_id_05ad1b16___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResetEmailForm.vue?vue&type=template&id=05ad1b16& */ "./resources/js/components/page/ResetEmailForm.vue?vue&type=template&id=05ad1b16&");
/* harmony import */ var _ResetEmailForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ResetEmailForm.vue?vue&type=script&lang=js& */ "./resources/js/components/page/ResetEmailForm.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ResetEmailForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ResetEmailForm_vue_vue_type_template_id_05ad1b16___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ResetEmailForm_vue_vue_type_template_id_05ad1b16___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/page/ResetEmailForm.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/page/ResetEmailForm.vue?vue&type=script&lang=js&":
/*!**********************************************************************************!*\
  !*** ./resources/js/components/page/ResetEmailForm.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ResetEmailForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ResetEmailForm.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ResetEmailForm.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ResetEmailForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/page/ResetEmailForm.vue?vue&type=template&id=05ad1b16&":
/*!****************************************************************************************!*\
  !*** ./resources/js/components/page/ResetEmailForm.vue?vue&type=template&id=05ad1b16& ***!
  \****************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ResetEmailForm_vue_vue_type_template_id_05ad1b16___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ResetEmailForm.vue?vue&type=template&id=05ad1b16& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ResetEmailForm.vue?vue&type=template&id=05ad1b16&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ResetEmailForm_vue_vue_type_template_id_05ad1b16___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ResetEmailForm_vue_vue_type_template_id_05ad1b16___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/page/ResetPasswordForm.vue":
/*!************************************************************!*\
  !*** ./resources/js/components/page/ResetPasswordForm.vue ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ResetPasswordForm_vue_vue_type_template_id_893c434e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResetPasswordForm.vue?vue&type=template&id=893c434e& */ "./resources/js/components/page/ResetPasswordForm.vue?vue&type=template&id=893c434e&");
/* harmony import */ var _ResetPasswordForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ResetPasswordForm.vue?vue&type=script&lang=js& */ "./resources/js/components/page/ResetPasswordForm.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ResetPasswordForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ResetPasswordForm_vue_vue_type_template_id_893c434e___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ResetPasswordForm_vue_vue_type_template_id_893c434e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/page/ResetPasswordForm.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/page/ResetPasswordForm.vue?vue&type=script&lang=js&":
/*!*************************************************************************************!*\
  !*** ./resources/js/components/page/ResetPasswordForm.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ResetPasswordForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ResetPasswordForm.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ResetPasswordForm.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ResetPasswordForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/page/ResetPasswordForm.vue?vue&type=template&id=893c434e&":
/*!*******************************************************************************************!*\
  !*** ./resources/js/components/page/ResetPasswordForm.vue?vue&type=template&id=893c434e& ***!
  \*******************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ResetPasswordForm_vue_vue_type_template_id_893c434e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ResetPasswordForm.vue?vue&type=template&id=893c434e& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/page/ResetPasswordForm.vue?vue&type=template&id=893c434e&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ResetPasswordForm_vue_vue_type_template_id_893c434e___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ResetPasswordForm_vue_vue_type_template_id_893c434e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/principal/PRINCIPALComponent.vue":
/*!******************************************************************!*\
  !*** ./resources/js/components/principal/PRINCIPALComponent.vue ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _PRINCIPALComponent_vue_vue_type_template_id_025ad5db___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PRINCIPALComponent.vue?vue&type=template&id=025ad5db& */ "./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=template&id=025ad5db&");
/* harmony import */ var _PRINCIPALComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PRINCIPALComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _PRINCIPALComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _PRINCIPALComponent_vue_vue_type_template_id_025ad5db___WEBPACK_IMPORTED_MODULE_0__["render"],
  _PRINCIPALComponent_vue_vue_type_template_id_025ad5db___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/principal/PRINCIPALComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************!*\
  !*** ./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PRINCIPALComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./PRINCIPALComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PRINCIPALComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=template&id=025ad5db&":
/*!*************************************************************************************************!*\
  !*** ./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=template&id=025ad5db& ***!
  \*************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PRINCIPALComponent_vue_vue_type_template_id_025ad5db___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./PRINCIPALComponent.vue?vue&type=template&id=025ad5db& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/principal/PRINCIPALComponent.vue?vue&type=template&id=025ad5db&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PRINCIPALComponent_vue_vue_type_template_id_025ad5db___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PRINCIPALComponent_vue_vue_type_template_id_025ad5db___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue":
/*!***********************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearanceCASRequestsComponent_vue_vue_type_template_id_ec10e634___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearanceCASRequestsComponent.vue?vue&type=template&id=ec10e634& */ "./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=template&id=ec10e634&");
/* harmony import */ var _ClearanceCASRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearanceCASRequestsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearanceCASRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearanceCASRequestsComponent_vue_vue_type_template_id_ec10e634___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearanceCASRequestsComponent_vue_vue_type_template_id_ec10e634___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/ClearanceCASRequestsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCASRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceCASRequestsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCASRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=template&id=ec10e634&":
/*!******************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=template&id=ec10e634& ***!
  \******************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCASRequestsComponent_vue_vue_type_template_id_ec10e634___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceCASRequestsComponent.vue?vue&type=template&id=ec10e634& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue?vue&type=template&id=ec10e634&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCASRequestsComponent_vue_vue_type_template_id_ec10e634___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCASRequestsComponent_vue_vue_type_template_id_ec10e634___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue":
/*!***********************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearanceCBMRequestsComponent_vue_vue_type_template_id_a5f27326___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearanceCBMRequestsComponent.vue?vue&type=template&id=a5f27326& */ "./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=template&id=a5f27326&");
/* harmony import */ var _ClearanceCBMRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearanceCBMRequestsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearanceCBMRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearanceCBMRequestsComponent_vue_vue_type_template_id_a5f27326___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearanceCBMRequestsComponent_vue_vue_type_template_id_a5f27326___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCBMRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceCBMRequestsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCBMRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=template&id=a5f27326&":
/*!******************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=template&id=a5f27326& ***!
  \******************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCBMRequestsComponent_vue_vue_type_template_id_a5f27326___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceCBMRequestsComponent.vue?vue&type=template&id=a5f27326& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue?vue&type=template&id=a5f27326&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCBMRequestsComponent_vue_vue_type_template_id_a5f27326___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCBMRequestsComponent_vue_vue_type_template_id_a5f27326___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue":
/*!***********************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearanceCETRequestsComponent_vue_vue_type_template_id_3943ac89___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearanceCETRequestsComponent.vue?vue&type=template&id=3943ac89& */ "./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=template&id=3943ac89&");
/* harmony import */ var _ClearanceCETRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearanceCETRequestsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearanceCETRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearanceCETRequestsComponent_vue_vue_type_template_id_3943ac89___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearanceCETRequestsComponent_vue_vue_type_template_id_3943ac89___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/ClearanceCETRequestsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCETRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceCETRequestsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCETRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=template&id=3943ac89&":
/*!******************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=template&id=3943ac89& ***!
  \******************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCETRequestsComponent_vue_vue_type_template_id_3943ac89___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceCETRequestsComponent.vue?vue&type=template&id=3943ac89& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue?vue&type=template&id=3943ac89&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCETRequestsComponent_vue_vue_type_template_id_3943ac89___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCETRequestsComponent_vue_vue_type_template_id_3943ac89___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue":
/*!************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearanceCOEDRequestsComponent_vue_vue_type_template_id_622fedbc___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearanceCOEDRequestsComponent.vue?vue&type=template&id=622fedbc& */ "./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=template&id=622fedbc&");
/* harmony import */ var _ClearanceCOEDRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearanceCOEDRequestsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearanceCOEDRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearanceCOEDRequestsComponent_vue_vue_type_template_id_622fedbc___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearanceCOEDRequestsComponent_vue_vue_type_template_id_622fedbc___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCOEDRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceCOEDRequestsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCOEDRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=template&id=622fedbc&":
/*!*******************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=template&id=622fedbc& ***!
  \*******************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCOEDRequestsComponent_vue_vue_type_template_id_622fedbc___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceCOEDRequestsComponent.vue?vue&type=template&id=622fedbc& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue?vue&type=template&id=622fedbc&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCOEDRequestsComponent_vue_vue_type_template_id_622fedbc___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceCOEDRequestsComponent_vue_vue_type_template_id_622fedbc___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceListComponent.vue":
/*!****************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceListComponent.vue ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearanceListComponent_vue_vue_type_template_id_b5c85366___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearanceListComponent.vue?vue&type=template&id=b5c85366& */ "./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=template&id=b5c85366&");
/* harmony import */ var _ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearanceListComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearanceListComponent_vue_vue_type_template_id_b5c85366___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearanceListComponent_vue_vue_type_template_id_b5c85366___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/ClearanceListComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceListComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=template&id=b5c85366&":
/*!***********************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=template&id=b5c85366& ***!
  \***********************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_template_id_b5c85366___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceListComponent.vue?vue&type=template&id=b5c85366& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceListComponent.vue?vue&type=template&id=b5c85366&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_template_id_b5c85366___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_template_id_b5c85366___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceRequestsComponent.vue":
/*!********************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceRequestsComponent.vue ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearanceRequestsComponent_vue_vue_type_template_id_927c2c32___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearanceRequestsComponent.vue?vue&type=template&id=927c2c32& */ "./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=template&id=927c2c32&");
/* harmony import */ var _ClearanceRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearanceRequestsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearanceRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearanceRequestsComponent_vue_vue_type_template_id_927c2c32___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearanceRequestsComponent_vue_vue_type_template_id_927c2c32___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/ClearanceRequestsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceRequestsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=template&id=927c2c32&":
/*!***************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=template&id=927c2c32& ***!
  \***************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceRequestsComponent_vue_vue_type_template_id_927c2c32___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceRequestsComponent.vue?vue&type=template&id=927c2c32& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceRequestsComponent.vue?vue&type=template&id=927c2c32&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceRequestsComponent_vue_vue_type_template_id_927c2c32___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceRequestsComponent_vue_vue_type_template_id_927c2c32___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue":
/*!***********************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearanceSGSRequestsComponent_vue_vue_type_template_id_073a125c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearanceSGSRequestsComponent.vue?vue&type=template&id=073a125c& */ "./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=template&id=073a125c&");
/* harmony import */ var _ClearanceSGSRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearanceSGSRequestsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearanceSGSRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearanceSGSRequestsComponent_vue_vue_type_template_id_073a125c___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearanceSGSRequestsComponent_vue_vue_type_template_id_073a125c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceSGSRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceSGSRequestsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceSGSRequestsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=template&id=073a125c&":
/*!******************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=template&id=073a125c& ***!
  \******************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceSGSRequestsComponent_vue_vue_type_template_id_073a125c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceSGSRequestsComponent.vue?vue&type=template&id=073a125c& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue?vue&type=template&id=073a125c&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceSGSRequestsComponent_vue_vue_type_template_id_073a125c___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceSGSRequestsComponent_vue_vue_type_template_id_073a125c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/ClearedClearancesComponent.vue":
/*!********************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearedClearancesComponent.vue ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearedClearancesComponent_vue_vue_type_template_id_da006fb8___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearedClearancesComponent.vue?vue&type=template&id=da006fb8& */ "./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=template&id=da006fb8&");
/* harmony import */ var _ClearedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearedClearancesComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearedClearancesComponent_vue_vue_type_template_id_da006fb8___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearedClearancesComponent_vue_vue_type_template_id_da006fb8___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/ClearedClearancesComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearedClearancesComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=template&id=da006fb8&":
/*!***************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=template&id=da006fb8& ***!
  \***************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearedClearancesComponent_vue_vue_type_template_id_da006fb8___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearedClearancesComponent.vue?vue&type=template&id=da006fb8& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/ClearedClearancesComponent.vue?vue&type=template&id=da006fb8&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearedClearancesComponent_vue_vue_type_template_id_da006fb8___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearedClearancesComponent_vue_vue_type_template_id_da006fb8___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/DashboardComponent.vue":
/*!************************************************************************!*\
  !*** ./resources/js/components/programdirector/DashboardComponent.vue ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _DashboardComponent_vue_vue_type_template_id_3e3e9a5a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DashboardComponent.vue?vue&type=template&id=3e3e9a5a& */ "./resources/js/components/programdirector/DashboardComponent.vue?vue&type=template&id=3e3e9a5a&");
/* harmony import */ var _DashboardComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DashboardComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/DashboardComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _DashboardComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _DashboardComponent_vue_vue_type_template_id_3e3e9a5a___WEBPACK_IMPORTED_MODULE_0__["render"],
  _DashboardComponent_vue_vue_type_template_id_3e3e9a5a___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/DashboardComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/DashboardComponent.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/DashboardComponent.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./DashboardComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/DashboardComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/DashboardComponent.vue?vue&type=template&id=3e3e9a5a&":
/*!*******************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/DashboardComponent.vue?vue&type=template&id=3e3e9a5a& ***!
  \*******************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponent_vue_vue_type_template_id_3e3e9a5a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./DashboardComponent.vue?vue&type=template&id=3e3e9a5a& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/DashboardComponent.vue?vue&type=template&id=3e3e9a5a&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponent_vue_vue_type_template_id_3e3e9a5a___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DashboardComponent_vue_vue_type_template_id_3e3e9a5a___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/DeficiencyListComponent.vue":
/*!*****************************************************************************!*\
  !*** ./resources/js/components/programdirector/DeficiencyListComponent.vue ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _DeficiencyListComponent_vue_vue_type_template_id_6cd9611c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DeficiencyListComponent.vue?vue&type=template&id=6cd9611c& */ "./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=template&id=6cd9611c&");
/* harmony import */ var _DeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DeficiencyListComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _DeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _DeficiencyListComponent_vue_vue_type_template_id_6cd9611c___WEBPACK_IMPORTED_MODULE_0__["render"],
  _DeficiencyListComponent_vue_vue_type_template_id_6cd9611c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/DeficiencyListComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=script&lang=js&":
/*!******************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./DeficiencyListComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DeficiencyListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=template&id=6cd9611c&":
/*!************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=template&id=6cd9611c& ***!
  \************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DeficiencyListComponent_vue_vue_type_template_id_6cd9611c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./DeficiencyListComponent.vue?vue&type=template&id=6cd9611c& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/DeficiencyListComponent.vue?vue&type=template&id=6cd9611c&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DeficiencyListComponent_vue_vue_type_template_id_6cd9611c___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_DeficiencyListComponent_vue_vue_type_template_id_6cd9611c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/PDComponent.vue":
/*!*****************************************************************!*\
  !*** ./resources/js/components/programdirector/PDComponent.vue ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _PDComponent_vue_vue_type_template_id_38da5bef___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PDComponent.vue?vue&type=template&id=38da5bef& */ "./resources/js/components/programdirector/PDComponent.vue?vue&type=template&id=38da5bef&");
/* harmony import */ var _PDComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PDComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/PDComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _PDComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _PDComponent_vue_vue_type_template_id_38da5bef___WEBPACK_IMPORTED_MODULE_0__["render"],
  _PDComponent_vue_vue_type_template_id_38da5bef___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/PDComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/PDComponent.vue?vue&type=script&lang=js&":
/*!******************************************************************************************!*\
  !*** ./resources/js/components/programdirector/PDComponent.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PDComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./PDComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/PDComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PDComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/PDComponent.vue?vue&type=template&id=38da5bef&":
/*!************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/PDComponent.vue?vue&type=template&id=38da5bef& ***!
  \************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PDComponent_vue_vue_type_template_id_38da5bef___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./PDComponent.vue?vue&type=template&id=38da5bef& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/PDComponent.vue?vue&type=template&id=38da5bef&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PDComponent_vue_vue_type_template_id_38da5bef___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PDComponent_vue_vue_type_template_id_38da5bef___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/StudentListComponent.vue":
/*!**************************************************************************!*\
  !*** ./resources/js/components/programdirector/StudentListComponent.vue ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _StudentListComponent_vue_vue_type_template_id_30d8738e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StudentListComponent.vue?vue&type=template&id=30d8738e& */ "./resources/js/components/programdirector/StudentListComponent.vue?vue&type=template&id=30d8738e&");
/* harmony import */ var _StudentListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StudentListComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/StudentListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _StudentListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _StudentListComponent_vue_vue_type_template_id_30d8738e___WEBPACK_IMPORTED_MODULE_0__["render"],
  _StudentListComponent_vue_vue_type_template_id_30d8738e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/StudentListComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/StudentListComponent.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/StudentListComponent.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./StudentListComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/StudentListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/StudentListComponent.vue?vue&type=template&id=30d8738e&":
/*!*********************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/StudentListComponent.vue?vue&type=template&id=30d8738e& ***!
  \*********************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentListComponent_vue_vue_type_template_id_30d8738e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./StudentListComponent.vue?vue&type=template&id=30d8738e& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/StudentListComponent.vue?vue&type=template&id=30d8738e&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentListComponent_vue_vue_type_template_id_30d8738e___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentListComponent_vue_vue_type_template_id_30d8738e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/programdirector/SubmittedClearancesComponent.vue":
/*!**********************************************************************************!*\
  !*** ./resources/js/components/programdirector/SubmittedClearancesComponent.vue ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SubmittedClearancesComponent_vue_vue_type_template_id_e4d4f516___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SubmittedClearancesComponent.vue?vue&type=template&id=e4d4f516& */ "./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=template&id=e4d4f516&");
/* harmony import */ var _SubmittedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SubmittedClearancesComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _SubmittedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _SubmittedClearancesComponent_vue_vue_type_template_id_e4d4f516___WEBPACK_IMPORTED_MODULE_0__["render"],
  _SubmittedClearancesComponent_vue_vue_type_template_id_e4d4f516___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/programdirector/SubmittedClearancesComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SubmittedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./SubmittedClearancesComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SubmittedClearancesComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=template&id=e4d4f516&":
/*!*****************************************************************************************************************!*\
  !*** ./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=template&id=e4d4f516& ***!
  \*****************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SubmittedClearancesComponent_vue_vue_type_template_id_e4d4f516___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./SubmittedClearancesComponent.vue?vue&type=template&id=e4d4f516& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/programdirector/SubmittedClearancesComponent.vue?vue&type=template&id=e4d4f516&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SubmittedClearancesComponent_vue_vue_type_template_id_e4d4f516___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SubmittedClearancesComponent_vue_vue_type_template_id_e4d4f516___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/registrar/REGISTRARComponent.vue":
/*!******************************************************************!*\
  !*** ./resources/js/components/registrar/REGISTRARComponent.vue ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _REGISTRARComponent_vue_vue_type_template_id_06b913dd___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./REGISTRARComponent.vue?vue&type=template&id=06b913dd& */ "./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=template&id=06b913dd&");
/* harmony import */ var _REGISTRARComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./REGISTRARComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _REGISTRARComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _REGISTRARComponent_vue_vue_type_template_id_06b913dd___WEBPACK_IMPORTED_MODULE_0__["render"],
  _REGISTRARComponent_vue_vue_type_template_id_06b913dd___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/registrar/REGISTRARComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************!*\
  !*** ./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_REGISTRARComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./REGISTRARComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_REGISTRARComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=template&id=06b913dd&":
/*!*************************************************************************************************!*\
  !*** ./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=template&id=06b913dd& ***!
  \*************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_REGISTRARComponent_vue_vue_type_template_id_06b913dd___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./REGISTRARComponent.vue?vue&type=template&id=06b913dd& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/registrar/REGISTRARComponent.vue?vue&type=template&id=06b913dd&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_REGISTRARComponent_vue_vue_type_template_id_06b913dd___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_REGISTRARComponent_vue_vue_type_template_id_06b913dd___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue":
/*!****************************************************************************!*\
  !*** ./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _REGISTRARSTAFFComponent_vue_vue_type_template_id_d8a4218e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./REGISTRARSTAFFComponent.vue?vue&type=template&id=d8a4218e& */ "./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=template&id=d8a4218e&");
/* harmony import */ var _REGISTRARSTAFFComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./REGISTRARSTAFFComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _REGISTRARSTAFFComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _REGISTRARSTAFFComponent_vue_vue_type_template_id_d8a4218e___WEBPACK_IMPORTED_MODULE_0__["render"],
  _REGISTRARSTAFFComponent_vue_vue_type_template_id_d8a4218e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************!*\
  !*** ./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_REGISTRARSTAFFComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./REGISTRARSTAFFComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_REGISTRARSTAFFComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=template&id=d8a4218e&":
/*!***********************************************************************************************************!*\
  !*** ./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=template&id=d8a4218e& ***!
  \***********************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_REGISTRARSTAFFComponent_vue_vue_type_template_id_d8a4218e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./REGISTRARSTAFFComponent.vue?vue&type=template&id=d8a4218e& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue?vue&type=template&id=d8a4218e&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_REGISTRARSTAFFComponent_vue_vue_type_template_id_d8a4218e___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_REGISTRARSTAFFComponent_vue_vue_type_template_id_d8a4218e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/stcouncil/STCOUNCILComponent.vue":
/*!******************************************************************!*\
  !*** ./resources/js/components/stcouncil/STCOUNCILComponent.vue ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _STCOUNCILComponent_vue_vue_type_template_id_652a6612___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./STCOUNCILComponent.vue?vue&type=template&id=652a6612& */ "./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=template&id=652a6612&");
/* harmony import */ var _STCOUNCILComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./STCOUNCILComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _STCOUNCILComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _STCOUNCILComponent_vue_vue_type_template_id_652a6612___WEBPACK_IMPORTED_MODULE_0__["render"],
  _STCOUNCILComponent_vue_vue_type_template_id_652a6612___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/stcouncil/STCOUNCILComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************!*\
  !*** ./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_STCOUNCILComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./STCOUNCILComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_STCOUNCILComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=template&id=652a6612&":
/*!*************************************************************************************************!*\
  !*** ./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=template&id=652a6612& ***!
  \*************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_STCOUNCILComponent_vue_vue_type_template_id_652a6612___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./STCOUNCILComponent.vue?vue&type=template&id=652a6612& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/stcouncil/STCOUNCILComponent.vue?vue&type=template&id=652a6612&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_STCOUNCILComponent_vue_vue_type_template_id_652a6612___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_STCOUNCILComponent_vue_vue_type_template_id_652a6612___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/student/ClearanceListComponent.vue":
/*!********************************************************************!*\
  !*** ./resources/js/components/student/ClearanceListComponent.vue ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ClearanceListComponent_vue_vue_type_template_id_1691e242___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClearanceListComponent.vue?vue&type=template&id=1691e242& */ "./resources/js/components/student/ClearanceListComponent.vue?vue&type=template&id=1691e242&");
/* harmony import */ var _ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClearanceListComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/student/ClearanceListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _ClearanceListComponent_vue_vue_type_template_id_1691e242___WEBPACK_IMPORTED_MODULE_0__["render"],
  _ClearanceListComponent_vue_vue_type_template_id_1691e242___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/student/ClearanceListComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/student/ClearanceListComponent.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************!*\
  !*** ./resources/js/components/student/ClearanceListComponent.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceListComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/ClearanceListComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/student/ClearanceListComponent.vue?vue&type=template&id=1691e242&":
/*!***************************************************************************************************!*\
  !*** ./resources/js/components/student/ClearanceListComponent.vue?vue&type=template&id=1691e242& ***!
  \***************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_template_id_1691e242___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./ClearanceListComponent.vue?vue&type=template&id=1691e242& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/ClearanceListComponent.vue?vue&type=template&id=1691e242&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_template_id_1691e242___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_ClearanceListComponent_vue_vue_type_template_id_1691e242___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/student/LHSStudentComponent.vue":
/*!*****************************************************************!*\
  !*** ./resources/js/components/student/LHSStudentComponent.vue ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LHSStudentComponent_vue_vue_type_template_id_1009ca2a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LHSStudentComponent.vue?vue&type=template&id=1009ca2a& */ "./resources/js/components/student/LHSStudentComponent.vue?vue&type=template&id=1009ca2a&");
/* harmony import */ var _LHSStudentComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LHSStudentComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/student/LHSStudentComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _LHSStudentComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _LHSStudentComponent_vue_vue_type_template_id_1009ca2a___WEBPACK_IMPORTED_MODULE_0__["render"],
  _LHSStudentComponent_vue_vue_type_template_id_1009ca2a___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/student/LHSStudentComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/student/LHSStudentComponent.vue?vue&type=script&lang=js&":
/*!******************************************************************************************!*\
  !*** ./resources/js/components/student/LHSStudentComponent.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LHSStudentComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./LHSStudentComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/LHSStudentComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LHSStudentComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/student/LHSStudentComponent.vue?vue&type=template&id=1009ca2a&":
/*!************************************************************************************************!*\
  !*** ./resources/js/components/student/LHSStudentComponent.vue?vue&type=template&id=1009ca2a& ***!
  \************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LHSStudentComponent_vue_vue_type_template_id_1009ca2a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./LHSStudentComponent.vue?vue&type=template&id=1009ca2a& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/LHSStudentComponent.vue?vue&type=template&id=1009ca2a&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LHSStudentComponent_vue_vue_type_template_id_1009ca2a___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LHSStudentComponent_vue_vue_type_template_id_1009ca2a___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/student/SGSStudentComponent.vue":
/*!*****************************************************************!*\
  !*** ./resources/js/components/student/SGSStudentComponent.vue ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SGSStudentComponent_vue_vue_type_template_id_de417f5c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SGSStudentComponent.vue?vue&type=template&id=de417f5c& */ "./resources/js/components/student/SGSStudentComponent.vue?vue&type=template&id=de417f5c&");
/* harmony import */ var _SGSStudentComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SGSStudentComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/student/SGSStudentComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _SGSStudentComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _SGSStudentComponent_vue_vue_type_template_id_de417f5c___WEBPACK_IMPORTED_MODULE_0__["render"],
  _SGSStudentComponent_vue_vue_type_template_id_de417f5c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/student/SGSStudentComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/student/SGSStudentComponent.vue?vue&type=script&lang=js&":
/*!******************************************************************************************!*\
  !*** ./resources/js/components/student/SGSStudentComponent.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SGSStudentComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./SGSStudentComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/SGSStudentComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SGSStudentComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/student/SGSStudentComponent.vue?vue&type=template&id=de417f5c&":
/*!************************************************************************************************!*\
  !*** ./resources/js/components/student/SGSStudentComponent.vue?vue&type=template&id=de417f5c& ***!
  \************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SGSStudentComponent_vue_vue_type_template_id_de417f5c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./SGSStudentComponent.vue?vue&type=template&id=de417f5c& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/SGSStudentComponent.vue?vue&type=template&id=de417f5c&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SGSStudentComponent_vue_vue_type_template_id_de417f5c___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SGSStudentComponent_vue_vue_type_template_id_de417f5c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/student/SettingsComponent.vue":
/*!***************************************************************!*\
  !*** ./resources/js/components/student/SettingsComponent.vue ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SettingsComponent_vue_vue_type_template_id_01c57b2a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SettingsComponent.vue?vue&type=template&id=01c57b2a& */ "./resources/js/components/student/SettingsComponent.vue?vue&type=template&id=01c57b2a&");
/* harmony import */ var _SettingsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SettingsComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/student/SettingsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _SettingsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _SettingsComponent_vue_vue_type_template_id_01c57b2a___WEBPACK_IMPORTED_MODULE_0__["render"],
  _SettingsComponent_vue_vue_type_template_id_01c57b2a___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/student/SettingsComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/student/SettingsComponent.vue?vue&type=script&lang=js&":
/*!****************************************************************************************!*\
  !*** ./resources/js/components/student/SettingsComponent.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SettingsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./SettingsComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/SettingsComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SettingsComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/student/SettingsComponent.vue?vue&type=template&id=01c57b2a&":
/*!**********************************************************************************************!*\
  !*** ./resources/js/components/student/SettingsComponent.vue?vue&type=template&id=01c57b2a& ***!
  \**********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SettingsComponent_vue_vue_type_template_id_01c57b2a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./SettingsComponent.vue?vue&type=template&id=01c57b2a& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/SettingsComponent.vue?vue&type=template&id=01c57b2a&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SettingsComponent_vue_vue_type_template_id_01c57b2a___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SettingsComponent_vue_vue_type_template_id_01c57b2a___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/components/student/StudentSIASComponent.vue":
/*!******************************************************************!*\
  !*** ./resources/js/components/student/StudentSIASComponent.vue ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _StudentSIASComponent_vue_vue_type_template_id_1e5ade8e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StudentSIASComponent.vue?vue&type=template&id=1e5ade8e& */ "./resources/js/components/student/StudentSIASComponent.vue?vue&type=template&id=1e5ade8e&");
/* harmony import */ var _StudentSIASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StudentSIASComponent.vue?vue&type=script&lang=js& */ "./resources/js/components/student/StudentSIASComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _StudentSIASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _StudentSIASComponent_vue_vue_type_template_id_1e5ade8e___WEBPACK_IMPORTED_MODULE_0__["render"],
  _StudentSIASComponent_vue_vue_type_template_id_1e5ade8e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/student/StudentSIASComponent.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/student/StudentSIASComponent.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************!*\
  !*** ./resources/js/components/student/StudentSIASComponent.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentSIASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./StudentSIASComponent.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/StudentSIASComponent.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentSIASComponent_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/student/StudentSIASComponent.vue?vue&type=template&id=1e5ade8e&":
/*!*************************************************************************************************!*\
  !*** ./resources/js/components/student/StudentSIASComponent.vue?vue&type=template&id=1e5ade8e& ***!
  \*************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentSIASComponent_vue_vue_type_template_id_1e5ade8e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./StudentSIASComponent.vue?vue&type=template&id=1e5ade8e& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/student/StudentSIASComponent.vue?vue&type=template&id=1e5ade8e&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentSIASComponent_vue_vue_type_template_id_1e5ade8e___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentSIASComponent_vue_vue_type_template_id_1e5ade8e___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/router.js":
/*!********************************!*\
  !*** ./resources/js/router.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.common.js");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vue_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue-router */ "./node_modules/vue-router/dist/vue-router.esm.js");
/* harmony import */ var _components_login_LoginComponent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/login/LoginComponent */ "./resources/js/components/login/LoginComponent.vue");
/* harmony import */ var _shared_layout_StudentLayout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shared/layout/StudentLayout */ "./resources/js/shared/layout/StudentLayout.vue");
/* harmony import */ var _shared_layout_SignatoryLayout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared/layout/SignatoryLayout */ "./resources/js/shared/layout/SignatoryLayout.vue");
/* harmony import */ var _shared_layout_AdminLayout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shared/layout/AdminLayout */ "./resources/js/shared/layout/AdminLayout.vue");
/* harmony import */ var _components_cashier_CASHIERComponent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/cashier/CASHIERComponent */ "./resources/js/components/cashier/CASHIERComponent.vue");
/* harmony import */ var _components_library_LIBRARYComponent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/library/LIBRARYComponent */ "./resources/js/components/library/LIBRARYComponent.vue");
/* harmony import */ var _components_dean_DEANComponent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/dean/DEANComponent */ "./resources/js/components/dean/DEANComponent.vue");
/* harmony import */ var _components_registrarstaff_REGISTRARSTAFFComponent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/registrarstaff/REGISTRARSTAFFComponent */ "./resources/js/components/registrarstaff/REGISTRARSTAFFComponent.vue");
/* harmony import */ var _components_registrar_REGISTRARComponent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/registrar/REGISTRARComponent */ "./resources/js/components/registrar/REGISTRARComponent.vue");
/* harmony import */ var _components_osas_OSASComponent__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/osas/OSASComponent */ "./resources/js/components/osas/OSASComponent.vue");
/* harmony import */ var _components_osas_OSASOtherCampusComponent__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/osas/OSASOtherCampusComponent */ "./resources/js/components/osas/OSASOtherCampusComponent.vue");
/* harmony import */ var _components_stcouncil_STCOUNCILComponent__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/stcouncil/STCOUNCILComponent */ "./resources/js/components/stcouncil/STCOUNCILComponent.vue");
/* harmony import */ var _components_student_SGSStudentComponent__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/student/SGSStudentComponent */ "./resources/js/components/student/SGSStudentComponent.vue");
/* harmony import */ var _components_student_LHSStudentComponent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/student/LHSStudentComponent */ "./resources/js/components/student/LHSStudentComponent.vue");
/* harmony import */ var _components_principal_PRINCIPALComponent__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/principal/PRINCIPALComponent */ "./resources/js/components/principal/PRINCIPALComponent.vue");
/* harmony import */ var _components_adviser_ADVISERComponent__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/adviser/ADVISERComponent */ "./resources/js/components/adviser/ADVISERComponent.vue");
/* harmony import */ var _components_admin_DashboardComponent__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/admin/DashboardComponent */ "./resources/js/components/admin/DashboardComponent.vue");
/* harmony import */ var _components_admin_DashboardComponentt__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/admin/DashboardComponentt */ "./resources/js/components/admin/DashboardComponentt.vue");
/* harmony import */ var _components_StudentListComponent__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/StudentListComponent */ "./resources/js/components/StudentListComponent.vue");
/* harmony import */ var _components_admin_CollegesComponent__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./components/admin/CollegesComponent */ "./resources/js/components/admin/CollegesComponent.vue");
/* harmony import */ var _components_admin_CampusesComponent__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./components/admin/CampusesComponent */ "./resources/js/components/admin/CampusesComponent.vue");
/* harmony import */ var _components_admin_GraduationsComponent__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/admin/GraduationsComponent */ "./resources/js/components/admin/GraduationsComponent.vue");
/* harmony import */ var _components_admin_ProgramsComponent__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./components/admin/ProgramsComponent */ "./resources/js/components/admin/ProgramsComponent.vue");
/* harmony import */ var _components_admin_PurposesComponent__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./components/admin/PurposesComponent */ "./resources/js/components/admin/PurposesComponent.vue");
/* harmony import */ var _components_admin_SectionsComponent__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components/admin/SectionsComponent */ "./resources/js/components/admin/SectionsComponent.vue");
/* harmony import */ var _components_admin_SemestersComponent__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/admin/SemestersComponent */ "./resources/js/components/admin/SemestersComponent.vue");
/* harmony import */ var _components_SIASAccountComponent__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./components/SIASAccountComponent */ "./resources/js/components/SIASAccountComponent.vue");
/* harmony import */ var _components_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./components/ClearanceRequestsComponent */ "./resources/js/components/ClearanceRequestsComponent.vue");
/* harmony import */ var _components_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./components/ClearedClearancesComponent */ "./resources/js/components/ClearedClearancesComponent.vue");
/* harmony import */ var _components_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./components/SubmittedClearancesComponent */ "./resources/js/components/SubmittedClearancesComponent.vue");
/* harmony import */ var _components_ActiveClearanceComponent__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./components/ActiveClearanceComponent */ "./resources/js/components/ActiveClearanceComponent.vue");
/* harmony import */ var _components_ActiveClearanceComponentLHS__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./components/ActiveClearanceComponentLHS */ "./resources/js/components/ActiveClearanceComponentLHS.vue");
/* harmony import */ var _components_ActiveClearanceComponentSGS__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./components/ActiveClearanceComponentSGS */ "./resources/js/components/ActiveClearanceComponentSGS.vue");
/* harmony import */ var _components_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./components/ClearanceListComponent */ "./resources/js/components/ClearanceListComponent.vue");
/* harmony import */ var _components_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./components/DeficiencyListComponent */ "./resources/js/components/DeficiencyListComponent.vue");
/* harmony import */ var _components_RegistrarDeficiencyListComponent__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./components/RegistrarDeficiencyListComponent */ "./resources/js/components/RegistrarDeficiencyListComponent.vue");
/* harmony import */ var _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./components/SettingsComponent */ "./resources/js/components/SettingsComponent.vue");
/* harmony import */ var _components_student_SettingsComponent__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./components/student/SettingsComponent */ "./resources/js/components/student/SettingsComponent.vue");
/* harmony import */ var _components_student_StudentSIASComponent__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./components/student/StudentSIASComponent */ "./resources/js/components/student/StudentSIASComponent.vue");
/* harmony import */ var _components_admin_UsersComponent__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./components/admin/UsersComponent */ "./resources/js/components/admin/UsersComponent.vue");
/* harmony import */ var _components_admin_SignatoryUsersComponent__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./components/admin/SignatoryUsersComponent */ "./resources/js/components/admin/SignatoryUsersComponent.vue");
/* harmony import */ var _components_admin_signatory_CashierComponent__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./components/admin/signatory/CashierComponent */ "./resources/js/components/admin/signatory/CashierComponent.vue");
/* harmony import */ var _components_admin_signatory_DeanComponent__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./components/admin/signatory/DeanComponent */ "./resources/js/components/admin/signatory/DeanComponent.vue");
/* harmony import */ var _components_admin_signatory_LibraryComponent__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./components/admin/signatory/LibraryComponent */ "./resources/js/components/admin/signatory/LibraryComponent.vue");
/* harmony import */ var _components_admin_signatory_OSASComponent__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./components/admin/signatory/OSASComponent */ "./resources/js/components/admin/signatory/OSASComponent.vue");
/* harmony import */ var _components_admin_signatory_ProgramDirectorComponent__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./components/admin/signatory/ProgramDirectorComponent */ "./resources/js/components/admin/signatory/ProgramDirectorComponent.vue");
/* harmony import */ var _components_admin_signatory_StudentCouncilComponent__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./components/admin/signatory/StudentCouncilComponent */ "./resources/js/components/admin/signatory/StudentCouncilComponent.vue");
/* harmony import */ var _components_admin_signatory_RegistrarComponent__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./components/admin/signatory/RegistrarComponent */ "./resources/js/components/admin/signatory/RegistrarComponent.vue");
/* harmony import */ var _components_admin_signatory_StaffComponent__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./components/admin/signatory/StaffComponent */ "./resources/js/components/admin/signatory/StaffComponent.vue");
/* harmony import */ var _components_programdirector_PDComponent__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./components/programdirector/PDComponent */ "./resources/js/components/programdirector/PDComponent.vue");
/* harmony import */ var _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./components/programdirector/DashboardComponent */ "./resources/js/components/programdirector/DashboardComponent.vue");
/* harmony import */ var _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./components/programdirector/StudentListComponent */ "./resources/js/components/programdirector/StudentListComponent.vue");
/* harmony import */ var _components_programdirector_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./components/programdirector/ClearanceRequestsComponent */ "./resources/js/components/programdirector/ClearanceRequestsComponent.vue");
/* harmony import */ var _components_programdirector_ClearanceCASRequestsComponent__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./components/programdirector/ClearanceCASRequestsComponent */ "./resources/js/components/programdirector/ClearanceCASRequestsComponent.vue");
/* harmony import */ var _components_programdirector_ClearanceCBMRequestsComponent__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./components/programdirector/ClearanceCBMRequestsComponent */ "./resources/js/components/programdirector/ClearanceCBMRequestsComponent.vue");
/* harmony import */ var _components_programdirector_ClearanceCETRequestsComponent__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./components/programdirector/ClearanceCETRequestsComponent */ "./resources/js/components/programdirector/ClearanceCETRequestsComponent.vue");
/* harmony import */ var _components_programdirector_ClearanceCOEDRequestsComponent__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./components/programdirector/ClearanceCOEDRequestsComponent */ "./resources/js/components/programdirector/ClearanceCOEDRequestsComponent.vue");
/* harmony import */ var _components_programdirector_ClearanceSGSRequestsComponent__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./components/programdirector/ClearanceSGSRequestsComponent */ "./resources/js/components/programdirector/ClearanceSGSRequestsComponent.vue");
/* harmony import */ var _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./components/programdirector/ClearedClearancesComponent */ "./resources/js/components/programdirector/ClearedClearancesComponent.vue");
/* harmony import */ var _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./components/programdirector/SubmittedClearancesComponent */ "./resources/js/components/programdirector/SubmittedClearancesComponent.vue");
/* harmony import */ var _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./components/programdirector/ClearanceListComponent */ "./resources/js/components/programdirector/ClearanceListComponent.vue");
/* harmony import */ var _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./components/programdirector/DeficiencyListComponent */ "./resources/js/components/programdirector/DeficiencyListComponent.vue");
/* harmony import */ var _components_student_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./components/student/ClearanceListComponent */ "./resources/js/components/student/ClearanceListComponent.vue");
/* harmony import */ var _components_page_ForgotPassword__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./components/page/ForgotPassword */ "./resources/js/components/page/ForgotPassword.vue");
/* harmony import */ var _components_page_ResetPasswordForm__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./components/page/ResetPasswordForm */ "./resources/js/components/page/ResetPasswordForm.vue");
/* harmony import */ var _components_page_ResetEmailForm__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./components/page/ResetEmailForm */ "./resources/js/components/page/ResetEmailForm.vue");


 // import AdminComponent from './components/AdminComponent';















 //Admin Import Component











 //Signatories Import Component



 //Students Import Component






 //Settings Import Component



 //Users Import Component


 //Signatories Admin Component








 //Program Director Import













 //student





vue__WEBPACK_IMPORTED_MODULE_0___default.a.use(vue_router__WEBPACK_IMPORTED_MODULE_1__["default"]);
var routes = [{
  path: '/reset-password',
  name: 'reset-password',
  component: _components_page_ForgotPassword__WEBPACK_IMPORTED_MODULE_65__["default"],
  meta: {
    auth: false
  }
}, {
  path: '/reset-password/:token',
  name: 'reset-password-form',
  component: _components_page_ResetPasswordForm__WEBPACK_IMPORTED_MODULE_66__["default"],
  meta: {
    auth: false
  }
}, {
  path: '/reset-email/:token',
  name: 'reset-email-form',
  component: _components_page_ResetEmailForm__WEBPACK_IMPORTED_MODULE_67__["default"],
  meta: {
    auth: false
  }
}, {
  path: '/',
  beforeEnter: checkRoleRoute,
  name: 'login'
}, {
  path: '/login',
  component: _components_login_LoginComponent__WEBPACK_IMPORTED_MODULE_2__["default"]
}, {
  path: '/admin',
  component: _shared_layout_AdminLayout__WEBPACK_IMPORTED_MODULE_5__["default"],
  name: 'Admin',
  beforeEnter: function beforeEnter(to, from, next) {
    if (localStorage.getItem('token')) {
      next();
    } else {
      localStorage.removeItem('token');
      localStorage.removeItem('token', 'user', 'loggedIn');
      localStorage.removeItem('loggedIn');
      localStorage.removeItem('user');
      next('/login');
    }
  },
  redirect: '/admin/student/list',
  children: [//Admin Routes
  {
    path: 'dashboard',
    beforeEnter: isADMIN,
    component: _components_admin_DashboardComponent__WEBPACK_IMPORTED_MODULE_18__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isADMIN,
    component: _components_StudentListComponent__WEBPACK_IMPORTED_MODULE_20__["default"],
    name: 'Student List'
  }, {
    path: 'colleges',
    beforeEnter: isADMIN,
    component: _components_admin_CollegesComponent__WEBPACK_IMPORTED_MODULE_21__["default"],
    name: 'Colleges'
  }, {
    path: 'campuses',
    beforeEnter: isADMIN,
    component: _components_admin_CampusesComponent__WEBPACK_IMPORTED_MODULE_22__["default"],
    name: 'Campuses'
  }, {
    path: 'programs',
    beforeEnter: isADMIN,
    component: _components_admin_ProgramsComponent__WEBPACK_IMPORTED_MODULE_24__["default"],
    name: 'Programs'
  }, {
    path: 'sections',
    beforeEnter: isADMIN,
    component: _components_admin_SectionsComponent__WEBPACK_IMPORTED_MODULE_26__["default"],
    name: 'Sections'
  }, {
    path: 'semesters',
    beforeEnter: isADMIN,
    component: _components_admin_SemestersComponent__WEBPACK_IMPORTED_MODULE_27__["default"],
    name: 'Semesters'
  }, {
    path: 'graduations',
    beforeEnter: isADMIN,
    component: _components_admin_GraduationsComponent__WEBPACK_IMPORTED_MODULE_23__["default"],
    name: 'Graduations'
  }, {
    path: 'purposes',
    beforeEnter: isADMIN,
    component: _components_admin_PurposesComponent__WEBPACK_IMPORTED_MODULE_25__["default"],
    name: 'Purposes'
  }, {
    path: 'stcouncils',
    beforeEnter: isADMIN,
    component: _components_admin_signatory_StudentCouncilComponent__WEBPACK_IMPORTED_MODULE_48__["default"],
    name: 'Student Council'
  }, {
    path: 'deans',
    beforeEnter: isADMIN,
    component: _components_admin_signatory_DeanComponent__WEBPACK_IMPORTED_MODULE_44__["default"],
    name: 'Dean'
  }, {
    path: 'osas',
    beforeEnter: isADMIN,
    component: _components_admin_signatory_OSASComponent__WEBPACK_IMPORTED_MODULE_46__["default"],
    name: 'OSAS'
  }, {
    path: 'library',
    beforeEnter: isADMIN,
    component: _components_admin_signatory_LibraryComponent__WEBPACK_IMPORTED_MODULE_45__["default"],
    name: 'Library'
  }, {
    path: 'cashiers',
    beforeEnter: isADMIN,
    component: _components_admin_signatory_CashierComponent__WEBPACK_IMPORTED_MODULE_43__["default"],
    name: 'Cashier'
  }, {
    path: 'registrar',
    beforeEnter: isADMIN,
    component: _components_admin_signatory_RegistrarComponent__WEBPACK_IMPORTED_MODULE_49__["default"],
    name: 'Registrar'
  }, {
    path: 'staff',
    beforeEnter: isADMIN,
    component: _components_admin_signatory_StaffComponent__WEBPACK_IMPORTED_MODULE_50__["default"],
    name: 'Staff'
  }, {
    path: 'programdirector',
    beforeEnter: isADMIN,
    component: _components_admin_signatory_ProgramDirectorComponent__WEBPACK_IMPORTED_MODULE_47__["default"],
    name: 'Program Director'
  }, //Signatories Routes
  {
    path: 'clearance/requests',
    beforeEnter: isADMIN,
    component: _components_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_29__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isADMIN,
    component: _components_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_30__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isADMIN,
    component: _components_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_31__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'sias/account',
    beforeEnter: isADMIN,
    component: _components_SIASAccountComponent__WEBPACK_IMPORTED_MODULE_28__["default"],
    name: 'Sias Account'
  }, //Student Routes
  {
    path: 'active/clearance',
    beforeEnter: isADMIN,
    component: _components_ActiveClearanceComponent__WEBPACK_IMPORTED_MODULE_32__["default"],
    name: 'Active Clearance'
  }, {
    path: 'clearance/list',
    beforeEnter: isADMIN,
    component: _components_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_35__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isADMIN,
    component: _components_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_36__["default"],
    name: 'Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isADMIN,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }, //Users Route
  {
    path: 'users',
    beforeEnter: isADMIN,
    component: _components_admin_UsersComponent__WEBPACK_IMPORTED_MODULE_41__["default"],
    name: 'Users'
  }]
}, //Cashier Links
{
  path: '/stcouncil',
  component: _shared_layout_SignatoryLayout__WEBPACK_IMPORTED_MODULE_4__["default"],
  name: 'STCOUNCIL',
  redirect: '/stcouncil/clearance/requests',
  children: [//PD Routes
  {
    path: 'dashboard',
    beforeEnter: isSTCOUNCIL,
    component: _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isSTCOUNCIL,
    component: _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__["default"],
    name: 'Student List'
  }, //Signatories Routes
  {
    path: 'clearance/requests',
    beforeEnter: isSTCOUNCIL,
    component: _components_programdirector_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_54__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isSTCOUNCIL,
    component: _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isSTCOUNCIL,
    component: _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'clearance/list',
    beforeEnter: isSTCOUNCIL,
    component: _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isSTCOUNCIL,
    component: _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__["default"],
    name: 'Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isSTCOUNCIL,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }, {
    path: 'users',
    beforeEnter: isSTCOUNCIL,
    component: _components_admin_SignatoryUsersComponent__WEBPACK_IMPORTED_MODULE_42__["default"],
    name: 'Users'
  }]
}, //Cashier Links
{
  path: '/cashier',
  component: _shared_layout_SignatoryLayout__WEBPACK_IMPORTED_MODULE_4__["default"],
  name: 'CASHIER',
  redirect: '/cashier/clearance/requests',
  children: [//PD Routes
  {
    path: 'dashboard',
    beforeEnter: isCASHIER,
    component: _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isCASHIER,
    component: _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__["default"],
    name: 'Student List'
  }, //Signatories Routes
  {
    path: 'clearance/requests',
    beforeEnter: isCASHIER,
    component: _components_programdirector_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_54__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isCASHIER,
    component: _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isCASHIER,
    component: _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'clearance/list',
    beforeEnter: isCASHIER,
    component: _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isCASHIER,
    component: _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__["default"],
    name: 'Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isCASHIER,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }]
}, //OSAS Links
{
  path: '/osas',
  component: _shared_layout_SignatoryLayout__WEBPACK_IMPORTED_MODULE_4__["default"],
  name: 'OSAS Other Campus',
  redirect: '/osas/clearance/requests',
  children: [//PD Routes
  {
    path: 'dashboard',
    beforeEnter: isOSAS,
    component: _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isOSAS,
    component: _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__["default"],
    name: 'Student List'
  }, //Signatories Routes
  {
    path: 'clearance/requests',
    beforeEnter: isOSAS,
    component: _components_programdirector_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_54__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isOSAS,
    component: _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isOSAS,
    component: _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'clearance/list',
    beforeEnter: isOSAS,
    component: _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isOSAS,
    component: _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__["default"],
    name: 'Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isOSAS,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }, {
    path: 'users',
    beforeEnter: isOSAS,
    component: _components_admin_SignatoryUsersComponent__WEBPACK_IMPORTED_MODULE_42__["default"],
    name: 'Users'
  }]
}, //OSAS Links
{
  path: '/osas/goa',
  component: _shared_layout_SignatoryLayout__WEBPACK_IMPORTED_MODULE_4__["default"],
  name: 'OSAS',
  redirect: '/osas/goa/clearance/requests',
  children: [//PD Routes
  {
    path: 'dashboard',
    beforeEnter: isOSAS,
    component: _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isOSAS,
    component: _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__["default"],
    name: 'Student List'
  }, //Signatories Routes
  {
    path: 'clearance/requests/cas',
    beforeEnter: isOSAS,
    component: _components_programdirector_ClearanceCASRequestsComponent__WEBPACK_IMPORTED_MODULE_55__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'clearance/requests/cbm',
    beforeEnter: isOSAS,
    component: _components_programdirector_ClearanceCBMRequestsComponent__WEBPACK_IMPORTED_MODULE_56__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'clearance/requests/cet',
    beforeEnter: isOSAS,
    component: _components_programdirector_ClearanceCETRequestsComponent__WEBPACK_IMPORTED_MODULE_57__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'clearance/requests/coed',
    beforeEnter: isOSAS,
    component: _components_programdirector_ClearanceCOEDRequestsComponent__WEBPACK_IMPORTED_MODULE_58__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'clearance/requests/sgs',
    beforeEnter: isOSAS,
    component: _components_programdirector_ClearanceSGSRequestsComponent__WEBPACK_IMPORTED_MODULE_59__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isOSAS,
    component: _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isOSAS,
    component: _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'clearance/list',
    beforeEnter: isOSAS,
    component: _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isOSAS,
    component: _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__["default"],
    name: 'Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isOSAS,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }, {
    path: 'users',
    beforeEnter: isOSAS,
    component: _components_admin_SignatoryUsersComponent__WEBPACK_IMPORTED_MODULE_42__["default"],
    name: 'Users'
  }]
}, //REGISTRARSTAFF Links
{
  path: '/registrarstaff',
  component: _shared_layout_SignatoryLayout__WEBPACK_IMPORTED_MODULE_4__["default"],
  name: 'REGISTRARSTAFF',
  redirect: '/registrarstaff/clearance/requests',
  children: [//PD Routes
  {
    path: 'dashboard',
    beforeEnter: isREGISTRARSTAFF,
    component: _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isREGISTRARSTAFF,
    component: _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__["default"],
    name: 'Student List'
  }, //Signatories Routes
  {
    path: 'clearance/requests',
    beforeEnter: isREGISTRARSTAFF,
    component: _components_programdirector_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_54__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isREGISTRARSTAFF,
    component: _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isREGISTRARSTAFF,
    component: _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'clearance/list',
    beforeEnter: isREGISTRARSTAFF,
    component: _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isREGISTRARSTAFF,
    component: _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__["default"],
    name: 'Deficiency List'
  }, {
    path: 'deficiency/all/list',
    beforeEnter: isREGISTRARSTAFF,
    component: _components_RegistrarDeficiencyListComponent__WEBPACK_IMPORTED_MODULE_37__["default"],
    name: 'Registrar Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isREGISTRARSTAFF,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }, {
    path: 'users',
    beforeEnter: isREGISTRARSTAFF,
    component: _components_admin_SignatoryUsersComponent__WEBPACK_IMPORTED_MODULE_42__["default"],
    name: 'Users'
  }]
}, //REGISTRAR Links
{
  path: '/registrar',
  component: _shared_layout_SignatoryLayout__WEBPACK_IMPORTED_MODULE_4__["default"],
  name: 'REGISTRAR',
  redirect: '/registrar/clearance/requests',
  children: [//PD Routes
  {
    path: 'dashboard',
    beforeEnter: isREGISTRAR,
    component: _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isREGISTRAR,
    component: _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__["default"],
    name: 'Student List'
  }, //Signatories Routes
  {
    path: 'clearance/requests',
    beforeEnter: isREGISTRAR,
    component: _components_programdirector_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_54__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isREGISTRAR,
    component: _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isREGISTRAR,
    component: _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'clearance/list',
    beforeEnter: isREGISTRAR,
    component: _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isREGISTRAR,
    component: _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__["default"],
    name: 'Deficiency List'
  }, {
    path: 'deficiency/all/list',
    beforeEnter: isREGISTRAR,
    component: _components_RegistrarDeficiencyListComponent__WEBPACK_IMPORTED_MODULE_37__["default"],
    name: 'Registrar Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isREGISTRAR,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }, {
    path: 'users',
    beforeEnter: isREGISTRAR,
    component: _components_admin_SignatoryUsersComponent__WEBPACK_IMPORTED_MODULE_42__["default"],
    name: 'Users'
  }]
}, //DEAN Links
{
  path: '/dean',
  component: _shared_layout_SignatoryLayout__WEBPACK_IMPORTED_MODULE_4__["default"],
  name: 'DEAN',
  redirect: '/dean/clearance/requests',
  children: [{
    path: 'dashboard',
    beforeEnter: isDEAN,
    component: _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isDEAN,
    component: _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__["default"],
    name: 'Student List'
  }, //Signatories Routes
  {
    path: 'clearance/requests',
    beforeEnter: isDEAN,
    component: _components_programdirector_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_54__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isDEAN,
    component: _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isDEAN,
    component: _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'clearance/list',
    beforeEnter: isDEAN,
    component: _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isDEAN,
    component: _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__["default"],
    name: 'Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isDEAN,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }]
}, //LIBRARY Links
{
  path: '/library',
  component: _shared_layout_SignatoryLayout__WEBPACK_IMPORTED_MODULE_4__["default"],
  name: 'LIBRARY',
  redirect: '/library/clearance/requests',
  children: [{
    path: 'dashboard',
    beforeEnter: isLIBRARY,
    component: _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isLIBRARY,
    component: _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__["default"],
    name: 'Student List'
  }, //Signatories Routes
  {
    path: 'clearance/requests',
    beforeEnter: isLIBRARY,
    component: _components_programdirector_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_54__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isLIBRARY,
    component: _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isLIBRARY,
    component: _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'clearance/list',
    beforeEnter: isLIBRARY,
    component: _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isLIBRARY,
    component: _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__["default"],
    name: 'Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isLIBRARY,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }]
}, //pd links
{
  path: '/pd',
  component: _shared_layout_SignatoryLayout__WEBPACK_IMPORTED_MODULE_4__["default"],
  name: 'pd',
  redirect: '/pd/clearance/requests',
  children: [//PD Routes
  {
    path: 'dashboard',
    beforeEnter: isPD,
    component: _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isPD,
    component: _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__["default"],
    name: 'Student List'
  }, //Signatories Routes
  {
    path: 'clearance/requests',
    beforeEnter: isPD,
    component: _components_programdirector_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_54__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isPD,
    component: _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isPD,
    component: _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'clearance/list',
    beforeEnter: isPD,
    component: _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isPD,
    component: _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__["default"],
    name: 'Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isPD,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }, {
    path: 'users',
    beforeEnter: isPD,
    component: _components_admin_SignatoryUsersComponent__WEBPACK_IMPORTED_MODULE_42__["default"],
    name: 'Users'
  }]
}, //adviser links
{
  path: '/adviser',
  component: _components_adviser_ADVISERComponent__WEBPACK_IMPORTED_MODULE_17__["default"],
  name: 'adviser',
  redirect: '/adviser/dashboard',
  children: [//PD Routes
  {
    path: 'dashboard',
    beforeEnter: isADVISER,
    component: _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isADVISER,
    component: _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__["default"],
    name: 'Student List'
  }, //Signatories Routes
  {
    path: 'clearance/requests',
    beforeEnter: isADVISER,
    component: _components_programdirector_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_54__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isADVISER,
    component: _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isADVISER,
    component: _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'clearance/list',
    beforeEnter: isADVISER,
    component: _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isADVISER,
    component: _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__["default"],
    name: 'Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isADVISER,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }]
}, //principal links
{
  path: '/principal',
  component: _components_principal_PRINCIPALComponent__WEBPACK_IMPORTED_MODULE_16__["default"],
  name: 'principal',
  redirect: '/principal/dashboard',
  children: [//PD Routes
  {
    path: 'dashboard',
    beforeEnter: isPRINCIPAL,
    component: _components_programdirector_DashboardComponent__WEBPACK_IMPORTED_MODULE_52__["default"],
    name: 'Dashboard'
  }, {
    path: 'student/list',
    beforeEnter: isPRINCIPAL,
    component: _components_programdirector_StudentListComponent__WEBPACK_IMPORTED_MODULE_53__["default"],
    name: 'Student List'
  }, //Signatories Routes
  {
    path: 'clearance/requests',
    beforeEnter: isPRINCIPAL,
    component: _components_programdirector_ClearanceRequestsComponent__WEBPACK_IMPORTED_MODULE_54__["default"],
    name: 'Clearance Requests'
  }, {
    path: 'cleared/clearances',
    beforeEnter: isPRINCIPAL,
    component: _components_programdirector_ClearedClearancesComponent__WEBPACK_IMPORTED_MODULE_60__["default"],
    name: 'Cleared Clearances'
  }, {
    path: 'submitted/clearances',
    beforeEnter: isPRINCIPAL,
    component: _components_programdirector_SubmittedClearancesComponent__WEBPACK_IMPORTED_MODULE_61__["default"],
    name: 'Submitted Clearances'
  }, {
    path: 'clearance/list',
    beforeEnter: isPRINCIPAL,
    component: _components_programdirector_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_62__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isPRINCIPAL,
    component: _components_programdirector_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_63__["default"],
    name: 'Deficiency List'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isPRINCIPAL,
    component: _components_SettingsComponent__WEBPACK_IMPORTED_MODULE_38__["default"],
    name: 'Settings'
  }]
}, //student links
{
  path: '/student',
  component: _shared_layout_StudentLayout__WEBPACK_IMPORTED_MODULE_3__["default"],
  name: 'Student',
  beforeEnter: function beforeEnter(to, from, next) {
    if (localStorage.getItem('token')) {
      next();
    } else {
      localStorage.removeItem('token');
      localStorage.removeItem('token', 'user', 'loggedIn');
      localStorage.removeItem('loggedIn');
      localStorage.removeItem('user');
      next('/login');
    }
  },
  redirect: '/student/active/clearance',
  children: [//Admin Routes
  {
    path: 'dashboard',
    beforeEnter: isSTUDENT,
    component: _components_admin_DashboardComponent__WEBPACK_IMPORTED_MODULE_18__["default"],
    name: 'Dashboard'
  }, //Student Routes
  {
    path: 'active/clearance',
    beforeEnter: isSTUDENT,
    component: _components_ActiveClearanceComponent__WEBPACK_IMPORTED_MODULE_32__["default"],
    name: 'Active Clearance'
  }, {
    path: 'clearance/list',
    beforeEnter: isSTUDENT,
    component: _components_student_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_64__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isSTUDENT,
    component: _components_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_36__["default"],
    name: 'Deficiency List'
  }, {
    path: 'sias/account',
    beforeEnter: isSTUDENT,
    component: _components_student_StudentSIASComponent__WEBPACK_IMPORTED_MODULE_40__["default"],
    name: 'SIAS Account'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isSTUDENT,
    component: _components_student_SettingsComponent__WEBPACK_IMPORTED_MODULE_39__["default"],
    name: 'Settings'
  }]
}, //SGS student links
{
  path: '/sgs/student',
  component: _shared_layout_StudentLayout__WEBPACK_IMPORTED_MODULE_3__["default"],
  name: 'SGSStudent',
  beforeEnter: function beforeEnter(to, from, next) {
    if (localStorage.getItem('token')) {
      next();
    } else {
      localStorage.removeItem('token');
      localStorage.removeItem('token', 'user', 'loggedIn');
      localStorage.removeItem('loggedIn');
      localStorage.removeItem('user');
      next('/login');
    }
  },
  redirect: '/sgs/student/active/clearance',
  children: [//Admin Routes
  {
    path: 'dashboard',
    beforeEnter: isSTUDENTSGS,
    component: _components_admin_DashboardComponent__WEBPACK_IMPORTED_MODULE_18__["default"],
    name: 'Dashboard'
  }, //Student Routes
  {
    path: 'active/clearance',
    beforeEnter: isSTUDENTSGS,
    component: _components_ActiveClearanceComponentSGS__WEBPACK_IMPORTED_MODULE_34__["default"],
    name: 'Active Clearance'
  }, {
    path: 'clearance/list',
    beforeEnter: isSTUDENTSGS,
    component: _components_student_ClearanceListComponent__WEBPACK_IMPORTED_MODULE_64__["default"],
    name: 'Clearance List'
  }, {
    path: 'deficiency/list',
    beforeEnter: isSTUDENTSGS,
    component: _components_DeficiencyListComponent__WEBPACK_IMPORTED_MODULE_36__["default"],
    name: 'Deficiency List'
  }, {
    path: 'sias/account',
    beforeEnter: isSTUDENTSGS,
    component: _components_student_StudentSIASComponent__WEBPACK_IMPORTED_MODULE_40__["default"],
    name: 'SIAS Account'
  }, //Settings Route
  {
    path: 'settings',
    beforeEnter: isSTUDENTSGS,
    component: _components_student_SettingsComponent__WEBPACK_IMPORTED_MODULE_39__["default"],
    name: 'Settings'
  }]
}];

function requireLogin(to, from, next) {
  axios.get('/api/v1/verify', {
    'user': localStorage.getItem('user')
  }).then(function (res) {
    return next();
  })["catch"](function (err) {
    return next('/login');
  });
} // function backLogin(){
//     localStorage.removeItem('token');
//     localStorage.removeItem('token','user','loggedIn');
//     localStorage.removeItem('loggedIn');
//     localStorage.removeItem('user');
//     next('/login');
// }


function isADMIN(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "admin") {
      // console.log('Next:');
      // console.log(to);
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isPD(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "pd") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isDEAN(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "dean") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isSTCOUNCIL(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "stcouncil") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isCASHIER(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "cashier") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isLIBRARY(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "library") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isOSAS(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "osas") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isREGISTRAR(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "registrar") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isREGISTRARSTAFF(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "registrarstaff") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isADVISER(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "adviser") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isPRINCIPAL(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "principal") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isSTUDENT(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    // console.log(to)
    // console.log(from)
    // console.log(next)
    // console.log(res.data.user_role.role.name)
    if (res.data.user_role.role.name == "student") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isSTUDENTLHS(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "student" && res.data.student == "Laboratory High School") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function isSTUDENTSGS(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "student" && res.data.student == "School of Graduate Studies and Research") {
      next();
    } else {
      next('/');
    }
  })["catch"](function (err) {
    localStorage.removeItem('token');
    localStorage.removeItem('token', 'user', 'loggedIn');
    localStorage.removeItem('loggedIn');
    localStorage.removeItem('user');
    next('/login');
  });
}

function checkRoleRoute(to, from, next) {
  axios.get('/api/v1/verify').then(function (res) {
    if (res.data.user_role.role.name == "admin") {
      next('/admin');
    } else if (res.data.user_role.role.name == "pd") {
      next('/pd');
    } else if (res.data.user_role.role.name == "dean") {
      next('/dean');
    } else if (res.data.user_role.role.name == "stcouncil") {
      next('/stcouncil');
    } else if (res.data.user_role.role.name == "cashier") {
      next('/cashier');
    } else if (res.data.user_role.role.name == "library") {
      next('/library');
    } else if (res.data.user_role.role.name == "osas") {
      if (res.data.staff_campus == "Goa Campus") {
        next('/osas');
      } else {
        next('/osas');
      }
    } else if (res.data.user_role.role.name == "registrar") {
      next('/registrar');
    } else if (res.data.user_role.role.name == "registrarstaff") {
      next('/registrarstaff');
    } else if (res.data.user_role.role.name == "adviser") {
      next('/adviser');
    } else if (res.data.user_role.role.name == "principal") {
      next('/principal');
    } else if (res.data.user_role.role.name == "student") {
      if (res.data.student == "School of Graduate Studies and Research") {
        next('/student');
      } else {
        next('/student');
      }
    } else {
      localStorage.removeItem('token');
      localStorage.removeItem('token', 'user', 'loggedIn');
      localStorage.removeItem('loggedIn');
      localStorage.removeItem('user');
      next('/login');
    }
  })["catch"](function (err) {
    {
      localStorage.removeItem('token');
      localStorage.removeItem('token', 'user', 'loggedIn');
      localStorage.removeItem('loggedIn');
      localStorage.removeItem('user');
      next('/login');
    }
  });
}

var router = new vue_router__WEBPACK_IMPORTED_MODULE_1__["default"]({
  routes: routes
}); // router.beforeEach((to,from,next) => {
//     const token = localStorage.getItem('token') || null
//     window.axios.defaults.headers['Authorization'] = "Bearer" + token;
//     next();
// })

/* harmony default export */ __webpack_exports__["default"] = (new vue_router__WEBPACK_IMPORTED_MODULE_1__["default"]({
  routes: routes
}));

/***/ }),

/***/ "./resources/js/shared/layout/AdminLayout.vue":
/*!****************************************************!*\
  !*** ./resources/js/shared/layout/AdminLayout.vue ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _AdminLayout_vue_vue_type_template_id_537e8230___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AdminLayout.vue?vue&type=template&id=537e8230& */ "./resources/js/shared/layout/AdminLayout.vue?vue&type=template&id=537e8230&");
/* harmony import */ var _AdminLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AdminLayout.vue?vue&type=script&lang=js& */ "./resources/js/shared/layout/AdminLayout.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _AdminLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _AdminLayout_vue_vue_type_template_id_537e8230___WEBPACK_IMPORTED_MODULE_0__["render"],
  _AdminLayout_vue_vue_type_template_id_537e8230___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/shared/layout/AdminLayout.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/shared/layout/AdminLayout.vue?vue&type=script&lang=js&":
/*!*****************************************************************************!*\
  !*** ./resources/js/shared/layout/AdminLayout.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AdminLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./AdminLayout.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/AdminLayout.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AdminLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/shared/layout/AdminLayout.vue?vue&type=template&id=537e8230&":
/*!***********************************************************************************!*\
  !*** ./resources/js/shared/layout/AdminLayout.vue?vue&type=template&id=537e8230& ***!
  \***********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AdminLayout_vue_vue_type_template_id_537e8230___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./AdminLayout.vue?vue&type=template&id=537e8230& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/AdminLayout.vue?vue&type=template&id=537e8230&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AdminLayout_vue_vue_type_template_id_537e8230___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AdminLayout_vue_vue_type_template_id_537e8230___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/shared/layout/OSCSAppBar.vue":
/*!***************************************************!*\
  !*** ./resources/js/shared/layout/OSCSAppBar.vue ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _OSCSAppBar_vue_vue_type_template_id_e60b2102___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OSCSAppBar.vue?vue&type=template&id=e60b2102& */ "./resources/js/shared/layout/OSCSAppBar.vue?vue&type=template&id=e60b2102&");
/* harmony import */ var _OSCSAppBar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OSCSAppBar.vue?vue&type=script&lang=js& */ "./resources/js/shared/layout/OSCSAppBar.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _OSCSAppBar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _OSCSAppBar_vue_vue_type_template_id_e60b2102___WEBPACK_IMPORTED_MODULE_0__["render"],
  _OSCSAppBar_vue_vue_type_template_id_e60b2102___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/shared/layout/OSCSAppBar.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/shared/layout/OSCSAppBar.vue?vue&type=script&lang=js&":
/*!****************************************************************************!*\
  !*** ./resources/js/shared/layout/OSCSAppBar.vue?vue&type=script&lang=js& ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSAppBar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./OSCSAppBar.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/OSCSAppBar.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSAppBar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/shared/layout/OSCSAppBar.vue?vue&type=template&id=e60b2102&":
/*!**********************************************************************************!*\
  !*** ./resources/js/shared/layout/OSCSAppBar.vue?vue&type=template&id=e60b2102& ***!
  \**********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSAppBar_vue_vue_type_template_id_e60b2102___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./OSCSAppBar.vue?vue&type=template&id=e60b2102& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/OSCSAppBar.vue?vue&type=template&id=e60b2102&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSAppBar_vue_vue_type_template_id_e60b2102___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSAppBar_vue_vue_type_template_id_e60b2102___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/shared/layout/OSCSNavigationDrawer.vue":
/*!*************************************************************!*\
  !*** ./resources/js/shared/layout/OSCSNavigationDrawer.vue ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _OSCSNavigationDrawer_vue_vue_type_template_id_54b9a5b2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OSCSNavigationDrawer.vue?vue&type=template&id=54b9a5b2& */ "./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=template&id=54b9a5b2&");
/* harmony import */ var _OSCSNavigationDrawer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OSCSNavigationDrawer.vue?vue&type=script&lang=js& */ "./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _OSCSNavigationDrawer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _OSCSNavigationDrawer_vue_vue_type_template_id_54b9a5b2___WEBPACK_IMPORTED_MODULE_0__["render"],
  _OSCSNavigationDrawer_vue_vue_type_template_id_54b9a5b2___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/shared/layout/OSCSNavigationDrawer.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=script&lang=js&":
/*!**************************************************************************************!*\
  !*** ./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSNavigationDrawer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./OSCSNavigationDrawer.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSNavigationDrawer_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=template&id=54b9a5b2&":
/*!********************************************************************************************!*\
  !*** ./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=template&id=54b9a5b2& ***!
  \********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSNavigationDrawer_vue_vue_type_template_id_54b9a5b2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./OSCSNavigationDrawer.vue?vue&type=template&id=54b9a5b2& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/OSCSNavigationDrawer.vue?vue&type=template&id=54b9a5b2&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSNavigationDrawer_vue_vue_type_template_id_54b9a5b2___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSNavigationDrawer_vue_vue_type_template_id_54b9a5b2___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/shared/layout/SignatoryLayout.vue":
/*!********************************************************!*\
  !*** ./resources/js/shared/layout/SignatoryLayout.vue ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _SignatoryLayout_vue_vue_type_template_id_c576fe32___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SignatoryLayout.vue?vue&type=template&id=c576fe32& */ "./resources/js/shared/layout/SignatoryLayout.vue?vue&type=template&id=c576fe32&");
/* harmony import */ var _SignatoryLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SignatoryLayout.vue?vue&type=script&lang=js& */ "./resources/js/shared/layout/SignatoryLayout.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _SignatoryLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _SignatoryLayout_vue_vue_type_template_id_c576fe32___WEBPACK_IMPORTED_MODULE_0__["render"],
  _SignatoryLayout_vue_vue_type_template_id_c576fe32___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/shared/layout/SignatoryLayout.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/shared/layout/SignatoryLayout.vue?vue&type=script&lang=js&":
/*!*********************************************************************************!*\
  !*** ./resources/js/shared/layout/SignatoryLayout.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SignatoryLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./SignatoryLayout.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/SignatoryLayout.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SignatoryLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/shared/layout/SignatoryLayout.vue?vue&type=template&id=c576fe32&":
/*!***************************************************************************************!*\
  !*** ./resources/js/shared/layout/SignatoryLayout.vue?vue&type=template&id=c576fe32& ***!
  \***************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SignatoryLayout_vue_vue_type_template_id_c576fe32___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./SignatoryLayout.vue?vue&type=template&id=c576fe32& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/SignatoryLayout.vue?vue&type=template&id=c576fe32&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SignatoryLayout_vue_vue_type_template_id_c576fe32___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SignatoryLayout_vue_vue_type_template_id_c576fe32___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/shared/layout/StudentLayout.vue":
/*!******************************************************!*\
  !*** ./resources/js/shared/layout/StudentLayout.vue ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _StudentLayout_vue_vue_type_template_id_4bbd165c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StudentLayout.vue?vue&type=template&id=4bbd165c& */ "./resources/js/shared/layout/StudentLayout.vue?vue&type=template&id=4bbd165c&");
/* harmony import */ var _StudentLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StudentLayout.vue?vue&type=script&lang=js& */ "./resources/js/shared/layout/StudentLayout.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _StudentLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _StudentLayout_vue_vue_type_template_id_4bbd165c___WEBPACK_IMPORTED_MODULE_0__["render"],
  _StudentLayout_vue_vue_type_template_id_4bbd165c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/shared/layout/StudentLayout.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/shared/layout/StudentLayout.vue?vue&type=script&lang=js&":
/*!*******************************************************************************!*\
  !*** ./resources/js/shared/layout/StudentLayout.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./StudentLayout.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/StudentLayout.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentLayout_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/shared/layout/StudentLayout.vue?vue&type=template&id=4bbd165c&":
/*!*************************************************************************************!*\
  !*** ./resources/js/shared/layout/StudentLayout.vue?vue&type=template&id=4bbd165c& ***!
  \*************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentLayout_vue_vue_type_template_id_4bbd165c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./StudentLayout.vue?vue&type=template&id=4bbd165c& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/layout/StudentLayout.vue?vue&type=template&id=4bbd165c&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentLayout_vue_vue_type_template_id_4bbd165c___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StudentLayout_vue_vue_type_template_id_4bbd165c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue":
/*!**************************************************************************!*\
  !*** ./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _OSCSActiveClearanceEnrollmentTable_vue_vue_type_template_id_0680de76___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OSCSActiveClearanceEnrollmentTable.vue?vue&type=template&id=0680de76& */ "./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=template&id=0680de76&");
/* harmony import */ var _OSCSActiveClearanceEnrollmentTable_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OSCSActiveClearanceEnrollmentTable.vue?vue&type=script&lang=js& */ "./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _OSCSActiveClearanceEnrollmentTable_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _OSCSActiveClearanceEnrollmentTable_vue_vue_type_template_id_0680de76___WEBPACK_IMPORTED_MODULE_0__["render"],
  _OSCSActiveClearanceEnrollmentTable_vue_vue_type_template_id_0680de76___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************!*\
  !*** ./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSActiveClearanceEnrollmentTable_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./OSCSActiveClearanceEnrollmentTable.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSActiveClearanceEnrollmentTable_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=template&id=0680de76&":
/*!*********************************************************************************************************!*\
  !*** ./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=template&id=0680de76& ***!
  \*********************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSActiveClearanceEnrollmentTable_vue_vue_type_template_id_0680de76___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib??vue-loader-options!./OSCSActiveClearanceEnrollmentTable.vue?vue&type=template&id=0680de76& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/shared/table/OSCSActiveClearanceEnrollmentTable.vue?vue&type=template&id=0680de76&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSActiveClearanceEnrollmentTable_vue_vue_type_template_id_0680de76___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OSCSActiveClearanceEnrollmentTable_vue_vue_type_template_id_0680de76___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./resources/js/store/actions.js":
/*!***************************************!*\
  !*** ./resources/js/store/actions.js ***!
  \***************************************/
/*! exports provided: getActiveClearance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getActiveClearance", function() { return getActiveClearance; });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);

var getActiveClearance = function getActiveClearance(_ref) {
  var commit = _ref.commit;
  axios__WEBPACK_IMPORTED_MODULE_0___default.a.get("/api/v1/active-clearance").then(function (response) {
    commit('SET_ACTIVECLEARANCE', response.data);
  });
};

/***/ }),

/***/ "./resources/js/store/getters.js":
/*!***************************************!*\
  !*** ./resources/js/store/getters.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./resources/js/store/index.js":
/*!*************************************!*\
  !*** ./resources/js/store/index.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.common.js");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vuex */ "./node_modules/vuex/dist/vuex.esm.js");
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state */ "./resources/js/store/state.js");
/* harmony import */ var _getters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getters */ "./resources/js/store/getters.js");
/* harmony import */ var _getters__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_getters__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _mutations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mutations */ "./resources/js/store/mutations.js");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./actions */ "./resources/js/store/actions.js");
/* harmony import */ var _modules_dashboard__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/dashboard */ "./resources/js/store/modules/dashboard/index.js");

 // import currentUser from "./modules/currentUser"
// import user from "./modules/user"
// import activeclearance from "./modules/activeclearance"

vue__WEBPACK_IMPORTED_MODULE_0___default.a.use(vuex__WEBPACK_IMPORTED_MODULE_1__["default"]);





/* harmony default export */ __webpack_exports__["default"] = (new vuex__WEBPACK_IMPORTED_MODULE_1__["default"].Store({
  modules: {
    dashboard: _modules_dashboard__WEBPACK_IMPORTED_MODULE_6__["default"]
  },
  // modules: {
  //     activeclearance,
  //     currentUser,
  //     user,
  // },
  // state: {
  //     error: "",
  // },
  // actions:{
  // }
  state: _state__WEBPACK_IMPORTED_MODULE_2__["default"],
  getters: _getters__WEBPACK_IMPORTED_MODULE_3__,
  mutations: _mutations__WEBPACK_IMPORTED_MODULE_4__,
  actions: _actions__WEBPACK_IMPORTED_MODULE_5__
}));

/***/ }),

/***/ "./resources/js/store/modules/dashboard/actions.js":
/*!*********************************************************!*\
  !*** ./resources/js/store/modules/dashboard/actions.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./resources/js/store/modules/dashboard/getters.js":
/*!*********************************************************!*\
  !*** ./resources/js/store/modules/dashboard/getters.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./resources/js/store/modules/dashboard/index.js":
/*!*******************************************************!*\
  !*** ./resources/js/store/modules/dashboard/index.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.common.js");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vuex */ "./node_modules/vuex/dist/vuex.esm.js");
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state */ "./resources/js/store/modules/dashboard/state.js");
/* harmony import */ var _getters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getters */ "./resources/js/store/modules/dashboard/getters.js");
/* harmony import */ var _getters__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_getters__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _mutations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mutations */ "./resources/js/store/modules/dashboard/mutations.js");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./actions */ "./resources/js/store/modules/dashboard/actions.js");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_actions__WEBPACK_IMPORTED_MODULE_5__);


vue__WEBPACK_IMPORTED_MODULE_0___default.a.use(vuex__WEBPACK_IMPORTED_MODULE_1__["default"]);




/* harmony default export */ __webpack_exports__["default"] = (new vuex__WEBPACK_IMPORTED_MODULE_1__["default"].Store({
  state: _state__WEBPACK_IMPORTED_MODULE_2__["default"],
  getters: _getters__WEBPACK_IMPORTED_MODULE_3__,
  mutations: _mutations__WEBPACK_IMPORTED_MODULE_4__,
  actions: _actions__WEBPACK_IMPORTED_MODULE_5__
}));

/***/ }),

/***/ "./resources/js/store/modules/dashboard/mutations.js":
/*!***********************************************************!*\
  !*** ./resources/js/store/modules/dashboard/mutations.js ***!
  \***********************************************************/
/*! exports provided: SET_DASHBOARD */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_DASHBOARD", function() { return SET_DASHBOARD; });
var SET_DASHBOARD = function SET_DASHBOARD(state, _ref) {
  var completed = _ref.completed,
      totalStudent = _ref.totalStudent,
      approvedRequest = _ref.approvedRequest,
      pendingRequest = _ref.pendingRequest,
      totalClearanceRequest = _ref.totalClearanceRequest,
      totalActivatedAccount = _ref.totalActivatedAccount,
      semester = _ref.semester;
  state.completed = completed;
  state.totalStudent = totalStudent;
  state.approvedRequest = approvedRequest;
  state.pendingRequest = pendingRequest;
  state.totalClearanceRequest = totalClearanceRequest;
  state.totalActivatedAccount = totalActivatedAccount;
  state.semester = semester;
};

/***/ }),

/***/ "./resources/js/store/modules/dashboard/state.js":
/*!*******************************************************!*\
  !*** ./resources/js/store/modules/dashboard/state.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  completed: 0,
  totalStudent: 0,
  approvedRequest: 0,
  pendingRequest: 0,
  totalClearanceRequest: 0,
  totalActivatedAccount: 0,
  semester: ''
});

/***/ }),

/***/ "./resources/js/store/mutations.js":
/*!*****************************************!*\
  !*** ./resources/js/store/mutations.js ***!
  \*****************************************/
/*! exports provided: SET_ACTIVECLEARANCE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_ACTIVECLEARANCE", function() { return SET_ACTIVECLEARANCE; });
var SET_ACTIVECLEARANCE = function SET_ACTIVECLEARANCE(state, activeclearance) {
  state.activeclearance = activeclearance;
};

/***/ }),

/***/ "./resources/js/store/state.js":
/*!*************************************!*\
  !*** ./resources/js/store/state.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  activeclearance: []
});

/***/ }),

/***/ "./resources/js/vuetify.js":
/*!*********************************!*\
  !*** ./resources/js/vuetify.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.common.js");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vuetify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vuetify */ "./node_modules/vuetify/dist/vuetify.js");
/* harmony import */ var vuetify__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vuetify__WEBPACK_IMPORTED_MODULE_1__);


vue__WEBPACK_IMPORTED_MODULE_0___default.a.use(vuetify__WEBPACK_IMPORTED_MODULE_1___default.a);
/* harmony default export */ __webpack_exports__["default"] = (new vuetify__WEBPACK_IMPORTED_MODULE_1___default.a({}));

/***/ }),

/***/ "./resources/sass/app.scss":
/*!*********************************!*\
  !*** ./resources/sass/app.scss ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 0:
/*!*************************************************************!*\
  !*** multi ./resources/js/app.js ./resources/sass/app.scss ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /Users/aldwinseboguero/Desktop/WEB/parsuoscs_v2/resources/js/app.js */"./resources/js/app.js");
module.exports = __webpack_require__(/*! /Users/aldwinseboguero/Desktop/WEB/parsuoscs_v2/resources/sass/app.scss */"./resources/sass/app.scss");


/***/ })

},[[0,"/js/manifest","/js/vendor"]]]);